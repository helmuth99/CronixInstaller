
PlaterDB = {
["captured_spells"] = {
[448640] = {
["encounterName"] = "",
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214264,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184581,
},
[429734] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207796,
},
[422836] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[367521] = {
["encounterName"] = "",
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185534,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91003,
},
[385536] = {
["encounterName"] = "",
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[198837] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[386176] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[226304] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[397931] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57109,
},
[193473] = {
["isChanneled"] = false,
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[272609] = {
["encounterName"] = "",
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138281,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184422,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216649,
},
[369828] = {
["encounterName"] = "",
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184023,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184581,
},
[115804] = {
["source"] = "Reban",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[373279] = {
["isChanneled"] = false,
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189988,
},
[49966] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 165189,
},
[261886] = {
["isChanneled"] = false,
["source"] = "Remembered Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221905,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128651,
},
[371238] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[375327] = {
["encounterName"] = "",
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190404,
},
[264057] = {
["isChanneled"] = false,
["source"] = "VazeelShak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[30213] = {
["isChanneled"] = false,
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[441119] = {
["encounterName"] = "",
["source"] = "Bee Wrangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210264,
},
[371240] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[3600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthbind Totem",
["npcID"] = 2630,
},
[427323] = {
["encounterName"] = "",
["source"] = "Cursed Stormrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[118297] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[412505] = {
["encounterName"] = "",
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205151,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[265721] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200349,
},
[396665] = {
["encounterName"] = "",
["source"] = "Magmas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199027,
},
[413529] = {
["encounterName"] = "",
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199749,
},
[378143] = {
["isChanneled"] = false,
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191841,
},
[462842] = {
["source"] = "Remembered Onyxia",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221585,
},
[422090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[382233] = {
["encounterName"] = "",
["source"] = "Batak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193462,
},
[255567] = {
["encounterName"] = "",
["source"] = "T'lonja",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128455,
},
[462844] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[412129] = {
["encounterName"] = "",
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205152,
},
[429376] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Remembered Hogger",
["npcID"] = 213570,
},
[57984] = {
["isChanneled"] = false,
["source"] = "Greater Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95061,
},
[377383] = {
["encounterName"] = "",
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192333,
},
[55078] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[419287] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[369465] = {
["encounterName"] = "",
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81522,
},
[31707] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[19483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infernal",
["npcID"] = 89,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184125,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[259277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Windnatter",
["npcID"] = 165189,
},
[270846] = {
["isChanneled"] = false,
["source"] = "Remembered Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221905,
},
[31308] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 17772,
},
[462216] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224240,
},
[200768] = {
["encounterName"] = "",
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95766,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[431302] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Darkflame Shade",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212422,
},
[427342] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[375348] = {
["encounterName"] = "",
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190401,
},
[192082] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wind Rush Totem",
["npcID"] = 97285,
},
[112042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 1860,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[79977] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "High Vindicator",
["npcID"] = 126206,
},
[396812] = {
["encounterName"] = "",
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196576,
},
[190614] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sleeping Version",
["npcID"] = 104096,
},
[375351] = {
["encounterName"] = "",
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190403,
},
[432967] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216340,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215405,
},
[384296] = {
["isChanneled"] = false,
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221876,
},
[450854] = {
["encounterName"] = "",
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211263,
},
[89751] = {
["isChanneled"] = false,
["source"] = "VazeelShak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[200261] = {
["encounterName"] = "",
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98243,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194181,
},
[24450] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Katze",
["npcID"] = 165189,
},
[465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[451496] = {
["encounterName"] = "",
["source"] = "Eye of the Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220003,
},
[429268] = {
["source"] = "Brood of Xeri'tac",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214375,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186739,
},
[386601] = {
["source"] = "VazeelShak",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[8221] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[183465] = {
["encounterName"] = "",
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91001,
},
[389541] = {
["isChanneled"] = false,
["source"] = "White Tiger Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196581,
},
[453161] = {
["encounterName"] = "",
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216338,
},
[388392] = {
["encounterName"] = "",
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196044,
},
[89753] = {
["isChanneled"] = false,
["source"] = "VazeelShak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[90328] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nah'qi",
["npcID"] = 165189,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216648,
},
[370764] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196116,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133007,
},
[265372] = {
["encounterName"] = "",
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131587,
},
[427616] = {
["encounterName"] = "",
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[199373] = {
["isChanneled"] = false,
["source"] = "Army of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24207,
},
[321968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[201226] = {
["encounterName"] = "",
["source"] = "Bloodtainted Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100531,
},
[378818] = {
["encounterName"] = "",
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192788,
},
[257756] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129527,
},
[388911] = {
["encounterName"] = "",
["source"] = "Spellbound Battleaxe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196577,
},
[411012] = {
["encounterName"] = "",
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45919,
},
[422382] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[421744] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[391723] = {
["encounterName"] = "",
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197697,
},
[320822] = {
["encounterName"] = "",
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165222,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84400,
},
[260249] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Windnatter",
["npcID"] = 165189,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191736,
},
[1126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214608,
},
[18958] = {
["source"] = "Onyxian Warder",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 12129,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216619,
},
[430053] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214608,
},
[48168] = {
["source"] = "Matron Nessa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96947,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211089,
},
[437719] = {
["encounterName"] = "",
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190373,
},
[422517] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207796,
},
[449090] = {
["encounterName"] = "",
["source"] = "Careless Hopgoblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[382277] = {
["encounterName"] = "",
["source"] = "Balara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193457,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181861,
},
[333477] = {
["encounterName"] = "",
["source"] = "Goregrind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163621,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100485,
},
[81262] = {
["isChanneled"] = false,
["source"] = "Efflorescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47649,
},
[263854] = {
["isChanneled"] = false,
["source"] = "Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[388479] = {
["source"] = "Treant Seedling",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212590,
},
[422137] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[192226] = {
["isChanneled"] = false,
["source"] = "Liquid Magma Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97369,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181861,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[35361] = {
["source"] = "Grove Walker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31228,
},
[427376] = {
["encounterName"] = "",
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40935,
},
[424949] = {
["source"] = "Magus of the Dead",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163366,
},
[64695] = {
["isChanneled"] = false,
["source"] = "Earthgrab Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60561,
},
[8220] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[114893] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190609,
},
[124009] = {
["isChanneled"] = false,
["source"] = "Xuen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63508,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[193505] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[443977] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135552,
},
[392983] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[459422] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104218,
},
[317898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Training Dummy",
["npcID"] = 194648,
},
[167381] = {
["isChanneled"] = false,
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194644,
},
[419204] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[388374] = {
["isChanneled"] = false,
["source"] = "Remembered Pterrordax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221878,
},
[2649] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bombshell",
["npcID"] = 165189,
},
[15550] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199000,
},
[224127] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212489,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[14100] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[388035] = {
["isChanneled"] = false,
["source"] = "Schildkröte",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[3110] = {
["isChanneled"] = false,
["source"] = "Gobrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 416,
},
[16827] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[429427] = {
["encounterName"] = "",
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214066,
},
[419207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[91800] = {
["source"] = "Risen Ghoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[419591] = {
["isChanneled"] = false,
["source"] = "Future Self",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208957,
},
[377502] = {
["isChanneled"] = false,
["source"] = "Memory of a Murloc",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216831,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[388801] = {
["encounterName"] = "",
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195855,
},
[387910] = {
["encounterName"] = "",
["source"] = "Algeth'ar Echoknight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196200,
},
[17253] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Windnatter",
["npcID"] = 165189,
},
[428969] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "DEBUFF",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207796,
},
[8222] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[383823] = {
["encounterName"] = "",
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192796,
},
[434589] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overfiend",
["npcID"] = 217429,
},
[418436] = {
["isChanneled"] = false,
["source"] = "Remembered Familiar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221904,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190484,
},
[79892] = {
["source"] = "Farseer Lopaa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96949,
},
[395833] = {
["isChanneled"] = false,
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221876,
},
[113746] = {
["source"] = "Fire Spirit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69791,
},
[167385] = {
["isChanneled"] = false,
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194644,
},
[383953] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[417807] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "DEBUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[183088] = {
["encounterName"] = "",
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90997,
},
[226406] = {
["encounterName"] = "",
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102287,
},
[372201] = {
["encounterName"] = "",
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[265019] = {
["encounterName"] = "",
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131436,
},
[422524] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[418430] = {
["isChanneled"] = false,
["source"] = "Remembered Familiar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221904,
},
[426368] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[383061] = {
["isChanneled"] = false,
["source"] = "Liquid Magma Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97369,
},
[100780] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[138130] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186738,
},
[386639] = {
["source"] = "Cleansing Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 195778,
},
[33395] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[459449] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[382712] = {
["encounterName"] = "",
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186229,
},
[124007] = {
["isChanneled"] = false,
["source"] = "Xuen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63508,
},
[19702] = {
["source"] = "Lucifron",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 12118,
},
[157375] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[257870] = {
["encounterName"] = "",
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 130011,
},
[176458] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blacksmithing Follower - Horde",
["npcID"] = 88402,
},
[200913] = {
["encounterName"] = "",
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98792,
},
[388941] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[134477] = {
["isChanneled"] = false,
["source"] = "VazeelShak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[422414] = {
["encounterName"] = "",
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208456,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[439152] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bubbles",
["npcID"] = 218646,
},
[378850] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Volatile Arcana",
["npcID"] = 216999,
},
[127801] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Turnip Punching Bag",
["npcID"] = 65310,
},
[422541] = {
["encounterName"] = "",
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208456,
},
[14518] = {
["source"] = "Remembered Crusader",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213564,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97788,
},
[201754] = {
["isChanneled"] = false,
["source"] = "Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[360969] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Windnatter",
["npcID"] = 165189,
},
[388944] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189340,
},
[290577] = {
["isChanneled"] = false,
["source"] = "Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149555,
},
[401361] = {
["isChanneled"] = false,
["source"] = "Remembered Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221885,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[19367] = {
["source"] = "Ancient Core Hound",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11673,
},
[451543] = {
["encounterName"] = "",
["source"] = "Eye of the Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220003,
},
[23511] = {
["source"] = "Dun Baldar North Marshal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14762,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83846,
},
[391118] = {
["encounterName"] = "",
["source"] = "Scalebane Lieutenant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191739,
},
[265540] = {
["encounterName"] = "",
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 130909,
},
[406215] = {
["isChanneled"] = false,
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221883,
},
[392013] = {
["isChanneled"] = false,
["source"] = "Remembered Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221885,
},
[267964] = {
["isChanneled"] = false,
["source"] = "VazeelShak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[1604] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[317791] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[264667] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Knackzahn",
["npcID"] = 165189,
},
[317792] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[18968] = {
["isChanneled"] = false,
["source"] = "Firemane Scalebane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4328,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43873,
},
[331718] = {
["encounterName"] = "",
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[433662] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[443500] = {
["encounterName"] = "",
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220197,
},
[372087] = {
["encounterName"] = "",
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[430980] = {
["isChanneled"] = false,
["source"] = "Congealed Memories",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222031,
},
[374898] = {
["isChanneled"] = false,
["source"] = "Remembered Lazy Peon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221895,
},
[387290] = {
["source"] = "Remembered Bloodpetal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221880,
},
[200345] = {
["encounterName"] = "",
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[426893] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[417806] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[419351] = {
["encounterName"] = "",
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208438,
},
[256627] = {
["encounterName"] = "",
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129374,
},
[323496] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165872,
},
[431494] = {
["encounterName"] = "",
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213934,
},
[89766] = {
["isChanneled"] = false,
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[384993] = {
["source"] = "Zenet Avis",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 193209,
},
[422935] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[1459] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[54049] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zhaazhum",
["npcID"] = 417,
},
[388060] = {
["encounterName"] = "",
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187033,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Aezwen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[369409] = {
["encounterName"] = "",
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184130,
},
[200291] = {
["encounterName"] = "",
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98691,
},
[324323] = {
["encounterName"] = "",
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165919,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[89798] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 49799,
},
[384868] = {
["encounterName"] = "",
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192789,
},
[422839] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "DEBUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186739,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189901,
},
[432520] = {
["encounterName"] = "",
["source"] = "Nightfall Darkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213893,
},
[425494] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "DEBUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[426645] = {
["encounterName"] = "",
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212673,
},
[377589] = {
["source"] = "Wirbelschläger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[14331] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[372862] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Churning Splash",
["npcID"] = 187318,
},
[415403] = {
["isChanneled"] = false,
["source"] = "Cleave Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198594,
},
[257397] = {
["encounterName"] = "",
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129788,
},
[372735] = {
["encounterName"] = "",
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187969,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[449130] = {
["encounterName"] = "",
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213343,
},
[411994] = {
["encounterName"] = "",
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[372225] = {
["encounterName"] = "",
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189467,
},
[340160] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[393432] = {
["encounterName"] = "",
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190340,
},
[459479] = {
["isChanneled"] = true,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[200784] = {
["encounterName"] = "",
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98792,
},
[8219] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[434824] = {
["encounterName"] = "",
["source"] = "Ixin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217531,
},
[257426] = {
["encounterName"] = "",
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129602,
},
[427359] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[421922] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[412200] = {
["encounterName"] = "",
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205723,
},
[448619] = {
["encounterName"] = "",
["source"] = "Careless Hopgoblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[58729] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taunka Spirit Guide",
["npcID"] = 31841,
},
[79962] = {
["source"] = "Varlean",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96946,
},
[17735] = {
["source"] = "Belmoth",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 1860,
},
[142421] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[116947] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[412215] = {
["encounterName"] = "",
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205158,
},
[459355] = {
["isChanneled"] = true,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[417443] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "DEBUFF",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 204931,
},
[392375] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 29264,
},
[261616] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Katy Stampwhistle",
["npcID"] = 132969,
},
[373636] = {
["isChanneled"] = false,
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221664,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[418588] = {
["isChanneled"] = false,
["source"] = "Future Self",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208957,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[375919] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[253721] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[382708] = {
["encounterName"] = "",
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193293,
},
[428453] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189719,
},
[367484] = {
["encounterName"] = "",
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[54482] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Recalled Heretic",
["npcID"] = 221343,
},
[397889] = {
["encounterName"] = "",
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200126,
},
[386542] = {
["source"] = "VazeelShak",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[61684] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Windnatter",
["npcID"] = 165189,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40633,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[367481] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Witherling",
["npcID"] = 194273,
},
[5672] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Healing Stream Totem",
["npcID"] = 3527,
},
[44530] = {
["isChanneled"] = false,
["source"] = "Hungry Boar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216820,
},
[412012] = {
["encounterName"] = "",
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[156718] = {
["encounterName"] = "",
["source"] = "Monstrous Corpse Spider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76104,
},
[226296] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[394976] = {
["isChanneled"] = false,
["source"] = "Void Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[387950] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187919,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[372557] = {
["source"] = "Scavenger Matriarch",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 192525,
},
[430441] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Darkflame Shade",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212422,
},
[224125] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[428397] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207796,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[377732] = {
["encounterName"] = "",
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184319,
},
[196816] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Divine Image",
["npcID"] = 198236,
},
[325174] = {
["isChanneled"] = false,
["source"] = "Spirit Link Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 53006,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131318,
},
[224126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
},
[199151] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96611,
},
[90171] = {
["isChanneled"] = false,
["source"] = "Mottled Drywallow Crocolisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4344,
},
[374029] = {
["isChanneled"] = false,
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221664,
},
[388976] = {
["encounterName"] = "",
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196671,
},
[432580] = {
["encounterName"] = "Fyrakk the Blazing",
["type"] = "BUFF",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214608,
},
[412738] = {
["source"] = "Remembered Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221885,
},
[266209] = {
["encounterName"] = "",
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 134284,
},
[374158] = {
["isChanneled"] = false,
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221664,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207796,
},
[426536] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Seed of Life",
["npcID"] = 210406,
},
[372311] = {
["encounterName"] = "",
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189266,
},
[391533] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rowdy",
["npcID"] = 197563,
},
[267999] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201788,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213008,
},
[208963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Totem of Wrath",
["npcID"] = 105427,
},
[428965] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Dark Colossus",
["encounterID"] = 2677,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214012,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[135029] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[205231] = {
["isChanneled"] = false,
["source"] = "Darkglare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103673,
},
[195321] = {
["source"] = "Fire Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69791,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131817,
},
[385023] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bound Salamander",
["npcID"] = 196968,
},
},
["profileKeys"] = {
["Cronixe - Blackhand"] = "croniX Nameplates",
["Evonix - Blackhand"] = "croniX Nameplates",
["Venøm - Mal'Ganis"] = "Default",
["Cronixqq - Mal'Ganis"] = "croniX Nameplates",
["Crônix - Blackhand"] = "croniX Nameplates",
["Cnxwarrior - Blackhand"] = "Default",
["Gravîty - Blackhand"] = "Default",
["Shoppingquee - Kazzak"] = "Default",
["Cronîx - Blackhand"] = "croniX Nameplates",
["Cronolie - Blackhand"] = "Default",
["Tbsn - Blackrock"] = "croniX Nameplates",
["Finânzamt - Blackmoore"] = "Default",
["Crônîx - Blackhand"] = "croniX Nameplates",
["Cronìx - Blackhand"] = "croniX Nameplates",
},
["profiles"] = {
["croniX Nameplates"] = {
["target_shady_combat_only"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["flashColor"] = {
0,
0.7137255072593689,
1,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1711217101,
["url"] = "https://wago.io/GqYRu4scK/14",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 736,
["semver"] = "1.2.2",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
86331,
88959,
156722,
164973,
168040,
168092,
169840,
186269,
196883,
198595,
198750,
198934,
198962,
199663,
200642,
201298,
201837,
208165,
209033,
209413,
211299,
211406,
252923,
253562,
259092,
260698,
260699,
260700,
260701,
260879,
264024,
265084,
272180,
274383,
281420,
367521,
369399,
369674,
371875,
372225,
372538,
373932,
374544,
376851,
377503,
378155,
378818,
381517,
382249,
382474,
385039,
387564,
387843,
390988,
392576,
396044,
396925,
397386,
397801,
400165,
410760,
415435,
426541,
428103,
428263,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["Prio"] = 99,
["Name"] = "Cast - Small Alert [Plater]",
["PlaterCore"] = 1,
["version"] = 14,
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1699197387,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 116,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
261265,
261266,
271590,
},
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1703179070,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Enabled"] = true,
["Revision"] = 637,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
375596,
377738,
378149,
},
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Add the buff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
["dotColor"] = {
0.5647059082984924,
0.5647059082984924,
0.5647059082984924,
1,
},
["castBarColor"] = {
1,
0.4313725829124451,
0,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1711217114,
["url"] = "https://wago.io/Now2_IBi2/1",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 891,
["semver"] = "1.0.0",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
200630,
200658,
418200,
377488,
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["version"] = 1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1699196964,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 370,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Desc"] = "Add the debuff name in the trigger box.",
["version"] = -1,
["Prio"] = 99,
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1711197536,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 722,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
265540,
226304,
393432,
375327,
372202,
209495,
369409,
260894,
226406,
193505,
375348,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
413529,
408141,
412215,
197974,
200913,
164357,
169179,
428293,
169929,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["Prio"] = 99,
["Name"] = "Cast - Frontal Cone [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1701990708,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["Icon"] = 1029718,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 282,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1701991514,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 146,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
},
["Desc"] = "Show the energy amount above the nameplate",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castbarColor"] = {
1,
0.4313725829124451,
0,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1703521925,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 1429,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
387955,
386546,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
192563,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
385578,
375596,
263365,
388392,
395859,
395872,
397914,
209410,
215433,
384194,
392451,
392924,
397889,
153395,
396812,
387975,
265089,
278755,
266106,
272183,
265523,
202181,
374080,
374045,
372223,
400386,
367500,
372711,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
369365,
257784,
88010,
410870,
266209,
342797,
413044,
204243,
279118,
225562,
264390,
265346,
264407,
411300,
412378,
412233,
407891,
416139,
429176,
165213,
169839,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
200630,
},
["Prio"] = 99,
["Name"] = "Cast - Big Alert [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
["targetingColor"] = {
1,
0.8666667342186,
0.090196080505848,
1,
},
["option1"] = {
1,
1,
1,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1701990707,
["url"] = "",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 292,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fixate Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fixate Nameplate Color",
},
},
["NpcNames"] = {
"187638",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["Time"] = 1701990753,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["Icon"] = "INTERFACE\\ICONS\\Achievement_PVP_P_01",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 49,
["Options"] = {
},
["Author"] = "抹了油的大叔-白银之手",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["Name"] = "NameplaterColor with Special Buff ID",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
277242,
},
["Desc"] = "NameplaterColor with Special Buff ID",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1701558432,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 545,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
273577,
389446,
},
["Prio"] = 99,
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1703514788,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 82,
["Options"] = {
},
["Enabled"] = false,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Prio"] = 99,
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["NpcNames"] = {
"141851",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1722354815,
["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Icon"] = 133006,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["Revision"] = 59,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Border Color [Plater]",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
},
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1701983051,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 377,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1711123181,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["Icon"] = "INTERFACE\\ICONS\\Spell_Fire_FelFlameStrike",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Revision"] = 1394,
["Options"] = {
},
["Enabled"] = false,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Prio"] = 99,
["Name"] = "M+ Important Spells [Plater]",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
258153,
258313,
274569,
278020,
261635,
272700,
268030,
278567,
278602,
258128,
257791,
258938,
265089,
272183,
269972,
270901,
270492,
263215,
268797,
262554,
253517,
255041,
250368,
278504,
266106,
268309,
269302,
263202,
278755,
272180,
263066,
267273,
265912,
274438,
268317,
268375,
276767,
264105,
265876,
270464,
265468,
256897,
280604,
268702,
253583,
250096,
278456,
262092,
257270,
267818,
262540,
263318,
263959,
257069,
256849,
267459,
253544,
268008,
267981,
272659,
264396,
264390,
274400,
269029,
272827,
269266,
263912,
258864,
256955,
265540,
270003,
270507,
257337,
268415,
275907,
268865,
260669,
260280,
265541,
256709,
277596,
276268,
265372,
263905,
265781,
257170,
268846,
270514,
258622,
258199,
256627,
259711,
258917,
263891,
268027,
268348,
269313,
272711,
271174,
268260,
269399,
268239,
264574,
261563,
257288,
257757,
267899,
255741,
264757,
260894,
263583,
276292,
272874,
264101,
264407,
271456,
262515,
275192,
270084,
257785,
267237,
266951,
267433,
255577,
270891,
267357,
258338,
257169,
270927,
273995,
260926,
264027,
267257,
253721,
260924,
263309,
266206,
268187,
260067,
274507,
276068,
263278,
258317,
256594,
268391,
268230,
260852,
267763,
268706,
264734,
288693,
288694,
270590,
290787,
72286,
},
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Time"] = 1703179113,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["Icon"] = 132221,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["Revision"] = 43,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["Enabled"] = false,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Name"] = "Jadefire [BOD] - Fire Shield",
["PlaterCore"] = 1,
["Prio"] = 99,
["SpellIds"] = {
286425,
},
["Desc"] = "Alert when the unit has the Fire Shield to be broken.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["castColor"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["useNameplateColor"] = false,
["castBarColor"] = {
1,
0.9058824181556702,
0.02745098248124123,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1711217073,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 740,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["Prio"] = 99,
["Name"] = "Cast - Ultra Important [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1711123193,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 74,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Auto set skull marker",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1711197671,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Enabled"] = true,
["Revision"] = 222,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Countdown",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1701991523,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 240,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 38, 0)\n        unitFrame.spitefulTexture:SetSize(25, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
["bgColor"] = {
0.3960784673690796,
0.02745098248124123,
1,
0.8100000023841858,
},
["bgWidth"] = 25,
["targetingColor"] = {
0.3960784673690796,
1,
0.8000000715255737,
1,
},
["textColor"] = {
0.9294118285179138,
1,
0.9764706492424011,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1715212257,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 38, 0)\n        unitFrame.spitefulTexture:SetSize(25, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 248,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Time to die Spiteful affix",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1711197638,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 1222,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1711197651,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 888,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Cast - Important Target [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight the target name",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetNameSize",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.98467203229666,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Key"] = "targetFrameWidth",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1699197391,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 68,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1703205560,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = false,
["Revision"] = 41,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castColor"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1711197635,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 550,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
373201,
384353,
265376,
193941,
411002,
169445,
},
["Prio"] = 99,
["Name"] = "Cast - Glowing [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show a different animation for the cast bar.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1711197641,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["Icon"] = 134229,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["Enabled"] = false,
["Revision"] = 42,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["Prio"] = 99,
["Name"] = "Cast - Effect After Cast [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1703521926,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 167,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["Prio"] = 99,
["Name"] = "Cast - Circle AoE [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["fillColor"] = {
1,
1,
1,
1,
},
["indicatorAlpha"] = 0.798833966255188,
["indicatorColor"] = {
1,
1,
1,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1703179032,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 152,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1711123197,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 579,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Important [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372550725937,
0,
0.56313106417656,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.46274509803922,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Key"] = "skullAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1701983056,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Tag Number [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["Options"] = {
},
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1711197615,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 897,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
381517,
385568,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["Prio"] = 99,
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Play a very fast flash when the cast start",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1703179130,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 170,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Warning [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Change the color of  add",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.43921571969986,
0.4588235616684,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["nameplateColor"] = {
1,
0,
0.2666666805744171,
1,
},
["useNameplateScale"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1703369577,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 116,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Non Elite Trash [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.094117656350136,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1711197538,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 117,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["Prio"] = 99,
["Name"] = "Cast - Shield Interrupt [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1711217056,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 516,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["Prio"] = 99,
["Name"] = "Cast - Stop Casting [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Just stop casting",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["useBackground"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1699197024,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/radio_64",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 112,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Explode on Die [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable, modTable)\n    \n    --settings\n    envTable.TextAboveNameplate = modTable.config[\"textAboveNameplate\"]\n    envTable.NameplateColor = modTable.config[\"nameplateColor\"]\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    -- local spellList = {\n    --     [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n    --     [355389] = \"Relentless Haunt\",\n    --     [338610] = \"Morbid Fixation\",\n    --     [338606] = \"Morbid Fixation\",\n    --     [358711] = \"Rage\"\n    -- }\n    \n    local spellList = modTable.config[\"spellList\"];\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
["nameplateColor"] = {
0,
1,
0.63529413938522,
1,
},
["spellList"] = {
{
"358711",
"Rage",
},
{
"338606",
"Morbid Fixation",
},
{
"338610",
"Morbid Fixation",
},
{
"355389",
"Relentless Haunt",
},
{
"321891",
"Freeze Tag Fixation",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            \n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1703205570,
["url"] = "https://wago.io/6KIY-sN-q/1",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable, modTable)\n    \n    --settings\n    envTable.TextAboveNameplate = modTable.config[\"textAboveNameplate\"]\n    envTable.NameplateColor = modTable.config[\"nameplateColor\"]\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    -- local spellList = {\n    --     [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n    --     [355389] = \"Relentless Haunt\",\n    --     [338610] = \"Morbid Fixation\",\n    --     [338606] = \"Morbid Fixation\",\n    --     [358711] = \"Rage\"\n    -- }\n    \n    local spellList = modTable.config[\"spellList\"];\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 401,
["semver"] = "1.0.0",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            \n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["version"] = 1,
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
1,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color you want to turn the nameplate.",
},
{
["Type"] = 3,
["Key"] = "textAboveNameplate",
["Value"] = "\"** On You **\"",
["Name"] = "Text Above Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The text to be displayed above the nameplate.",
},
{
["Type"] = 7,
["Key"] = "spellList",
["Value"] = {
{
"358711",
"Rage",
},
{
"338606",
"Morbid Fixation",
},
{
"338610",
"Morbid Fixation",
},
{
"355389",
"Relentless Haunt",
},
{
"321891",
"Freeze Tag Fixation",
},
{
"370597",
"Kill Order",
},
},
["Name"] = "Spell List",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "The list of spells that will trigger the script. The key is the spell id and the value is the en-US name of the spell.",
},
},
["NpcNames"] = {
"Frostbound Devoted",
"Illusionary Vulpin",
"Separation Assistant",
"Dark Sentinel",
"187638",
"Flamescale Tarasek",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1699197389,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = 236209,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 23,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["Prio"] = 99,
["Name"] = "Aura While Casting [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1711197622,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["Icon"] = 4038101,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 77,
["semver"] = "",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
388886,
209676,
377912,
},
["Prio"] = 99,
["Name"] = "Cast - On Going Cast [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.019607843831182,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1722370360,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = 1958262,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["Revision"] = 907,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
388623,
384699,
153501,
153686,
154442,
192018,
219488,
387067,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
265540,
226304,
375327,
372202,
209495,
260894,
226406,
193505,
375348,
257426,
255952,
257870,
413147,
383107,
377559,
390111,
369791,
369335,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
373742,
374533,
377204,
204667,
255567,
201226,
200768,
265372,
413529,
408141,
412215,
412129,
412505,
419351,
200261,
200345,
197974,
200913,
164357,
169179,
426645,
428293,
169929,
388976,
385958,
377383,
377034,
374361,
370764,
386660,
391118,
372222,
385578,
384696,
384868,
387629,
382277,
376892,
375943,
376683,
372087,
391726,
391723,
381525,
388060,
376170,
393432,
384524,
375351,
382708,
375251,
375439,
372311,
372201,
369563,
369573,
369409,
369061,
382712,
434824,
453161,
443500,
434779,
451496,
451543,
439621,
440218,
431494,
450854,
449130,
448640,
321968,
331718,
340160,
324323,
333488,
333477,
256627,
269029,
257862,
462216,
447395,
448105,
432198,
441119,
448619,
449090,
427323,
426893,
427616,
445457,
422414,
427025,
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Name"] = "CAST - FRONTALS",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Time"] = 1722438505,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1677,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
387955,
387615,
387606,
225100,
211401,
211470,
192563,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
263365,
395859,
395872,
397914,
209410,
215433,
392924,
397889,
153395,
265089,
278755,
266106,
272183,
265523,
202181,
374080,
400386,
209413,
207980,
257397,
257736,
382787,
369602,
369465,
381593,
265091,
265433,
382791,
376780,
257784,
88010,
410870,
266209,
342797,
413044,
204243,
279118,
255041,
259572,
200630,
225562,
201399,
264390,
265346,
263959,
278444,
265876,
264407,
266225,
415770,
415437,
412922,
417481,
418200,
411300,
412378,
412233,
407891,
416139,
227913,
164965,
164887,
168082,
427460,
429176,
271174,
165213,
169839,
413607,
388392,
388863,
396640,
377389,
387975,
387564,
375596,
386546,
384365,
386025,
386024,
386015,
387125,
387411,
387596,
384808,
373395,
397394,
372743,
384194,
373017,
367500,
367503,
377950,
372711,
374544,
385029,
384633,
374339,
374045,
395694,
374563,
374699,
376171,
377341,
377402,
395427,
372223,
384161,
378282,
369675,
369365,
369411,
436841,
392451,
434802,
434793,
436322,
448248,
448047,
433841,
443430,
443433,
442536,
452162,
453840,
431309,
450756,
451097,
431333,
426283,
449455,
429545,
445207,
429109,
322938,
324914,
326046,
340544,
337235,
322450,
335143,
324293,
327130,
256957,
275826,
272571,
454440,
451871,
76711,
324776,
427356,
424419,
424420,
423051,
444743,
437721,
440687,
441627,
430805,
432959,
426295,
426145,
427157,
},
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "CAST - MUST INTERRUPT",
["semver"] = "",
["Icon"] = 1305153,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
},
},
["url"] = "https://wago.io/xlCdA3th7/38",
["aura2_y_offset"] = 0,
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "Cronix",
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.49411767721176,
0.49803924560547,
0.50196081399918,
0.96000000089407,
},
["color_override_colors"] = {
[3] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
[4] = {
0.7764706611633301,
0.6980392336845398,
0.4666666984558106,
},
[5] = {
0.3960784673690796,
0.6509804129600525,
0.3960784673690796,
},
},
["npc_cache"] = {
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[187602] = {
"Qalashi Scaleripper",
"10.0 Dragon Isles",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[137458] = {
"Rotting Spore",
"The Underrot",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[126845] = {
"Captain Jolly",
"Freehold",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
},
[197847] = {
"Gnawbone Splintershield",
"10.0 Dragon Isles",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[114312] = {
"Moroes",
"Return to Karazhan",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[224731] = {
"Web Marauder",
"City of Threads",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[191469] = {
"Streamside Scythid",
"10.0 Dragon Isles",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[168446] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
},
[80937] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
},
[77483] = {
"Grom'kar Gunner",
"Grimrail Depot",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[167956] = {
"Dark Acolyte",
"Sanguine Depths",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[197904] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[205326] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[114338] = {
"Mana Confluence",
"Return to Karazhan",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"UNKNOWN",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[138063] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[138064] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
},
[212786] = {
"Cursed Stormrider",
"The Rookery",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[135258] = {
"Irontide Marauder",
"Siege of Boralus",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[101437] = {
"Burning Geode",
"Neltharion's Lair",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[92612] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[138338] = {
"Reanimated Guardian",
"The Underrot",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
},
[184908] = {
"Vy Interceptor",
"The Necrotic Wake",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[184910] = {
"Wo Drifter",
"The Necrotic Wake",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
},
[115388] = {
"King",
"Return to Karazhan",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[185680] = {
"Vy Relic",
"The Necrotic Wake",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[185683] = {
"Wo Relic",
"The Necrotic Wake",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
},
[185685] = {
"Urh Relic",
"The Necrotic Wake",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[161895] = {
"Thing From Beyond",
"Horrific Vision of Orgrimmar",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[114628] = {
"Skeletal Waiter",
"Return to Karazhan",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[219984] = {
"Xeph'itik",
"City of Threads",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"Bee Wrangler",
"Cinderbrew Meadery",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[207202] = {
"Void Fragment",
"The Rookery",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[114636] = {
"Phantom Guardsman",
"Return to Karazhan",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[187503] = {
"Ambitious Underboss",
"10.0 Dragon Isles",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[168058] = {
"Infused Quill-feather",
"Sanguine Depths",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[206698] = {
"Fanatical Mage",
"Priory of the Sacred Flame",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[187510] = {
"Duskpaw Trapper",
"10.0 Dragon Isles",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[171656] = {
"Venomous Sniper Captain",
"Plaguefall",
},
[126928] = {
"Irontide Corsair",
"Freehold",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
},
[79720] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
"enUS",
},
[187523] = {
"Duskpaw Stalker",
"10.0 Dragon Isles",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[115418] = {
"Spider",
"Return to Karazhan",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[174802] = {
"Venomous Sniper",
"Plaguefall",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
},
[114526] = {
"Ghostly Understudy",
"Return to Karazhan",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[123227] = {
"Keystone Vendor",
"Kalimdor",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
},
[199220] = {
"Violetwing Stagbeetle",
"10.0 Dragon Isles",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[153292] = {
"Training Dummy",
"Eastern Kingdoms",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[132820] = {
"Mudsnout Piglet",
"Skittering Hollow (Islands 5)",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Theater of Pain",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[189338] = {
"Riverbend Chomper",
"Dragon Isles",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[184911] = {
"Urh Dismantler",
"The Necrotic Wake",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[187552] = {
"Stormfang Shaman",
"10.0 Dragon Isles",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[65362] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[114790] = {
"Viz'aduum the Watcher",
"Return to Karazhan",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[126969] = {
"Trothak",
"Freehold",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[214421] = {
"Corrupted Thunderer",
"The Rookery",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[114792] = {
"Virtuous Lady",
"Return to Karazhan",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[190128] = {
"Zul'gamux",
"Tazavesh, the Veiled Market",
},
[177787] = {
"Mawsworn Hopebreaker",
"Sanctum of Domination",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[120651] = {
"Explosives",
"Atal'Dazar",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[187566] = {
"Hyena Matriarch",
"10.0 Dragon Isles",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[174773] = {
"Spiteful Shade",
"Black Rook Hold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[81407] = {
"Grimrail Bombardier",
"Grimrail Depot",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[183424] = {
"Virtuous Gentleman",
"Return to Karazhan",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[163503] = {
"Etherdiver",
"Spires of Ascension",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[212793] = {
"Void Ascendant",
"The Rookery",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Tazavesh, the Veiled Market",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[113398] = {
"Bloodtainted Fury",
"Darkheart Thicket",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[126848] = {
"Captain Eudora",
"Freehold",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
},
[45926] = {
"Servant of Asaad",
"The Vortex Pinnacle",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[164552] = {
"Rotmarrow Slime",
"Plaguefall",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[220003] = {
"Eye of the Queen",
"City of Threads",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[213343] = {
"Forge Loader",
"The Stonevault",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
},
["aura_cooldown_reverse"] = false,
["health_selection_overlay_alpha"] = 0.29999998211861,
["aura_stack_shadow_color"] = {
nil,
nil,
nil,
0,
},
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 2,
["indicator_worldboss"] = false,
["last_news_time"] = 1551553489,
["cast_statusbar_fadeout_time"] = 0.48999997973442,
["aura_stack_size"] = 7,
["plater_resources_align"] = "horizontal",
["aura_height2"] = 13,
["cast_colors"] = {
[384524] = {
true,
"orangered",
"",
},
[376683] = {
true,
"orangered",
"",
},
[375727] = {
true,
"orangered",
"",
},
[412129] = {
true,
"orangered",
"",
},
[265568] = {
false,
"orchid",
"",
},
[372222] = {
true,
"orangered",
"",
},
[372223] = {
false,
"darkorange",
"",
},
[427176] = {
true,
"orchid",
"",
},
[199151] = {
true,
"blue",
"",
},
[323137] = {
true,
"orangered",
"",
},
[372735] = {
true,
"orchid",
"",
},
[266209] = {
true,
"white",
"",
},
[269843] = {
true,
"orangered",
"",
},
[388801] = {
true,
"orchid",
"",
},
[426860] = {
true,
"orangered",
"",
},
[260894] = {
true,
"orangered",
"",
},
[375351] = {
true,
"orangered",
"",
},
[387910] = {
true,
"orchid",
"",
},
[226406] = {
true,
"orangered",
"",
},
[183088] = {
true,
"orangered",
"",
},
[412200] = {
true,
"orchid",
"",
},
[197974] = {
true,
"orangered",
"",
},
[384597] = {
false,
"white",
},
[370764] = {
true,
"orchid",
"",
},
[201226] = {
true,
"orangered",
"",
},
[377204] = {
true,
"orangered",
"",
},
[412012] = {
true,
"orchid",
"",
},
[427376] = {
true,
"orchid",
"",
},
[413607] = {
false,
"orchid",
"",
},
[432031] = {
true,
"orchid",
"",
},
[369365] = {
false,
"darkorange",
"",
},
[372107] = {
true,
"orangered",
"",
},
[257870] = {
true,
"orchid",
"",
},
[256627] = {
true,
"orangered",
"",
},
[333477] = {
true,
"orangered",
"",
},
[439621] = {
true,
"orangered",
"",
},
[451543] = {
true,
"orangered",
"",
},
[376892] = {
true,
"orangered",
"",
},
[367521] = {
true,
"orchid",
"",
},
[200784] = {
true,
"orchid",
"",
},
[257426] = {
true,
"orangered",
"",
},
[397931] = {
true,
"mediumturquoise",
"",
},
[269029] = {
true,
"orangered",
"",
},
[369563] = {
true,
"orangered",
"",
},
[200913] = {
true,
"orangered",
"",
},
[422541] = {
true,
"orchid",
"",
},
[448105] = {
true,
"orangered",
"",
},
[422414] = {
true,
"orangered",
"",
},
[427323] = {
true,
"orangered",
"",
},
[429427] = {
true,
"orchid",
"",
},
[412215] = {
true,
"orangered",
"",
},
[257397] = {
true,
"darkorange",
"",
},
[375943] = {
true,
"orangered",
"",
},
[448619] = {
true,
"orangered",
"",
},
[372311] = {
true,
"orangered",
"",
},
[449130] = {
true,
"orangered",
"",
},
[437719] = {
true,
"orchid",
"",
},
[333488] = {
true,
"orangered",
"",
},
[369061] = {
true,
"orangered",
"",
},
[396665] = {
true,
"orangered",
"",
},
[377732] = {
true,
"orchid",
"",
},
[408141] = {
true,
"orangered",
"",
},
[388060] = {
true,
"orangered",
"",
},
[450854] = {
true,
"orangered",
"",
},
[369573] = {
true,
"orangered",
"",
},
[164357] = {
true,
"orangered",
"",
},
[375439] = {
true,
"orangered",
"",
},
[378818] = {
true,
"orchid",
"",
},
[411012] = {
true,
"orangered",
"",
},
[386660] = {
true,
"orangered",
"",
},
[253544] = {
false,
"lime",
"",
},
[382708] = {
true,
"orangered",
"",
},
[200345] = {
true,
"orchid",
"",
},
[188169] = {
true,
"orangered",
"",
},
[385578] = {
true,
"orangered",
"",
},
[375251] = {
true,
"orangered",
"",
},
[428293] = {
true,
"orangered",
"",
},
[382712] = {
true,
"orangered",
"",
},
[374361] = {
true,
"orangered",
"",
},
[371875] = {
false,
"orangered",
"",
},
[426893] = {
true,
"orangered",
"",
},
[369675] = {
false,
"darkorange",
"",
},
[375065] = {
false,
"orangered",
"",
},
[265540] = {
true,
"orchid",
"",
},
[440218] = {
true,
"orangered",
"",
},
[384868] = {
true,
"orangered",
"",
},
[272609] = {
true,
"orangered",
"",
},
[226296] = {
true,
"orangered",
"",
},
[397889] = {
true,
"mediumturquoise",
"",
},
[257756] = {
true,
"orchid",
"",
},
[409492] = {
false,
"darkorange",
"",
},
[453161] = {
true,
"orangered",
"",
},
[253517] = {
false,
"white",
"",
},
[257862] = {
true,
"orangered",
"",
},
[331718] = {
true,
"orangered",
"",
},
[388392] = {
true,
"darkorange",
"",
},
[377034] = {
true,
"orangered",
"",
},
[427025] = {
true,
"orangered",
"",
},
[419351] = {
true,
"orangered",
"",
},
[451496] = {
true,
"orangered",
"",
},
[372225] = {
true,
"orchid",
"",
},
[372201] = {
true,
"orangered",
"",
},
[381525] = {
true,
"orangered",
"",
},
[367484] = {
true,
"orchid",
"",
},
[427616] = {
true,
"orangered",
"",
},
[447395] = {
true,
"orangered",
"",
},
[265721] = {
true,
"orangered",
"",
},
[426645] = {
true,
"orangered",
"",
},
[87618] = {
true,
"orangered",
"",
},
[321968] = {
true,
"orangered",
"",
},
[375327] = {
true,
"orangered",
"",
},
[387950] = {
true,
"orangered",
"",
},
[448640] = {
true,
"orangered",
"",
},
[377559] = {
true,
"orangered",
"",
},
[209628] = {
true,
"blue",
"",
},
[382277] = {
true,
"orangered",
"",
},
[383823] = {
true,
"orchid",
"",
},
[441119] = {
true,
"orangered",
"",
},
[169179] = {
true,
"orangered",
"",
},
[416139] = {
true,
"orangered",
"",
},
[427359] = {
true,
"orchid",
"",
},
[382233] = {
true,
"orangered",
"",
},
[369465] = {
true,
"orchid",
"",
},
[431494] = {
true,
"orangered",
"",
},
[200768] = {
true,
"orangered",
"",
},
[433662] = {
true,
"orchid",
"",
},
[265019] = {
true,
"orangered",
"",
},
[449090] = {
true,
"orangered",
"",
},
[385958] = {
true,
"orangered",
"",
},
[188404] = {
true,
"orangered",
"",
},
[445457] = {
true,
"orangered",
"",
},
[388911] = {
true,
"orchid",
"",
},
[340160] = {
true,
"orangered",
"",
},
[432198] = {
true,
"orangered",
"",
},
[200291] = {
true,
"orchid",
"",
},
[156718] = {
true,
"darkorange",
"",
},
[388976] = {
true,
"orangered",
"",
},
[369828] = {
true,
"orchid",
"",
},
[434779] = {
true,
"orangered",
"",
},
[391118] = {
true,
"orangered",
"",
},
[323496] = {
true,
"orangered",
"",
},
[324323] = {
true,
"orangered",
"",
},
[427342] = {
true,
"orchid",
"",
},
[443500] = {
true,
"orangered",
"",
},
[88194] = {
false,
"orangered",
"",
},
[373742] = {
true,
"orangered",
"",
},
[385536] = {
true,
"orchid",
"",
},
[432520] = {
true,
"orchid",
"",
},
[384978] = {
true,
"orchid",
"",
},
[200261] = {
true,
"orangered",
"",
},
[432967] = {
true,
"orchid",
"",
},
[375348] = {
true,
"orangered",
"",
},
[396812] = {
true,
"orchid",
"",
},
[411994] = {
true,
"darkorange",
"",
},
[369409] = {
true,
"orangered",
"",
},
[372087] = {
true,
"orangered",
"",
},
[462216] = {
true,
"orangered",
"",
},
[412505] = {
true,
"orangered",
"",
},
[226304] = {
true,
"orangered",
"",
},
[391723] = {
true,
"orangered",
"",
},
[260793] = {
true,
"orangered",
"",
},
[193505] = {
true,
"orangered",
"",
},
[320822] = {
true,
"orchid",
"",
},
[434824] = {
true,
"orangered",
"",
},
[393432] = {
true,
"orangered",
"",
},
[265372] = {
true,
"orangered",
"",
},
[183465] = {
true,
"orangered",
"",
},
[376170] = {
true,
"orangered",
"",
},
[268202] = {
true,
"orchid",
"",
},
[88308] = {
true,
"orangered",
"",
},
[435012] = {
true,
"orangered",
"",
},
[376171] = {
false,
"orchid",
"",
},
[255567] = {
true,
"orangered",
"",
},
[413529] = {
true,
"orangered",
"",
},
[377383] = {
true,
"orangered",
"",
},
[169929] = {
true,
"orangered",
"",
},
[253721] = {
true,
"orchid",
"",
},
[200630] = {
false,
"darkorange",
"",
},
},
["castbar_target_anchor"] = {
["side"] = 9,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Unit - Show Energy"] = 11,
["Blink by Time Left"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Explosion Affix M+"] = 14,
["Unit - Health Markers"] = 12,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Add - Explode on Die [P]"] = 1,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - On Going Cast [P]"] = 2,
["Spiteful Affix"] = 3,
["Cast - Stop Casting"] = 4,
["Auto Set Skull"] = 11,
["Color Change"] = 1,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Tank Interrupt"] = 12,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 15,
["Cast - Very Important"] = 15,
["Fixate On You"] = 11,
},
["extra_icon_anchor"] = {
["x"] = 0,
["side"] = 9,
},
["range_check_alpha"] = 0.7999999523162842,
["semver"] = "1.0.37",
["plater_resources_padding"] = 2,
["aura_frame2_anchor"] = {
["y"] = 0,
["x"] = 2.5,
["side"] = 6,
},
["cast_statusbar_texture"] = "Cronix",
["auto_toggle_friendly"] = {
["world"] = false,
},
["indicator_faction"] = false,
["show_healthbars_on_not_attackable"] = true,
["plater_resources_show_number"] = false,
["debuff_show_cc_border"] = {
0.090196080505848,
0.090196080505848,
0.090196080505848,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 12,
["health_statusbar_texture"] = "Cronix",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Monk Statue"] = 2,
["Combo Points"] = 6,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Execute Range"] = 1,
},
["extra_icon_border_color"] = {
0.090196080505848,
0.090196080505848,
0.090196080505848,
},
["minor_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["captured_spells"] = {
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189719,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184125,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43873,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186739,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213008,
},
[253721] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[372735] = {
["encounterName"] = "",
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187969,
},
[266209] = {
["encounterName"] = "",
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 134284,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133007,
},
[388801] = {
["encounterName"] = "",
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195855,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211089,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131318,
},
[375351] = {
["encounterName"] = "",
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190403,
},
[387910] = {
["encounterName"] = "",
["source"] = "Algeth'ar Echoknight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196200,
},
[226406] = {
["encounterName"] = "",
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102287,
},
[183088] = {
["encounterName"] = "",
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90997,
},
[412200] = {
["encounterName"] = "",
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205723,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100485,
},
[370764] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196116,
},
[201226] = {
["encounterName"] = "",
["source"] = "Bloodtainted Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100531,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189901,
},
[412012] = {
["encounterName"] = "",
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[427376] = {
["encounterName"] = "",
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40935,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[257870] = {
["encounterName"] = "",
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 130011,
},
[256627] = {
["encounterName"] = "",
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129374,
},
[333477] = {
["encounterName"] = "",
["source"] = "Goregrind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163621,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216648,
},
[451543] = {
["encounterName"] = "",
["source"] = "Eye of the Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220003,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[367521] = {
["encounterName"] = "",
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185534,
},
[200784] = {
["encounterName"] = "",
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98792,
},
[257426] = {
["encounterName"] = "",
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129602,
},
[397931] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57109,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129208,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184581,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135552,
},
[422541] = {
["encounterName"] = "",
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208456,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[422414] = {
["encounterName"] = "",
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208456,
},
[427323] = {
["encounterName"] = "",
["source"] = "Cursed Stormrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[429427] = {
["encounterName"] = "",
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214066,
},
[412215] = {
["encounterName"] = "",
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205158,
},
[257397] = {
["encounterName"] = "",
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129788,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186151,
},
[448619] = {
["encounterName"] = "",
["source"] = "Careless Hopgoblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[372311] = {
["encounterName"] = "",
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189266,
},
[449130] = {
["encounterName"] = "",
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213343,
},
[437719] = {
["encounterName"] = "",
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190373,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184422,
},
[396665] = {
["encounterName"] = "",
["source"] = "Magmas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199027,
},
[377732] = {
["encounterName"] = "",
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184319,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201788,
},
[388060] = {
["encounterName"] = "",
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187033,
},
[450854] = {
["encounterName"] = "",
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211263,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184581,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81522,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181861,
},
[378818] = {
["encounterName"] = "",
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192788,
},
[411012] = {
["encounterName"] = "",
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45919,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191736,
},
[382708] = {
["encounterName"] = "",
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193293,
},
[200345] = {
["encounterName"] = "",
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91003,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186739,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181861,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40633,
},
[382712] = {
["encounterName"] = "",
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186229,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190609,
},
[265540] = {
["encounterName"] = "",
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 130909,
},
[426893] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216649,
},
[397889] = {
["encounterName"] = "",
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200126,
},
[257756] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129527,
},
[427342] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[453161] = {
["encounterName"] = "",
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216338,
},
[331718] = {
["encounterName"] = "",
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[388392] = {
["encounterName"] = "",
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196044,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[226296] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[199151] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96611,
},
[372201] = {
["encounterName"] = "",
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[412129] = {
["encounterName"] = "",
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205152,
},
[367484] = {
["encounterName"] = "",
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[434824] = {
["encounterName"] = "",
["source"] = "Ixin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217531,
},
[451496] = {
["encounterName"] = "",
["source"] = "Eye of the Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220003,
},
[255567] = {
["encounterName"] = "",
["source"] = "T'lonja",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128455,
},
[426645] = {
["encounterName"] = "",
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212673,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[321968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[393432] = {
["encounterName"] = "",
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190340,
},
[375327] = {
["encounterName"] = "",
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190404,
},
[387950] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187919,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[320822] = {
["encounterName"] = "",
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165222,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104218,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84400,
},
[382277] = {
["encounterName"] = "",
["source"] = "Balara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193457,
},
[441119] = {
["encounterName"] = "",
["source"] = "Bee Wrangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210264,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[183465] = {
["encounterName"] = "",
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91001,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83846,
},
[369465] = {
["encounterName"] = "",
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[431494] = {
["encounterName"] = "",
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213934,
},
[272609] = {
["encounterName"] = "",
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 138281,
},
[200768] = {
["encounterName"] = "",
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95766,
},
[265019] = {
["encounterName"] = "",
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131436,
},
[449090] = {
["encounterName"] = "",
["source"] = "Careless Hopgoblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[369828] = {
["encounterName"] = "",
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184023,
},
[433662] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[388911] = {
["encounterName"] = "",
["source"] = "Spellbound Battleaxe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196577,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194181,
},
[226304] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[156718] = {
["encounterName"] = "",
["source"] = "Monstrous Corpse Spider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76104,
},
[388976] = {
["encounterName"] = "",
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196671,
},
[427359] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216619,
},
[340160] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[200291] = {
["encounterName"] = "",
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98691,
},
[419351] = {
["encounterName"] = "",
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208438,
},
[411994] = {
["encounterName"] = "",
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186738,
},
[391118] = {
["encounterName"] = "",
["source"] = "Scalebane Lieutenant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191739,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189340,
},
[385536] = {
["encounterName"] = "",
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[432520] = {
["encounterName"] = "",
["source"] = "Nightfall Darkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213893,
},
[443500] = {
["encounterName"] = "",
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220197,
},
[200261] = {
["encounterName"] = "",
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98243,
},
[432967] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216340,
},
[324323] = {
["encounterName"] = "",
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165919,
},
[323496] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165872,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97788,
},
[369409] = {
["encounterName"] = "",
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184130,
},
[372087] = {
["encounterName"] = "",
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[383823] = {
["encounterName"] = "",
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192796,
},
[412505] = {
["encounterName"] = "",
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205151,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199000,
},
[391723] = {
["encounterName"] = "",
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197697,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131817,
},
[193505] = {
["encounterName"] = "",
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91000,
},
[462216] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224240,
},
[396812] = {
["encounterName"] = "",
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196576,
},
[375348] = {
["encounterName"] = "",
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190401,
},
[265372] = {
["encounterName"] = "",
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131587,
},
[427616] = {
["encounterName"] = "",
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190484,
},
[448640] = {
["encounterName"] = "",
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214264,
},
[265721] = {
["encounterName"] = "",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200349,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215405,
},
[372225] = {
["encounterName"] = "",
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189467,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128651,
},
[413529] = {
["encounterName"] = "",
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199749,
},
[377383] = {
["encounterName"] = "",
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192333,
},
[382233] = {
["encounterName"] = "",
["source"] = "Batak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193462,
},
[200913] = {
["encounterName"] = "",
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98792,
},
[384868] = {
["encounterName"] = "",
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192789,
},
},
["aura_frame1_anchor"] = {
["y"] = 8,
["side"] = 1,
},
["aura_timer_text_font"] = "Cronix-Bold",
["cast_statusbar_color_finished"] = {
0.52156865596771,
0.83921575546265,
0.58431375026703,
},
["extra_icon_stack_font"] = "Cronix",
["aura_height"] = 13,
["cast_statusbar_bgtexture"] = "Cronix",
["aura2_x_offset"] = 2.5,
["target_indicator"] = "NONE",
["extra_icon_stack_size"] = 7,
["aura_show_buff_by_the_unit"] = false,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.2000000476837",
["nameplateLargeTopInset"] = "0.089999996125698",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1.0",
["nameplateOtherBottomInset"] = "0.070000000298023",
["nameplateTargetBehindMaxDistance"] = "30",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1.1000000238419",
["ShowNamePlateLoseAggroFlash"] = "1",
["ShowClassColorInNameplate"] = "1",
["nameplateLargeBottomInset"] = "0.070000000298023",
["nameplateMotion"] = "1",
["nameplateSelfTopInset"] = "0.5",
["nameplateMinScale"] = "1",
["nameplateOccludedAlphaMult"] = "1",
["nameplateOtherTopInset"] = "0.089999996125698",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.2",
["nameplatePlayerMaxDistance"] = "60",
["nameplateShowFriendlyGuardians"] = "0",
["NamePlateHorizontalScale"] = "1",
["nameplateSelfAlpha"] = "0.75",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateShowFriends"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
},
["login_counter"] = 17923,
["click_space_friendly"] = {
135,
38,
},
["aura_stack_font"] = "Cronix-Bold",
["blizzard_nameplate_font"] = "Cronix-Bold",
["auto_toggle_combat"] = {
["blizz_healthbar_ooc"] = true,
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["aura_timer_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["auras_per_row_amount"] = 7,
["plater_resources_show_depleted"] = false,
["blizzard_nameplate_large_font"] = "Cronix-Bold",
["aura_stack_anchor"] = {
["y"] = 4.8999996185303,
["x"] = 2.7999992370605,
["side"] = 5,
},
["usePlaterWidget"] = false,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Cronix-Bold",
["power_percent_text_enabled"] = false,
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["big_actortitle_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Cronix-Bold",
["click_through"] = true,
["big_actorname_text_font"] = "Accidental Presidency",
["power_percent_text_color"] = {
1,
1,
1,
},
["percent_text_font"] = "Cronix-Bold",
["power_percent_text_font"] = "Cronix-Bold",
},
["friendlyplayer"] = {
["spellpercent_text_font"] = "ViklunD's SexFont",
["level_text_size"] = 7,
["actorname_use_class_color"] = true,
["cast"] = {
120,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["y"] = -0.8000030517578125,
["x"] = 3.899993896484375,
["side"] = 5,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "Cronix-Bold",
["actorname_text_font"] = "Cronix-Bold",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 7,
["only_damaged"] = false,
["quest_color_enemy"] = {
0.63921570777893,
1,
0.31764706969261,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Cronix",
["spellpercent_text_size"] = 7,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["percent_show_percent"] = false,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
120,
8,
},
["mana"] = {
nil,
4,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["side"] = 11,
},
["big_actorname_text_size"] = 8,
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
0.63921570777893,
1,
0.31764706969261,
1,
},
["actorname_text_size"] = 8,
["big_actorname_text_font"] = "Cronix",
["actorname_use_friends_color"] = false,
["actorname_text_anchor"] = {
["y"] = -3,
},
["percent_text_size"] = 7,
["big_actortitle_text_size"] = 8,
["percent_text_font"] = "Cronix-Bold",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["quest_color_enabled"] = true,
["health_incombat"] = {
120,
12,
},
["health"] = {
120,
12,
},
["spellname_text_font"] = "Cronix-Bold",
["power_percent_text_font"] = "Accidental Presidency",
["spellname_text_size"] = 7,
["level_text_alpha"] = 0.29999998211861,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "ViklunD's SexFont",
["level_text_size"] = 7,
["cast"] = {
125,
},
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["y"] = -0.8000030517578125,
["x"] = 3.899993896484375,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Cronix-Bold",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
0.28627452254295,
1,
0.094117656350136,
1,
},
["big_actortitle_text_font"] = "Cronix-Bold",
["spellpercent_text_size"] = 7,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["cast_incombat"] = {
125,
10,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = 0.09999847412109375,
["x"] = -0.8000030517578125,
["side"] = 3,
},
["percent_text_anchor"] = {
["side"] = 11,
},
["spellname_text_font"] = "Cronix-Bold",
["only_names"] = false,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
0.28627452254295,
1,
0.094117656350136,
1,
},
["actorname_text_size"] = 7,
["big_actorname_text_font"] = "Cronix-Bold",
["actorname_text_font"] = "Cronix-Bold",
["percent_text_ooc"] = true,
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Cronix-Bold",
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_enabled"] = true,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 7,
["health"] = {
125,
14,
},
["percent_show_health"] = true,
["percent_text_size"] = 7,
["actorname_text_anchor"] = {
["y"] = -0.5,
["side"] = 1,
},
["health_incombat"] = {
125,
14,
},
},
["enemynpc"] = {
["spellpercent_text_font"] = "ViklunD's SexFont",
["level_text_size"] = 7,
["cast"] = {
125,
},
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["y"] = -0.80000305175781,
["x"] = 3.8999938964844,
["side"] = 5,
},
["level_text_font"] = "Cronix-Bold",
["actorname_text_font"] = "Cronix-Bold",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
0.28627452254295,
1,
0.094117656350136,
},
["big_actortitle_text_font"] = "Cronix-Bold",
["spellpercent_text_size"] = 7,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["cast_incombat"] = {
125,
10,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = 0.099998474121094,
["x"] = -0.80000305175781,
["side"] = 3,
},
["percent_text_anchor"] = {
["side"] = 11,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
0.28627452254295,
1,
0.094117656350136,
},
["actorname_text_size"] = 7,
["power_percent_text_font"] = "Accidental Presidency",
["big_actorname_text_size"] = 8,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["actorname_text_anchor"] = {
["y"] = -0.5,
["side"] = 1,
},
["percent_text_size"] = 7,
["percent_text_font"] = "Cronix-Bold",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
125,
14,
},
["health"] = {
125,
14,
},
["spellname_text_font"] = "Cronix-Bold",
["big_actorname_text_font"] = "Cronix-Bold",
["level_text_alpha"] = 0.29999998211861,
["spellname_text_size"] = 7,
["level_text_enabled"] = false,
},
["global_health_width"] = 120,
["enemyplayer"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "ViklunD's SexFont",
["level_text_size"] = 7,
["cast"] = {
125,
},
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["y"] = -0.8000030517578125,
["x"] = 3.899993896484375,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Cronix-Bold",
["actorname_text_font"] = "Cronix-Bold",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
0.28627452254295,
1,
0.094117656350136,
1,
},
["big_actortitle_text_font"] = "Cronix-Bold",
["spellpercent_text_size"] = 7,
["level_text_anchor"] = {
["y"] = 100,
["x"] = 1,
["side"] = 5,
},
["cast_incombat"] = {
125,
10,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["y"] = 0.09999847412109375,
["x"] = -0.8000030517578125,
["side"] = 3,
},
["percent_text_anchor"] = {
["side"] = 11,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
0.28627452254295,
1,
0.094117656350136,
1,
},
["actorname_text_size"] = 7,
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_alpha"] = 0.29999998211861,
["percent_text_size"] = 7,
["percent_text_font"] = "Cronix-Bold",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["quest_enabled"] = true,
["big_actorname_text_font"] = "Cronix-Bold",
["quest_color_enabled"] = true,
["spellname_text_size"] = 7,
["health"] = {
125,
14,
},
["actorname_text_anchor"] = {
["y"] = -0.5,
["side"] = 1,
},
["spellname_text_font"] = "Cronix-Bold",
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
125,
14,
},
["level_text_enabled"] = false,
},
["global_health_height"] = 10,
},
["aura_y_offset"] = 8,
["use_ui_parent"] = true,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.7049064040184,
},
["indicator_spec"] = false,
["border_thickness"] = 0.4999999701976776,
["plater_resources_grow_direction"] = "center",
["resources_settings"] = {
["chr"] = {
["Player-3725-0C1533F1"] = "ComboPoints",
["Player-3725-0C1632F3"] = "HolyPower",
["Player-3691-0A230CF3"] = "Runes",
["Player-3725-0A9FE377"] = "Chi",
["Player-3691-09E75064"] = "Essence",
["Player-4184-003D46E0"] = "Chi",
["Player-3725-0C16E871"] = "HolyPower",
["Player-3725-0AA8E1EF"] = "Runes",
["Player-3691-09521F9C"] = "Runes",
["Player-3691-06C34E69"] = "Runes",
},
},
["spell_animation_list"] = {
["30451"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 30451,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["285452"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 285452,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["2098"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 2098,
["class"] = "ROGUE",
["time"] = 1539293610,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.079999998211861,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 1.5,
["fade_in"] = 0,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 2.710000038147,
},
},
["184575"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 184575,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["185099"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.18999999761581,
["absolute_sineX"] = false,
["scaleY"] = 0.84999847412109,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 185099,
["class"] = "MONK",
["time"] = 1539712435,
["desc"] = "",
},
},
["198030"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.31999999284744,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 198030,
["class"] = "DEMONHUNTER",
["time"] = 1539717136,
["desc"] = "",
},
},
["85948"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 85948,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["35395"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 35395,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
},
["52174"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 52174,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
["155166"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 155166,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["228598"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 228598,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["108853"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 108853,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["205523"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 205523,
["class"] = "MONK",
["time"] = 1539295885,
["desc"] = "",
},
},
["245388"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.03,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 245388,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.01,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 2,
},
},
["6343"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.1,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 6343,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["206930"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 222026,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["275779"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = -1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 275779,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
},
["53595"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 53595,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["197834"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 197834,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
},
["265157"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.096889182925224,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["info"] = {
["spellid"] = 265157,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 0.50999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 39.995635986328,
},
},
["7268"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 7268,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["100780"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 100780,
["class"] = "MONK",
["time"] = 1539295910,
["desc"] = "",
},
},
["5374"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 5374,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
},
["31935"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 31935,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["11366"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 11366,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["199552"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 199552,
["class"] = "DEMONHUNTER",
["time"] = 1539717392,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["228600"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 228600,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["203782"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 203782,
["class"] = "DEMONHUNTER",
["time"] = 1539716639,
["desc"] = "",
},
},
["162243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 162243,
["class"] = "DEMONHUNTER",
["time"] = 1539717356,
["desc"] = "",
},
},
["117418"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["info"] = {
["spellid"] = 117418,
["class"] = "MONK",
["time"] = 1539296387,
["desc"] = "",
},
},
["204157"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 204157,
["class"] = "DEMONHUNTER",
["time"] = 1539716637,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["222026"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 222026,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["324540"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["info"] = {
["spellid"] = 324540,
["class"] = "WARLOCK",
["time"] = 1539292087,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["264178"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["spellid"] = 264178,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["55090"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 3.9020702838898,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.7999999523163,
},
["info"] = {
["spellid"] = 55090,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["46968"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["info"] = {
["spellid"] = 46968,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["148135"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["info"] = {
["spellid"] = 148135,
["class"] = "MONK",
["time"] = 1539295958,
["desc"] = "",
},
},
["257045"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 257045,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["228354"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 228354,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["27285"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 27285,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["53351"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 53351,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["44425"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 44425,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["185763"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["info"] = {
["spellid"] = 185763,
["class"] = "ROGUE",
["time"] = 1539275610,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["31661"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 31661,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["222024"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["info"] = {
["spellid"] = 222024,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
["107270"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 107270,
["class"] = "MONK",
["time"] = 1539296490,
["desc"] = "",
},
},
["199547"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 199547,
["class"] = "DEMONHUNTER",
["time"] = 1539717795,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["17364"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 17364,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["116858"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["duration"] = 0.099999994039536,
["scale_downX"] = 0.94999998807907,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.0499999523163,
["cooldown"] = 0.75,
["scale_downY"] = 0.94999998807907,
},
["info"] = {
["spellid"] = 116858,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = 4.9699974060059,
["amplitude"] = 0.59999996423721,
["fade_in"] = 0.049999997019768,
["duration"] = 0.099999994039536,
["cooldown"] = 0.25,
["frequency"] = 2.8999998569489,
},
},
["86040"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["spellid"] = 86040,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["100784"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 100784,
["class"] = "MONK",
["time"] = 1539296312,
["desc"] = "",
},
},
["187708"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 187708,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["228478"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 228478,
["class"] = "DEMONHUNTER",
["time"] = 1539716636,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["188443"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 188443,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
},
["189112"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["info"] = {
["spellid"] = 189112,
["class"] = "DEMONHUNTER",
["time"] = 1539715467,
["desc"] = "",
},
},
["32645"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 32645,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
["280720"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 280720,
["class"] = "ROGUE",
["time"] = 1539292087,
["desc"] = "",
},
},
["187874"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["info"] = {
["spellid"] = 187874,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
},
["49998"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 49998,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["196819"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 196819,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
["8042"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 285452,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["20243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 20243,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["2643"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 2643,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["199804"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["info"] = {
["spellid"] = 199804,
["class"] = "ROGUE",
["time"] = 1539293872,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["196278"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 196278,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["185438"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 185438,
["class"] = "ROGUE",
["time"] = 1539204014,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
},
["indicator_scale"] = 0.99999994039536,
["cast_statusbar_spark_offset"] = -10,
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[40788] = {
false,
false,
"orangered",
},
[200126] = {
true,
false,
"fuchsia",
},
[194241] = {
false,
false,
"cyan",
},
[190403] = {
true,
false,
"aqua",
},
[195265] = {
true,
false,
"fuchsia",
},
[100991] = {
false,
false,
"fuchsia",
},
[99200] = {
false,
false,
"mediumslateblue",
},
[190404] = {
true,
false,
"aqua",
},
[190405] = {
true,
false,
"fuchsia",
},
[133345] = {
false,
false,
"goldenrod",
},
[185032] = {
false,
false,
"mediumpurple",
},
[183497] = {
false,
false,
"blue",
},
[164563] = {
false,
false,
"blue",
},
[210109] = {
true,
false,
"aqua",
},
[169425] = {
false,
false,
"gold",
},
[196548] = {
true,
false,
"fuchsia",
},
[168658] = {
false,
false,
"deepskyblue",
},
[165076] = {
true,
false,
"magenta",
},
[169426] = {
false,
false,
"gold",
},
[200387] = {
false,
false,
"mediumslateblue",
},
[180429] = {
false,
false,
"mediumpurple",
},
[217531] = {
true,
false,
"fuchsia",
},
[98691] = {
false,
false,
"lime",
},
[169428] = {
false,
false,
"gold",
},
[151773] = {
false,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"fuchsia",
},
[169429] = {
false,
false,
"gold",
},
[141283] = {
false,
false,
"navajowhite",
},
[209090] = {
false,
false,
"mediumslateblue",
},
[169430] = {
false,
false,
"gold",
},
[136934] = {
false,
false,
"navajowhite",
},
[141284] = {
false,
false,
"gold",
},
[180433] = {
false,
false,
"orangered",
},
[199368] = {
true,
false,
"DEATHKNIGHT",
},
[102019] = {
false,
false,
"aqua",
},
[189901] = {
false,
false,
"mediumpurple",
},
[141285] = {
false,
false,
"lightgreen",
},
[131818] = {
false,
false,
"magenta",
},
[98949] = {
false,
false,
"mediumpurple",
},
[196043] = {
true,
false,
"fuchsia",
},
[168153] = {
false,
false,
"fuchsia",
},
[131819] = {
true,
false,
"fuchsia",
},
[228540] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[184018] = {
false,
false,
"mediumslateblue",
},
[100485] = {
true,
false,
"aqua",
},
[176598] = {
false,
false,
"blue",
},
[102788] = {
true,
false,
"fuchsia",
},
[129527] = {
false,
false,
"WARRIOR",
},
[196045] = {
true,
false,
"fuchsia",
},
[101637] = {
false,
false,
"deepskyblue",
},
[131821] = {
true,
false,
"fuchsia",
},
[187602] = {
true,
false,
"dodgerblue",
},
[175576] = {
false,
false,
"fuchsia",
},
[58319] = {
false,
false,
"dimgray",
},
[39960] = {
false,
false,
"WARRIOR",
},
[100486] = {
false,
false,
"aqua",
},
[44566] = {
false,
false,
"mediumpurple",
},
[178392] = {
false,
false,
"deepskyblue",
},
[131823] = {
false,
false,
"mediumslateblue",
},
[184022] = {
true,
false,
"fuchsia",
},
[98696] = {
false,
false,
"deepskyblue",
},
[129529] = {
false,
false,
"lime",
},
[113537] = {
true,
false,
"aqua",
},
[131825] = {
false,
false,
"mediumslateblue",
},
[178139] = {
false,
false,
"mediumpurple",
},
[133361] = {
false,
false,
"fuchsia",
},
[164578] = {
false,
false,
"blue",
},
[150250] = {
false,
false,
"deepskyblue",
},
[178141] = {
false,
false,
"deepskyblue",
},
[137713] = {
false,
false,
"paleturquoise",
},
[150251] = {
false,
false,
"aqua",
},
[178142] = {
false,
false,
"aqua",
},
[137458] = {
false,
false,
"deepskyblue",
},
[199124] = {
false,
false,
"deepskyblue",
},
[126845] = {
false,
false,
"fuchsia",
},
[131318] = {
false,
false,
"mediumslateblue",
},
[168420] = {
true,
false,
"fuchsia",
},
[150253] = {
false,
false,
"mediumslateblue",
},
[168932] = {
false,
false,
"gold",
},
[82579] = {
false,
false,
"deepskyblue",
},
[129788] = {
true,
false,
"fuchsia",
},
[190426] = {
false,
false,
"cyan",
},
[137716] = {
false,
false,
"blue",
},
[197847] = {
false,
false,
"deepskyblue",
},
[177889] = {
false,
false,
"mediumslateblue",
},
[168934] = {
false,
false,
"fuchsia",
},
[45912] = {
true,
false,
"fuchsia",
},
[177891] = {
false,
false,
"deepskyblue",
},
[86547] = {
false,
false,
"blue",
},
[177892] = {
false,
false,
"deepskyblue",
},
[168425] = {
false,
false,
"fuchsia",
},
[168681] = {
false,
false,
"mediumslateblue",
},
[197595] = {
false,
false,
"mediumpurple",
},
[40923] = {
false,
false,
"WARRIOR",
},
[94224] = {
false,
false,
"fuchsia",
},
[202969] = {
false,
false,
"magenta",
},
[136186] = {
false,
false,
"honeydew",
},
[172265] = {
true,
false,
"fuchsia",
},
[160495] = {
true,
false,
"magenta",
},
[186339] = {
true,
false,
"fuchsia",
},
[193760] = {
false,
false,
"mediumslateblue",
},
[192481] = {
false,
false,
"fuchsia",
},
[81432] = {
false,
false,
"deepskyblue",
},
[114312] = {
false,
false,
"mediumslateblue",
},
[196576] = {
true,
false,
"fuchsia",
},
[200926] = {
false,
false,
"mediumslateblue",
},
[168942] = {
true,
false,
"fuchsia",
},
[196577] = {
false,
false,
"snow",
},
[131585] = {
false,
false,
"blue",
},
[134144] = {
false,
false,
"lightgreen",
},
[197857] = {
false,
false,
"lime",
},
[102287] = {
true,
false,
"aqua",
},
[131586] = {
false,
false,
"cyan",
},
[205790] = {
false,
false,
"WARRIOR",
},
[101008] = {
false,
false,
"fuchsia",
},
[135169] = {
false,
false,
"fuchsia",
},
[131587] = {
true,
false,
"fuchsia",
},
[191206] = {
false,
false,
"deepskyblue",
},
[57109] = {
false,
false,
"WARRIOR",
},
[40925] = {
false,
false,
"cyan",
},
[98706] = {
true,
false,
"aqua",
},
[86552] = {
false,
false,
"deepskyblue",
},
[162038] = {
false,
false,
"deepskyblue",
},
[130435] = {
false,
false,
"white",
},
[45915] = {
false,
false,
"WARRIOR",
},
[81819] = {
true,
false,
"fuchsia",
},
[184300] = {
false,
false,
"mediumslateblue",
},
[162039] = {
true,
false,
"fuchsia",
},
[170483] = {
false,
false,
"fuchsia",
},
[76446] = {
true,
false,
"dodgerblue",
},
[184301] = {
true,
false,
"fuchsia",
},
[162040] = {
true,
false,
"fuchsia",
},
[131847] = {
false,
false,
"WARRIOR",
},
[134150] = {
false,
false,
"navajowhite",
},
[114316] = {
false,
false,
"aqua",
},
[81820] = {
true,
false,
"fuchsia",
},
[213216] = {
true,
false,
"aqua",
},
[173044] = {
false,
false,
"aqua",
},
[224731] = {
true,
false,
"fuchsia",
},
[139269] = {
false,
false,
"deepskyblue",
},
[137478] = {
false,
false,
"gold",
},
[156157] = {
false,
false,
"blue",
},
[131849] = {
false,
false,
"deepskyblue",
},
[95766] = {
true,
false,
"aqua",
},
[114317] = {
false,
false,
"aqua",
},
[204262] = {
false,
false,
"fuchsia",
},
[127111] = {
false,
false,
"deepskyblue",
},
[131850] = {
false,
false,
"aqua",
},
[191469] = {
false,
false,
"aqua",
},
[98965] = {
false,
false,
"mediumslateblue",
},
[175861] = {
false,
false,
"fuchsia",
},
[83613] = {
false,
false,
"mediumslateblue",
},
[178165] = {
false,
false,
"mediumslateblue",
},
[199659] = {
false,
false,
"magenta",
},
[86684] = {
false,
false,
"deepskyblue",
},
[212453] = {
true,
false,
"fuchsia",
},
[170490] = {
true,
false,
"fuchsia",
},
[150276] = {
false,
false,
"deepskyblue",
},
[164861] = {
false,
false,
"blue",
},
[45917] = {
false,
false,
"cyan",
},
[162047] = {
false,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"fuchsia",
},
[134157] = {
false,
false,
"peru",
},
[216293] = {
true,
false,
"fuchsia",
},
[56792] = {
false,
false,
"fuchsia",
},
[137484] = {
false,
false,
"gold",
},
[95769] = {
true,
false,
"fuchsia",
},
[155908] = {
false,
false,
"fuchsia",
},
[168446] = {
false,
false,
"mediumslateblue",
},
[174843] = {
false,
false,
"mediumpurple",
},
[205804] = {
false,
false,
"WARRIOR",
},
[208363] = {
false,
false,
"mediumslateblue",
},
[137486] = {
false,
false,
"gold",
},
[102295] = {
false,
false,
"cyan",
},
[178171] = {
false,
false,
"fuchsia",
},
[180474] = {
false,
false,
"fuchsia",
},
[131858] = {
false,
false,
"deepskyblue",
},
[138255] = {
false,
false,
"maroon",
},
[134417] = {
false,
false,
"gold",
},
[208365] = {
false,
false,
"palegreen",
},
[182778] = {
false,
false,
"fuchsia",
},
[95771] = {
true,
false,
"fuchsia",
},
[206063] = {
false,
false,
"WARRIOR",
},
[59544] = {
false,
false,
"magenta",
},
[129547] = {
false,
false,
"mediumslateblue",
},
[98970] = {
false,
false,
"mediumslateblue",
},
[187897] = {
true,
false,
"aqua",
},
[95772] = {
false,
false,
"deepskyblue",
},
[45919] = {
true,
false,
"aqua",
},
[186107] = {
false,
false,
"fuchsia",
},
[129548] = {
false,
false,
"WARRIOR",
},
[206066] = {
true,
false,
"fuchsia",
},
[127757] = {
false,
false,
"cyan",
},
[131863] = {
false,
false,
"mediumslateblue",
},
[104217] = {
false,
false,
"mediumslateblue",
},
[162057] = {
true,
false,
"fuchsia",
},
[59545] = {
true,
false,
"fuchsia",
},
[131864] = {
true,
false,
"fuchsia",
},
[136214] = {
false,
false,
"plum",
},
[136470] = {
false,
false,
"honeydew",
},
[107288] = {
false,
false,
"deepskyblue",
},
[80805] = {
false,
false,
"mediumpurple",
},
[184319] = {
false,
false,
"lime",
},
[133912] = {
true,
false,
"fuchsia",
},
[164873] = {
false,
false,
"fuchsia",
},
[43873] = {
true,
false,
"aqua",
},
[82597] = {
false,
false,
"mediumslateblue",
},
[190206] = {
false,
false,
"lime",
},
[191230] = {
false,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"fuchsia",
},
[212981] = {
false,
false,
"WARRIOR",
},
[192767] = {
false,
false,
"mediumpurple",
},
[191232] = {
false,
false,
"blue",
},
[163086] = {
false,
false,
"deepskyblue",
},
[184580] = {
true,
false,
"fuchsia",
},
[132126] = {
false,
false,
"magenta",
},
[206074] = {
true,
false,
"fuchsia",
},
[186116] = {
true,
false,
"fuchsia",
},
[80936] = {
false,
false,
"blue",
},
[184581] = {
true,
false,
"aqua",
},
[168717] = {
false,
false,
"deepskyblue",
},
[134174] = {
false,
false,
"honeydew",
},
[114584] = {
false,
false,
"mediumpurple",
},
[184582] = {
false,
false,
"deepskyblue",
},
[59547] = {
false,
false,
"mediumpurple",
},
[168718] = {
false,
false,
"aqua",
},
[129553] = {
true,
false,
"fuchsia",
},
[214264] = {
true,
false,
"aqua",
},
[222964] = {
true,
false,
"fuchsia",
},
[80937] = {
false,
false,
"deepskyblue",
},
[176395] = {
false,
false,
"deepskyblue",
},
[204030] = {
false,
false,
"WARRIOR",
},
[176396] = {
false,
false,
"mediumslateblue",
},
[150297] = {
false,
false,
"aqua",
},
[84520] = {
false,
false,
"mediumpurple",
},
[80938] = {
false,
false,
"mediumpurple",
},
[95779] = {
false,
false,
"mediumslateblue",
},
[186121] = {
false,
false,
"mediumslateblue",
},
[186122] = {
false,
false,
"mediumslateblue",
},
[184331] = {
false,
false,
"mediumslateblue",
},
[153882] = {
false,
false,
"deepskyblue",
},
[193799] = {
false,
false,
"cyan",
},
[196102] = {
true,
false,
"fuchsia",
},
[135204] = {
false,
false,
"honeydew",
},
[224249] = {
true,
false,
"aqua",
},
[189706] = {
false,
false,
"yellow",
},
[186124] = {
false,
false,
"deepskyblue",
},
[180495] = {
false,
false,
"fuchsia",
},
[223994] = {
true,
false,
"fuchsia",
},
[186125] = {
true,
false,
"fuchsia",
},
[165911] = {
false,
false,
"fuchsia",
},
[201222] = {
false,
false,
"cyan",
},
[184335] = {
false,
false,
"WARRIOR",
},
[201223] = {
true,
false,
"fuchsia",
},
[193291] = {
false,
false,
"magenta",
},
[45924] = {
false,
false,
"PALADIN",
},
[194315] = {
true,
false,
"fuchsia",
},
[165913] = {
false,
false,
"fuchsia",
},
[137511] = {
false,
false,
"navajowhite",
},
[40167] = {
true,
false,
"fuchsia",
},
[96934] = {
false,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"fuchsia",
},
[193293] = {
true,
false,
"aqua",
},
[114334] = {
false,
false,
"mediumpurple",
},
[40935] = {
false,
false,
"lime",
},
[129559] = {
false,
false,
"lime",
},
[45477] = {
true,
false,
"aqua",
},
[99366] = {
true,
false,
"fuchsia",
},
[187154] = {
false,
false,
"mediumslateblue",
},
[167964] = {
false,
false,
"fuchsia",
},
[187155] = {
true,
false,
"fuchsia",
},
[195855] = {
false,
false,
"WARRIOR",
},
[134701] = {
false,
false,
"magenta",
},
[80816] = {
false,
false,
"aqua",
},
[167965] = {
true,
false,
"fuchsia",
},
[137516] = {
false,
false,
"lightsalmon",
},
[216326] = {
true,
false,
"fuchsia",
},
[40936] = {
false,
false,
"WARRIOR",
},
[165919] = {
true,
false,
"fuchsia",
},
[137517] = {
false,
false,
"peru",
},
[197904] = {
false,
false,
"snow",
},
[115488] = {
false,
false,
"aqua",
},
[171805] = {
false,
false,
"blue",
},
[167967] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"WARRIOR",
},
[197905] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[205326] = {
false,
false,
"lime",
},
[213770] = {
false,
false,
"mediumslateblue",
},
[168992] = {
true,
false,
"fuchsia",
},
[220423] = {
true,
false,
"aqua",
},
[196115] = {
true,
false,
"fuchsia",
},
[192789] = {
true,
false,
"aqua",
},
[187160] = {
true,
false,
"aqua",
},
[114338] = {
false,
false,
"aqua",
},
[206351] = {
true,
false,
"fuchsia",
},
[204560] = {
false,
false,
"fuchsia",
},
[137521] = {
false,
false,
"cornflowerblue",
},
[59552] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"fuchsia",
},
[206352] = {
false,
false,
"deepskyblue",
},
[163621] = {
true,
false,
"aqua",
},
[182045] = {
false,
false,
"fuchsia",
},
[198933] = {
false,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[189466] = {
false,
false,
"cyan",
},
[189722] = {
false,
false,
"mediumslateblue",
},
[165414] = {
true,
false,
"magenta",
},
[133430] = {
false,
false,
"cornflowerblue",
},
[135989] = {
false,
false,
"WARRIOR",
},
[189467] = {
false,
false,
"DRUID",
},
[83763] = {
false,
false,
"deepskyblue",
},
[59553] = {
false,
false,
"lime",
},
[199703] = {
false,
false,
"aqua",
},
[59873] = {
false,
false,
"mediumslateblue",
},
[133432] = {
false,
false,
"gold",
},
[45928] = {
true,
false,
"aqua",
},
[83892] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"fuchsia",
},
[192796] = {
false,
false,
"lime",
},
[189470] = {
true,
false,
"fuchsia",
},
[188703] = {
false,
false,
"yellow",
},
[136249] = {
false,
false,
"plum",
},
[189727] = {
false,
false,
"fuchsia",
},
[83765] = {
false,
false,
"aqua",
},
[83893] = {
true,
false,
"fuchsia",
},
[201754] = {
false,
false,
"deepskyblue",
},
[216339] = {
true,
false,
"fuchsia",
},
[89011] = {
false,
false,
"aqua",
},
[210966] = {
true,
false,
"fuchsia",
},
[101549] = {
false,
false,
"magenta",
},
[205337] = {
true,
false,
"fuchsia",
},
[168747] = {
false,
false,
"fuchsia",
},
[83894] = {
false,
false,
"mediumslateblue",
},
[192800] = {
true,
false,
"fuchsia",
},
[197406] = {
false,
false,
"deepskyblue",
},
[201756] = {
false,
false,
"fuchsia",
},
[75451] = {
false,
false,
"fuchsia",
},
[100527] = {
true,
false,
"fuchsia",
},
[156212] = {
false,
false,
"deepskyblue",
},
[163121] = {
false,
false,
"deepskyblue",
},
[45930] = {
true,
false,
"fuchsia",
},
[186151] = {
false,
false,
"mediumslateblue",
},
[223253] = {
true,
false,
"fuchsia",
},
[162099] = {
false,
false,
"fuchsia",
},
[189478] = {
false,
false,
"mediumslateblue",
},
[97202] = {
false,
false,
"aqua",
},
[163891] = {
true,
false,
"fuchsia",
},
[186664] = {
false,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"fuchsia",
},
[135234] = {
false,
false,
"WARRIOR",
},
[195877] = {
true,
false,
"fuchsia",
},
[103344] = {
false,
false,
"mediumslateblue",
},
[135235] = {
false,
false,
"goldenrod",
},
[163126] = {
true,
false,
"fuchsia",
},
[163894] = {
false,
false,
"deepskyblue",
},
[75966] = {
false,
false,
"fuchsia",
},
[199717] = {
true,
false,
"fuchsia",
},
[165430] = {
false,
false,
"deepskyblue",
},
[180015] = {
false,
false,
"blue",
},
[81212] = {
false,
false,
"deepskyblue",
},
[136005] = {
false,
false,
"blue",
},
[99891] = {
false,
false,
"WARRIOR",
},
[163128] = {
true,
false,
"fuchsia",
},
[100531] = {
true,
false,
"aqua",
},
[136006] = {
false,
false,
"blue",
},
[102962] = {
false,
false,
"fuchsia",
},
[135239] = {
false,
false,
"paleturquoise",
},
[164921] = {
true,
false,
"fuchsia",
},
[45932] = {
false,
false,
"fuchsia",
},
[135240] = {
true,
false,
"fuchsia",
},
[100532] = {
true,
false,
"fuchsia",
},
[166969] = {
false,
false,
"deepskyblue",
},
[208165] = {
true,
false,
"fuchsia",
},
[177716] = {
false,
false,
"deepskyblue",
},
[115757] = {
false,
false,
"mediumslateblue",
},
[83389] = {
false,
false,
"deepskyblue",
},
[166970] = {
false,
false,
"blue",
},
[40943] = {
true,
false,
"fuchsia",
},
[189232] = {
false,
false,
"mediumslateblue",
},
[166971] = {
false,
false,
"fuchsia",
},
[152898] = {
false,
false,
"fuchsia",
},
[223776] = {
true,
false,
"fuchsia",
},
[83390] = {
false,
false,
"deepskyblue",
},
[164414] = {
false,
false,
"aqua",
},
[189234] = {
false,
false,
"mediumpurple",
},
[164926] = {
false,
false,
"fuchsia",
},
[212775] = {
true,
false,
"fuchsia",
},
[186420] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"fuchsia",
},
[220196] = {
true,
false,
"fuchsia",
},
[75459] = {
true,
false,
"fuchsia",
},
[134990] = {
false,
false,
"honeydew",
},
[81984] = {
false,
false,
"mediumslateblue",
},
[138061] = {
false,
false,
"magenta",
},
[220197] = {
true,
false,
"aqua",
},
[95674] = {
false,
false,
"mediumslateblue",
},
[164929] = {
true,
false,
"aqua",
},
[104246] = {
false,
false,
"WARRIOR",
},
[212778] = {
false,
false,
"fuchsia",
},
[81985] = {
true,
false,
"fuchsia",
},
[131666] = {
true,
false,
"fuchsia",
},
[138063] = {
false,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[131667] = {
false,
false,
"mediumslateblue",
},
[138064] = {
false,
false,
"blue",
},
[65317] = {
false,
false,
"mediumpurple",
},
[152905] = {
false,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[97083] = {
false,
false,
"magenta",
},
[131669] = {
false,
false,
"WARRIOR",
},
[176959] = {
false,
false,
"deepskyblue",
},
[45935] = {
true,
false,
"fuchsia",
},
[131670] = {
false,
false,
"mediumslateblue",
},
[213806] = {
true,
false,
"fuchsia",
},
[167493] = {
true,
false,
"fuchsia",
},
[205363] = {
true,
false,
"fuchsia",
},
[100539] = {
false,
false,
"mediumslateblue",
},
[168007] = {
false,
false,
"blue",
},
[179010] = {
false,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"goldenrod",
},
[218671] = {
true,
false,
"fuchsia",
},
[212786] = {
true,
false,
"aqua",
},
[205366] = {
false,
false,
"WARRIOR",
},
[214066] = {
true,
false,
"fuchsia",
},
[115765] = {
false,
false,
"deepskyblue",
},
[189247] = {
true,
false,
"fuchsia",
},
[104251] = {
false,
false,
"lime",
},
[184130] = {
true,
false,
"aqua",
},
[135258] = {
false,
false,
"peru",
},
[41139] = {
true,
false,
"fuchsia",
},
[179269] = {
false,
false,
"deepskyblue",
},
[187969] = {
false,
false,
"lime",
},
[184131] = {
false,
false,
"cyan",
},
[101437] = {
false,
false,
"peachpuff",
},
[131677] = {
false,
false,
"mediumslateblue",
},
[165197] = {
false,
false,
"mediumslateblue",
},
[208440] = {
false,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"fuchsia",
},
[195135] = {
false,
false,
"cyan",
},
[92610] = {
false,
false,
"lime",
},
[84550] = {
false,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"aqua",
},
[170572] = {
true,
false,
"fuchsia",
},
[136541] = {
false,
false,
"deepskyblue",
},
[81864] = {
false,
false,
"blue",
},
[98368] = {
false,
false,
"WARRIOR",
},
[75979] = {
true,
false,
"fuchsia",
},
[156244] = {
false,
false,
"mediumpurple",
},
[201790] = {
false,
false,
"mediumslateblue",
},
[171341] = {
false,
false,
"deepskyblue",
},
[151127] = {
false,
false,
"fuchsia",
},
[135007] = {
false,
false,
"gold",
},
[135263] = {
false,
false,
"maroon",
},
[156245] = {
false,
false,
"mediumpurple",
},
[128434] = {
true,
false,
"fuchsia",
},
[197697] = {
true,
false,
"aqua",
},
[199233] = {
false,
false,
"mediumpurple",
},
[92612] = {
true,
false,
"aqua",
},
[197698] = {
true,
false,
"aqua",
},
[171343] = {
false,
false,
"deepskyblue",
},
[208445] = {
false,
false,
"mediumslateblue",
},
[186696] = {
false,
false,
"cyan",
},
[128435] = {
false,
false,
"maroon",
},
[98370] = {
true,
false,
"fuchsia",
},
[162133] = {
false,
false,
"fuchsia",
},
[176974] = {
false,
false,
"fuchsia",
},
[163157] = {
false,
false,
"deepskyblue",
},
[97219] = {
false,
false,
"mediumslateblue",
},
[131685] = {
true,
false,
"fuchsia",
},
[138338] = {
true,
false,
"fuchsia",
},
[157017] = {
false,
false,
"blue",
},
[220730] = {
true,
false,
"aqua",
},
[98243] = {
true,
false,
"aqua",
},
[211263] = {
true,
false,
"aqua",
},
[184908] = {
false,
false,
"magenta",
},
[195399] = {
false,
false,
"fuchsia",
},
[199749] = {
true,
false,
"aqua",
},
[44404] = {
true,
false,
"fuchsia",
},
[136549] = {
true,
false,
"aqua",
},
[184910] = {
false,
false,
"palegreen",
},
[207939] = {
true,
false,
"fuchsia",
},
[115388] = {
false,
false,
"fuchsia",
},
[164185] = {
false,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"fuchsia",
},
[130485] = {
false,
false,
"peru",
},
[136295] = {
false,
false,
"peru",
},
[186191] = {
true,
false,
"fuchsia",
},
[107073] = {
false,
false,
"magenta",
},
[185680] = {
false,
false,
"magenta",
},
[127799] = {
false,
false,
"WARRIOR",
},
[192333] = {
true,
false,
"fuchsia",
},
[151649] = {
false,
false,
"deepskyblue",
},
[133482] = {
false,
false,
"maroon",
},
[208198] = {
false,
false,
"fuchsia",
},
[173655] = {
true,
false,
"aqua",
},
[131436] = {
true,
false,
"aqua",
},
[205384] = {
true,
false,
"fuchsia",
},
[134251] = {
false,
false,
"honeydew",
},
[194894] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[185683] = {
false,
false,
"palegreen",
},
[208456] = {
true,
false,
"aqua",
},
[207177] = {
false,
false,
"mediumslateblue",
},
[189266] = {
true,
false,
"aqua",
},
[190034] = {
false,
false,
"mediumslateblue",
},
[178008] = {
false,
false,
"yellow",
},
[194896] = {
false,
false,
"fuchsia",
},
[130488] = {
false,
false,
"lightsalmon",
},
[207946] = {
true,
false,
"fuchsia",
},
[185685] = {
false,
false,
"darksalmon",
},
[165471] = {
false,
false,
"blue",
},
[188244] = {
false,
false,
"mediumpurple",
},
[194897] = {
false,
false,
"fuchsia",
},
[194898] = {
false,
false,
"WARRIOR",
},
[52019] = {
false,
false,
"fuchsia",
},
[190294] = {
true,
false,
"fuchsia",
},
[151657] = {
false,
false,
"aqua",
},
[225605] = {
true,
false,
"fuchsia",
},
[40633] = {
true,
false,
"aqua",
},
[187224] = {
false,
false,
"cyan",
},
[134514] = {
false,
false,
"lightgreen",
},
[114626] = {
false,
false,
"aqua",
},
[174175] = {
false,
false,
"deepskyblue",
},
[198995] = {
false,
false,
"mediumslateblue",
},
[96587] = {
false,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"fuchsia",
},
[83026] = {
false,
false,
"mediumslateblue",
},
[198996] = {
false,
false,
"mediumpurple",
},
[170850] = {
false,
false,
"deepskyblue",
},
[114627] = {
false,
false,
"blue",
},
[161895] = {
false,
false,
"magenta",
},
[198997] = {
false,
false,
"mediumpurple",
},
[195927] = {
true,
false,
"fuchsia",
},
[198998] = {
false,
false,
"mediumpurple",
},
[40634] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[195928] = {
true,
false,
"fuchsia",
},
[165479] = {
false,
false,
"mediumpurple",
},
[114628] = {
false,
false,
"magenta",
},
[198999] = {
false,
false,
"mediumslateblue",
},
[203861] = {
false,
false,
"mediumslateblue",
},
[195929] = {
true,
false,
"fuchsia",
},
[214608] = {
false,
false,
"aqua",
},
[186206] = {
false,
false,
"WARRIOR",
},
[199000] = {
false,
false,
"mediumslateblue",
},
[195930] = {
true,
false,
"fuchsia",
},
[114629] = {
false,
false,
"deepskyblue",
},
[186208] = {
false,
false,
"DRUID",
},
[180323] = {
false,
false,
"fuchsia",
},
[193373] = {
true,
false,
"fuchsia",
},
[116549] = {
false,
false,
"aqua",
},
[87252] = {
false,
false,
"mediumpurple",
},
[164461] = {
false,
false,
"blue",
},
[134012] = {
false,
false,
"lightsalmon",
},
[181861] = {
true,
false,
"aqua",
},
[180070] = {
false,
false,
"fuchsia",
},
[129600] = {
true,
false,
"fuchsia",
},
[210264] = {
true,
false,
"aqua",
},
[167533] = {
false,
false,
"deepskyblue",
},
[101326] = {
false,
false,
"fuchsia",
},
[157810] = {
false,
false,
"deepskyblue",
},
[164463] = {
false,
false,
"deepskyblue",
},
[102094] = {
false,
false,
"WARRIOR",
},
[114632] = {
false,
false,
"aqua",
},
[211289] = {
true,
false,
"fuchsia",
},
[129601] = {
false,
false,
"deepskyblue",
},
[211290] = {
true,
false,
"fuchsia",
},
[99664] = {
false,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[167536] = {
false,
false,
"deepskyblue",
},
[114633] = {
false,
false,
"deepskyblue",
},
[135552] = {
false,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"aqua",
},
[111563] = {
false,
false,
"WARRIOR",
},
[205151] = {
true,
false,
"aqua",
},
[197219] = {
false,
false,
"mediumslateblue",
},
[187240] = {
false,
false,
"mediumslateblue",
},
[40765] = {
false,
false,
"mediumpurple",
},
[171376] = {
false,
false,
"deepskyblue",
},
[114634] = {
false,
false,
"mediumslateblue",
},
[205152] = {
true,
false,
"aqua",
},
[205408] = {
false,
false,
"WARRIOR",
},
[191847] = {
true,
false,
"fuchsia",
},
[179821] = {
false,
false,
"mediumslateblue",
},
[196198] = {
false,
false,
"blue",
},
[115019] = {
false,
false,
"deepskyblue",
},
[207969] = {
true,
false,
"fuchsia",
},
[188011] = {
false,
false,
"mediumslateblue",
},
[186220] = {
true,
false,
"fuchsia",
},
[180335] = {
false,
false,
"deepskyblue",
},
[207202] = {
true,
false,
"fuchsia",
},
[150142] = {
false,
false,
"deepskyblue",
},
[196200] = {
false,
false,
"lime",
},
[114636] = {
false,
false,
"deepskyblue",
},
[180336] = {
false,
false,
"aqua",
},
[168310] = {
false,
false,
"fuchsia",
},
[150143] = {
false,
false,
"blue",
},
[101075] = {
false,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[196202] = {
true,
false,
"fuchsia",
},
[135048] = {
false,
false,
"magenta",
},
[174197] = {
true,
false,
"magenta",
},
[205158] = {
true,
false,
"fuchsia",
},
[187503] = {
false,
false,
"mediumslateblue",
},
[196203] = {
false,
false,
"deepskyblue",
},
[135049] = {
true,
false,
"fuchsia",
},
[113998] = {
true,
false,
"aqua",
},
[128455] = {
true,
false,
"aqua",
},
[171384] = {
false,
false,
"blue",
},
[120651] = {
true,
false,
"darkorange",
},
[128967] = {
false,
false,
"palegreen",
},
[168058] = {
true,
false,
"fuchsia",
},
[136330] = {
false,
false,
"fuchsia",
},
[115406] = {
false,
false,
"deepskyblue",
},
[84957] = {
true,
false,
"fuchsia",
},
[186738] = {
false,
false,
"mediumslateblue",
},
[39616] = {
false,
false,
"WARRIOR",
},
[95832] = {
false,
false,
"WARRIOR",
},
[135052] = {
false,
false,
"WARRIOR",
},
[186739] = {
false,
false,
"mediumslateblue",
},
[168572] = {
true,
false,
"fuchsia",
},
[136076] = {
false,
false,
"lightcoral",
},
[115407] = {
false,
false,
"blue",
},
[206698] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"WARRIOR",
},
[213607] = {
false,
false,
"WARRIOR",
},
[195696] = {
true,
false,
"magenta",
},
[157571] = {
false,
false,
"deepskyblue",
},
[186741] = {
true,
false,
"fuchsia",
},
[162689] = {
false,
false,
"deepskyblue",
},
[183671] = {
false,
false,
"fuchsia",
},
[157572] = {
false,
false,
"deepskyblue",
},
[223844] = {
true,
false,
"fuchsia",
},
[164737] = {
false,
false,
"fuchsia",
},
[187510] = {
false,
false,
"deepskyblue",
},
[163458] = {
true,
false,
"fuchsia",
},
[137103] = {
false,
false,
"lime",
},
[98521] = {
true,
false,
"fuchsia",
},
[162691] = {
false,
false,
"mediumslateblue",
},
[163459] = {
true,
false,
"fuchsia",
},
[180091] = {
false,
false,
"mediumpurple",
},
[40577] = {
false,
false,
"mediumslateblue",
},
[109908] = {
false,
false,
"fuchsia",
},
[162692] = {
false,
false,
"deepskyblue",
},
[187768] = {
false,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"fuchsia",
},
[165763] = {
false,
false,
"deepskyblue",
},
[180348] = {
false,
false,
"blue",
},
[129227] = {
false,
false,
"maroon",
},
[168578] = {
true,
false,
"fuchsia",
},
[189816] = {
false,
false,
"deepskyblue",
},
[165764] = {
false,
false,
"mediumslateblue",
},
[166276] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"magenta",
},
[188026] = {
false,
false,
"fuchsia",
},
[187771] = {
false,
false,
"blue",
},
[174210] = {
true,
false,
"magenta",
},
[169861] = {
false,
false,
"deepskyblue",
},
[180864] = {
false,
false,
"fuchsia",
},
[183423] = {
false,
false,
"deepskyblue",
},
[179841] = {
false,
false,
"aqua",
},
[150160] = {
false,
false,
"mediumslateblue",
},
[173189] = {
false,
false,
"deepskyblue",
},
[179842] = {
false,
false,
"deepskyblue",
},
[204918] = {
true,
false,
"fuchsia",
},
[134041] = {
false,
false,
"deepskyblue",
},
[183425] = {
false,
false,
"deepskyblue",
},
[171656] = {
true,
false,
"fuchsia",
},
[126928] = {
false,
false,
"DRUID",
},
[88163] = {
false,
false,
"mediumslateblue",
},
[86372] = {
false,
false,
"cyan",
},
[199547] = {
false,
false,
"blueviolet",
},
[186242] = {
false,
false,
"lime",
},
[179334] = {
false,
false,
"mediumslateblue",
},
[79720] = {
false,
false,
"magenta",
},
[122963] = {
false,
false,
"mediumpurple",
},
[199037] = {
true,
false,
"fuchsia",
},
[150165] = {
false,
false,
"aqua",
},
[199549] = {
false,
false,
"deepskyblue",
},
[187523] = {
false,
false,
"mediumslateblue",
},
[179847] = {
false,
false,
"fuchsia",
},
[176521] = {
false,
false,
"blue",
},
[205435] = {
false,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"fuchsia",
},
[180104] = {
false,
false,
"deepskyblue",
},
[190340] = {
true,
false,
"aqua",
},
[176523] = {
false,
false,
"mediumpurple",
},
[150168] = {
false,
false,
"mediumslateblue",
},
[95842] = {
true,
false,
"fuchsia",
},
[196482] = {
false,
false,
"mediumslateblue",
},
[122965] = {
false,
false,
"mediumpurple",
},
[150169] = {
false,
false,
"deepskyblue",
},
[165010] = {
false,
false,
"mediumpurple",
},
[190342] = {
true,
false,
"fuchsia",
},
[135329] = {
false,
false,
"magenta",
},
[136353] = {
false,
false,
"royalblue",
},
[179852] = {
false,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"fuchsia",
},
[111068] = {
false,
false,
"mediumpurple",
},
[115418] = {
false,
false,
"deepskyblue",
},
[139425] = {
false,
false,
"honeydew",
},
[196116] = {
false,
false,
"lime",
},
[207199] = {
true,
false,
"fuchsia",
},
[213885] = {
true,
false,
"fuchsia",
},
[223423] = {
true,
false,
"aqua",
},
[118489] = {
false,
false,
"fuchsia",
},
[213343] = {
true,
false,
"aqua",
},
[98275] = {
true,
false,
"aqua",
},
[200836] = {
false,
false,
"deepskyblue",
},
[221760] = {
true,
false,
"fuchsia",
},
[216338] = {
true,
false,
"aqua",
},
[99358] = {
false,
false,
"magenta",
},
[206697] = {
true,
false,
"fuchsia",
},
[115419] = {
false,
false,
"mediumslateblue",
},
[177808] = {
false,
false,
"mediumpurple",
},
[129552] = {
false,
false,
"WARRIOR",
},
[204931] = {
false,
false,
"mediumslateblue",
},
[207186] = {
true,
false,
"aqua",
},
[96512] = {
false,
false,
"mediumslateblue",
},
[220141] = {
true,
false,
"fuchsia",
},
[212412] = {
true,
false,
"fuchsia",
},
[207940] = {
true,
false,
"fuchsia",
},
[210812] = {
true,
false,
"fuchsia",
},
[127879] = {
false,
false,
"WARRIOR",
},
[122968] = {
false,
false,
"mediumpurple",
},
[210108] = {
true,
false,
"fuchsia",
},
[164557] = {
false,
false,
"deepskyblue",
},
[80808] = {
false,
false,
"deepskyblue",
},
[216364] = {
true,
false,
"fuchsia",
},
[224219] = {
true,
false,
"fuchsia",
},
[220003] = {
true,
false,
"aqua",
},
[210818] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"fuchsia",
},
[154014] = {
false,
false,
"deepskyblue",
},
[165111] = {
true,
false,
"fuchsia",
},
[221979] = {
true,
false,
"fuchsia",
},
[224271] = {
true,
false,
"fuchsia",
},
[118491] = {
false,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"magenta",
},
[188302] = {
false,
false,
"yellow",
},
[200840] = {
false,
false,
"deepskyblue",
},
[214350] = {
true,
false,
"fuchsia",
},
[129366] = {
false,
false,
"goldenrod",
},
[220195] = {
true,
false,
"fuchsia",
},
[207198] = {
true,
false,
"fuchsia",
},
[206214] = {
false,
false,
"mediumpurple",
},
[218324] = {
true,
false,
"aqua",
},
[213217] = {
true,
false,
"fuchsia",
},
[101476] = {
false,
false,
"magenta",
},
[219984] = {
true,
false,
"fuchsia",
},
[213338] = {
true,
false,
"fuchsia",
},
[144293] = {
false,
false,
"mediumslateblue",
},
[228539] = {
true,
false,
"fuchsia",
},
[209333] = {
false,
false,
"mediumslateblue",
},
[114526] = {
false,
false,
"aqua",
},
[213892] = {
true,
false,
"fuchsia",
},
[122970] = {
false,
false,
"lime",
},
[166299] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"fuchsia",
},
[144294] = {
false,
false,
"aqua",
},
[190407] = {
true,
false,
"fuchsia",
},
[206068] = {
false,
false,
"deepskyblue",
},
[212403] = {
true,
false,
"fuchsia",
},
[192786] = {
false,
false,
"lime",
},
[98813] = {
true,
false,
"fuchsia",
},
[180431] = {
false,
false,
"aqua",
},
[144295] = {
false,
false,
"aqua",
},
[213893] = {
true,
false,
"fuchsia",
},
[134629] = {
false,
false,
"navajowhite",
},
[75506] = {
false,
false,
"deepskyblue",
},
[221102] = {
true,
false,
"fuchsia",
},
[123227] = {
true,
false,
"palegreen",
},
[122971] = {
true,
false,
"fuchsia",
},
[166301] = {
false,
false,
"fuchsia",
},
[164510] = {
false,
false,
"deepskyblue",
},
[144296] = {
false,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"fuchsia",
},
[177816] = {
false,
false,
"deepskyblue",
},
[213937] = {
true,
false,
"aqua",
},
[134139] = {
false,
false,
"gold",
},
[154020] = {
false,
false,
"deepskyblue",
},
[192955] = {
false,
false,
"fuchsia",
},
[224962] = {
true,
false,
"fuchsia",
},
[206070] = {
false,
false,
"mediumslateblue",
},
[189472] = {
false,
false,
"deepskyblue",
},
[177817] = {
false,
false,
"aqua",
},
[98280] = {
true,
false,
"fuchsia",
},
[122972] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"fuchsia",
},
[129369] = {
false,
false,
"lightsalmon",
},
[98792] = {
true,
false,
"aqua",
},
[80935] = {
false,
false,
"magenta",
},
[185534] = {
false,
false,
"lime",
},
[59555] = {
true,
false,
"fuchsia",
},
[169875] = {
true,
false,
"magenta",
},
[165872] = {
false,
false,
"deepskyblue",
},
[194745] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"honeydew",
},
[45926] = {
false,
false,
"WARRIOR",
},
[101991] = {
true,
false,
"fuchsia",
},
[162317] = {
false,
false,
"deepskyblue",
},
[179733] = {
false,
false,
"orangered",
},
[203799] = {
false,
false,
"deepskyblue",
},
[122973] = {
true,
false,
"fuchsia",
},
[196117] = {
false,
false,
"mediumpurple",
},
[129370] = {
true,
false,
"fuchsia",
},
[97068] = {
false,
false,
"WARRIOR",
},
[187192] = {
false,
false,
"mediumpurple",
},
[175517] = {
false,
false,
"blue",
},
[196712] = {
false,
false,
"fuchsia",
},
[206065] = {
true,
false,
"fuchsia",
},
[198326] = {
false,
false,
"mediumpurple",
},
[126848] = {
false,
false,
"deepskyblue",
},
[165762] = {
false,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"aqua",
},
[81522] = {
false,
false,
"mediumpurple",
},
[131824] = {
false,
false,
"mediumslateblue",
},
[104295] = {
true,
false,
"fuchsia",
},
[190359] = {
false,
false,
"WARRIOR",
},
[98538] = {
false,
false,
"cyan",
},
[211341] = {
true,
false,
"fuchsia",
},
[187033] = {
true,
false,
"aqua",
},
[216342] = {
true,
false,
"fuchsia",
},
[167876] = {
true,
false,
"magenta",
},
[132532] = {
false,
false,
"palegreen",
},
[83025] = {
false,
false,
"mediumslateblue",
},
[130011] = {
true,
false,
"aqua",
},
[189555] = {
false,
false,
"blue",
},
[113398] = {
false,
false,
"mediumslateblue",
},
[97720] = {
false,
false,
"magenta",
},
[170690] = {
true,
false,
"magenta",
},
[212673] = {
true,
false,
"aqua",
},
[76518] = {
false,
false,
"fuchsia",
},
[173729] = {
false,
false,
"mediumslateblue",
},
[183033] = {
false,
false,
"magenta",
},
[211087] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"fuchsia",
},
[190348] = {
true,
false,
"fuchsia",
},
[189338] = {
false,
false,
"magenta",
},
[164804] = {
true,
false,
"aqua",
},
[193944] = {
true,
false,
"fuchsia",
},
[213932] = {
true,
false,
"fuchsia",
},
[190362] = {
true,
false,
"fuchsia",
},
[114783] = {
false,
false,
"deepskyblue",
},
[168357] = {
true,
false,
"fuchsia",
},
[105704] = {
true,
false,
"fuchsia",
},
[99359] = {
false,
false,
"cyan",
},
[163620] = {
false,
false,
"deepskyblue",
},
[77700] = {
false,
false,
"aqua",
},
[195878] = {
true,
false,
"fuchsia",
},
[169893] = {
true,
false,
"magenta",
},
[185529] = {
true,
false,
"fuchsia",
},
[144298] = {
false,
false,
"mediumslateblue",
},
[155812] = {
false,
false,
"blue",
},
[189340] = {
true,
false,
"aqua",
},
[76407] = {
false,
false,
"mediumslateblue",
},
[152009] = {
false,
false,
"deepskyblue",
},
[184107] = {
false,
false,
"WARRIOR",
},
[186658] = {
true,
false,
"fuchsia",
},
[115395] = {
false,
false,
"mediumpurple",
},
[45704] = {
false,
false,
"magenta",
},
[186226] = {
true,
false,
"fuchsia",
},
[214117] = {
false,
false,
"orangered",
},
[212793] = {
true,
false,
"fuchsia",
},
[130909] = {
true,
false,
"aqua",
},
[214673] = {
true,
false,
"fuchsia",
},
[100526] = {
false,
false,
"WARRIOR",
},
[166396] = {
false,
false,
"aqua",
},
[164266] = {
false,
false,
"deepskyblue",
},
[129374] = {
true,
false,
"aqua",
},
[133436] = {
false,
false,
"gold",
},
[129758] = {
false,
false,
"fuchsia",
},
[206230] = {
false,
false,
"fuchsia",
},
[220815] = {
true,
false,
"fuchsia",
},
[155221] = {
false,
false,
"deepskyblue",
},
[126918] = {
false,
false,
"lime",
},
[47238] = {
true,
false,
"fuchsia",
},
[201792] = {
false,
false,
"mediumpurple",
},
[127315] = {
false,
false,
"magenta",
},
[187552] = {
false,
false,
"deepskyblue",
},
[97197] = {
true,
false,
"fuchsia",
},
[115642] = {
false,
false,
"blue",
},
[208698] = {
true,
false,
"fuchsia",
},
[114790] = {
false,
false,
"mediumslateblue",
},
[98542] = {
false,
false,
"mediumslateblue",
},
[95834] = {
true,
false,
"fuchsia",
},
[150146] = {
false,
false,
"aqua",
},
[134331] = {
false,
false,
"gold",
},
[122969] = {
true,
false,
"fuchsia",
},
[205265] = {
false,
false,
"WARRIOR",
},
[190368] = {
true,
false,
"fuchsia",
},
[65362] = {
false,
false,
"WARRIOR",
},
[176551] = {
false,
false,
"deepskyblue",
},
[102253] = {
false,
false,
"deepskyblue",
},
[165805] = {
false,
false,
"mediumpurple",
},
[114544] = {
false,
false,
"deepskyblue",
},
[214421] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"fuchsia",
},
[151476] = {
false,
false,
"mediumpurple",
},
[82039] = {
false,
false,
"magenta",
},
[201788] = {
false,
false,
"fuchsia",
},
[199325] = {
false,
false,
"deepskyblue",
},
[191739] = {
true,
false,
"aqua",
},
[185508] = {
false,
false,
"lime",
},
[188067] = {
true,
false,
"fuchsia",
},
[163503] = {
true,
false,
"fuchsia",
},
[190370] = {
false,
false,
"mediumslateblue",
},
[168109] = {
false,
false,
"deepskyblue",
},
[163862] = {
false,
false,
"deepskyblue",
},
[130400] = {
false,
false,
"mediumslateblue",
},
[205723] = {
false,
false,
"deepskyblue",
},
[98810] = {
false,
false,
"WARRIOR",
},
[198047] = {
true,
false,
"fuchsia",
},
[183424] = {
false,
false,
"aqua",
},
[190371] = {
false,
false,
"WARRIOR",
},
[75899] = {
false,
false,
"fuchsia",
},
[205212] = {
false,
false,
"deepskyblue",
},
[84990] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"aqua",
},
[165410] = {
false,
false,
"mediumpurple",
},
[130012] = {
false,
false,
"PALADIN",
},
[187315] = {
false,
false,
"WARRIOR",
},
[92538] = {
false,
false,
"lime",
},
[166275] = {
true,
false,
"fuchsia",
},
[177787] = {
false,
false,
"aqua",
},
[213913] = {
true,
false,
"fuchsia",
},
[203678] = {
false,
false,
"mediumslateblue",
},
[150712] = {
false,
false,
"aqua",
},
[84554] = {
false,
false,
"fuchsia",
},
[194467] = {
false,
false,
"blue",
},
[190373] = {
true,
false,
"fuchsia",
},
[155830] = {
false,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"fuchsia",
},
[81407] = {
false,
false,
"deepskyblue",
},
[133836] = {
true,
false,
"fuchsia",
},
[105715] = {
true,
false,
"fuchsia",
},
[175992] = {
false,
false,
"fuchsia",
},
[90997] = {
true,
false,
"aqua",
},
[208438] = {
true,
false,
"aqua",
},
[155831] = {
false,
false,
"fuchsia",
},
[91002] = {
false,
false,
"fuchsia",
},
[171184] = {
false,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"fuchsia",
},
[134338] = {
false,
false,
"navajowhite",
},
[81603] = {
false,
false,
"mediumslateblue",
},
[169905] = {
false,
false,
"deepskyblue",
},
[194469] = {
false,
false,
"blue",
},
[115640] = {
false,
false,
"fuchsia",
},
[192934] = {
false,
false,
"mediumslateblue",
},
[165556] = {
false,
false,
"fuchsia",
},
[168882] = {
false,
false,
"fuchsia",
},
[198308] = {
false,
false,
"mediumpurple",
},
[82682] = {
false,
false,
"mediumslateblue",
},
[90998] = {
true,
false,
"fuchsia",
},
[207438] = {
false,
false,
"mediumpurple",
},
[190345] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"fuchsia",
},
[115020] = {
false,
false,
"mediumslateblue",
},
[83578] = {
false,
false,
"mediumslateblue",
},
[162103] = {
false,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"fuchsia",
},
[192680] = {
false,
false,
"mediumpurple",
},
[84400] = {
false,
false,
"fuchsia",
},
[122967] = {
false,
false,
"mediumslateblue",
},
[104278] = {
true,
false,
"fuchsia",
},
[81236] = {
false,
false,
"aqua",
},
[104270] = {
true,
false,
"fuchsia",
},
[196263] = {
false,
false,
"aqua",
},
[186284] = {
false,
false,
"WARRIOR",
},
[135365] = {
true,
false,
"fuchsia",
},
[131527] = {
false,
false,
"mediumslateblue",
},
[130404] = {
false,
false,
"cyan",
},
[162744] = {
false,
false,
"deepskyblue",
},
[102095] = {
false,
false,
"lime",
},
[40586] = {
false,
false,
"mediumslateblue",
},
[198311] = {
false,
false,
"mediumpurple",
},
[114796] = {
false,
false,
"blue",
},
[122984] = {
false,
false,
"mediumslateblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[189471] = {
false,
false,
"WARRIOR",
},
[168886] = {
true,
false,
"fuchsia",
},
[91000] = {
true,
false,
"aqua",
},
[134599] = {
false,
false,
"gold",
},
[167607] = {
false,
false,
"deepskyblue",
},
[155824] = {
false,
false,
"blue",
},
[165483] = {
false,
false,
"fuchsia",
},
[130661] = {
false,
false,
"lightgreen",
},
[192464] = {
false,
false,
"fuchsia",
},
[172981] = {
false,
false,
"deepskyblue",
},
[187566] = {
false,
false,
"mediumslateblue",
},
[134600] = {
false,
false,
"peru",
},
[214209] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[180473] = {
false,
false,
"blue",
},
[193352] = {
false,
false,
"peachpuff",
},
[174773] = {
false,
false,
"magenta",
},
[40825] = {
false,
false,
"mediumslateblue",
},
[190174] = {
false,
false,
"fuchsia",
},
[183707] = {
false,
false,
"deepskyblue",
},
[91001] = {
true,
false,
"aqua",
},
[154744] = {
false,
false,
"mediumslateblue",
},
[164707] = {
false,
false,
"mediumpurple",
},
[176565] = {
false,
false,
"aqua",
},
[104273] = {
false,
false,
"deepskyblue",
},
[194895] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"fuchsia",
},
[126969] = {
false,
false,
"magenta",
},
[114542] = {
false,
false,
"mediumslateblue",
},
[104275] = {
false,
false,
"mediumslateblue",
},
[128969] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"fuchsia",
},
[133835] = {
true,
false,
"fuchsia",
},
[199595] = {
false,
false,
"magenta",
},
[186644] = {
false,
false,
"mediumslateblue",
},
[212389] = {
true,
false,
"fuchsia",
},
[190128] = {
false,
false,
"darksalmon",
},
[84989] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[194990] = {
false,
false,
"aqua",
},
[144071] = {
true,
false,
"fuchsia",
},
[136139] = {
false,
false,
"peru",
},
[77483] = {
false,
false,
"deepskyblue",
},
[165137] = {
false,
false,
"deepskyblue",
},
[167612] = {
false,
false,
"aqua",
},
[114624] = {
false,
false,
"aqua",
},
[208521] = {
false,
false,
"deepskyblue",
},
[132491] = {
false,
false,
"palegreen",
},
[166589] = {
false,
false,
"deepskyblue",
},
[138187] = {
true,
false,
"fuchsia",
},
[165946] = {
false,
false,
"deepskyblue",
},
[150292] = {
false,
false,
"mediumslateblue",
},
[133007] = {
true,
false,
"aqua",
},
[157634] = {
false,
false,
"blue",
},
[114792] = {
false,
false,
"aqua",
},
[184911] = {
false,
false,
"darksalmon",
},
[206140] = {
true,
false,
"fuchsia",
},
[193457] = {
true,
false,
"aqua",
},
[115486] = {
false,
false,
"mediumslateblue",
},
[212681] = {
false,
false,
"deepskyblue",
},
[163520] = {
false,
false,
"deepskyblue",
},
[208367] = {
false,
false,
"deepskyblue",
},
[173190] = {
false,
false,
"deepskyblue",
},
[208193] = {
true,
false,
"fuchsia",
},
[183495] = {
false,
false,
"mediumpurple",
},
[86526] = {
false,
false,
"deepskyblue",
},
[166302] = {
true,
false,
"fuchsia",
},
[199748] = {
true,
false,
"fuchsia",
},
[99192] = {
false,
false,
"mediumslateblue",
},
[165824] = {
true,
false,
"fuchsia",
},
[77803] = {
false,
false,
"deepskyblue",
},
[114319] = {
false,
false,
"deepskyblue",
},
[139422] = {
false,
false,
"gold",
},
[127106] = {
false,
false,
"WARRIOR",
},
[179386] = {
false,
false,
"deepskyblue",
},
[204206] = {
true,
false,
"fuchsia",
},
[75652] = {
false,
false,
"mediumslateblue",
},
[114266] = {
false,
false,
"deepskyblue",
},
[126919] = {
true,
false,
"fuchsia",
},
[168384] = {
false,
false,
"blue",
},
[98681] = {
false,
false,
"blue",
},
[184140] = {
false,
false,
"fuchsia",
},
[185528] = {
true,
false,
"fuchsia",
},
[189878] = {
false,
false,
"magenta",
},
[105705] = {
false,
false,
"WARRIOR",
},
[98406] = {
false,
false,
"cyan",
},
[164506] = {
false,
false,
"mediumslateblue",
},
[176573] = {
false,
false,
"fuchsia",
},
[156226] = {
false,
false,
"deepskyblue",
},
[151325] = {
false,
false,
"fuchsia",
},
[179388] = {
false,
false,
"aqua",
},
[175550] = {
false,
false,
"fuchsia",
},
[163524] = {
false,
false,
"mediumslateblue",
},
[188252] = {
false,
false,
"mediumslateblue",
},
[199220] = {
false,
false,
"white",
},
[96574] = {
false,
false,
"mediumslateblue",
},
[82590] = {
false,
false,
"magenta",
},
[193462] = {
true,
false,
"fuchsia",
},
[125977] = {
false,
false,
"magenta",
},
[83392] = {
false,
false,
"mediumslateblue",
},
[132820] = {
false,
false,
"WARRIOR",
},
[168418] = {
true,
false,
"fuchsia",
},
[167998] = {
false,
false,
"deepskyblue",
},
[176575] = {
false,
false,
"deepskyblue",
},
[81283] = {
false,
false,
"aqua",
},
[195119] = {
false,
false,
"magenta",
},
[98366] = {
false,
false,
"lime",
},
[101438] = {
false,
false,
"aqua",
},
[169421] = {
false,
false,
"gold",
},
[194487] = {
false,
false,
"cyan",
},
[114803] = {
false,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"fuchsia",
},
[75713] = {
true,
false,
"fuchsia",
},
[213934] = {
true,
false,
"aqua",
},
[173016] = {
true,
false,
"fuchsia",
},
[200131] = {
false,
false,
"mediumslateblue",
},
[153292] = {
false,
false,
"khaki",
},
[169924] = {
false,
false,
"mediumpurple",
},
[197671] = {
false,
false,
"mediumslateblue",
},
[189227] = {
false,
false,
"lime",
},
[131009] = {
false,
false,
"fuchsia",
},
[97788] = {
false,
false,
"WARRIOR",
},
[184303] = {
false,
false,
"lime",
},
[134418] = {
false,
false,
"deepskyblue",
},
[104274] = {
false,
false,
"aqua",
},
[195851] = {
false,
false,
"lime",
},
[114804] = {
false,
false,
"aqua",
},
[194816] = {
false,
false,
"deepskyblue",
},
[164552] = {
true,
false,
"fuchsia",
},
[129517] = {
false,
false,
"fuchsia",
},
[167111] = {
true,
false,
"fuchsia",
},
[59598] = {
false,
false,
"dimgray",
},
[91008] = {
false,
false,
"deepskyblue",
},
[99360] = {
false,
false,
"blue",
},
[194317] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"fuchsia",
},
[191164] = {
true,
false,
"fuchsia",
},
[207796] = {
false,
false,
"orangered",
},
[169159] = {
false,
false,
"gold",
},
[129699] = {
false,
false,
"magenta",
},
[167963] = {
true,
false,
"fuchsia",
},
[169927] = {
false,
false,
"mediumslateblue",
},
[83761] = {
false,
false,
"mediumslateblue",
},
[133593] = {
false,
false,
"honeydew",
},
[206064] = {
true,
false,
"fuchsia",
},
[162763] = {
false,
false,
"mediumslateblue",
},
[167113] = {
false,
false,
"blue",
},
[189886] = {
false,
false,
"gold",
},
[154758] = {
false,
false,
"mediumslateblue",
},
[184020] = {
false,
false,
"WARRIOR",
},
[131817] = {
true,
false,
"aqua",
},
[168393] = {
false,
false,
"deepskyblue",
},
[200137] = {
true,
false,
"fuchsia",
},
[162049] = {
false,
false,
"mediumslateblue",
},
[185537] = {
false,
false,
"blue",
},
[135167] = {
false,
false,
"peru",
},
[133870] = {
true,
false,
"fuchsia",
},
[130436] = {
false,
false,
"aqua",
},
[150295] = {
false,
false,
"mediumslateblue",
},
[84767] = {
false,
false,
"WARRIOR",
},
[174802] = {
true,
false,
"fuchsia",
},
[167956] = {
true,
false,
"fuchsia",
},
[204536] = {
false,
false,
"blue",
},
[81297] = {
false,
false,
"deepskyblue",
},
[45572] = {
false,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[164562] = {
false,
false,
"deepskyblue",
},
[178630] = {
false,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[224732] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"honeydew",
},
[155090] = {
false,
false,
"deepskyblue",
},
[83846] = {
false,
false,
"mediumslateblue",
},
[190401] = {
true,
false,
"aqua",
},
[196798] = {
true,
false,
"fuchsia",
},
[168396] = {
false,
false,
"deepskyblue",
},
[96640] = {
false,
false,
"lime",
},
[213942] = {
true,
false,
"fuchsia",
},
[168156] = {
false,
false,
"fuchsia",
},
[180432] = {
false,
false,
"blue",
},
[134137] = {
false,
false,
"deepskyblue",
},
[131812] = {
true,
false,
"fuchsia",
},
[168443] = {
true,
false,
"fuchsia",
},
[170480] = {
false,
false,
"mediumpurple",
},
[138465] = {
true,
false,
"aqua",
},
[134158] = {
false,
false,
"navajowhite",
},
},
["aura_show_magic"] = true,
["extra_icon_show_enrage_border"] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
["cast_statusbar_spark_half"] = true,
["plater_resources_show"] = false,
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"mediumseagreen\", --monk statue npcID\n        [103822] = \"mediumseagreen\", --druid treant npcID        \n        [61056] = \"mediumseagreen\", --shaman earth ele npcID\n        [95072] = \"mediumseagreen\", --shaman earth ele npcID    \n    }\n    \n    \n    \nend\n\n\n\n\n",
},
["Time"] = 1722357642,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 299,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Attacking Specific Unit",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Burning Wound\"] = 50,\n        [\"Rend\"] = 50,\n        [\"Colossus Smash\"] = 50,\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 40,\n        [\"Devouring Plague\"] = 30,\n        [\"Agony\"] = 50,\n        [\"Corruption\"] = 40,\n        [\"Unstable Affliction\"] = 30,\n        [\"Siphon Life\"] = 20,\n        [\"Shadow Embrace\"] = 10,\n        [\"Moonfire\"] = 40,\n        [\"Sunfire\"] = 50,\n        [\"Stellar Flare\"] = 30\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703514904,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 388,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Initialization",
["Name"] = "Aura Reorder",
},
{
["OptionsValues"] = {
["Descanchor"] = 4,
["BSborderth"] = 1,
["BStimer_size"] = 10,
["Descyoff"] = -1,
["BSdesc_size"] = 8,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.ExtraIconFrame:SetOption (\"text_size\", modTable.config.BStimer_size)\n    unitFrame.ExtraIconFrame:SetOption (\"text_color\", modTable.config.BStimer_color)\n    unitFrame.ExtraIconFrame:SetOption (\"desc_text_size\", modTable.config.BSdesc_size)\n    unitFrame.ExtraIconFrame:SetOption (\"stack_text_size\", modTable.config.BSstack_size)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier ()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier = function()\n        \n        if modTable.config.BShidefriendl and unitFrame.actorType == \"friendlyplayer\" then\n            unitFrame.ExtraIconFrame:Hide()\n        end      \n        \n        for index, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if (auraIcon:IsShown()) then\n                \n                local profile = Plater.db.profile\n                local Anchor = {\n                    side = modTable.config.Descanchor, \n                    x = modTable.config.Descxoff, \n                    y = modTable.config.Descyoff,\n                }              \n                local size = modTable.config.BSborderth\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                auraIcon.PixelPerfectBorder:UpdateSizes()\n                \n                auraIcon.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                auraIcon.Texture:ClearAllPoints()\n                auraIcon.Texture:SetAllPoints()\n                auraIcon.Border:Hide() \n                \n                Plater.SetFontOutlineAndShadow (auraIcon.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n                \n                Plater.SetAnchor (auraIcon.Desc, Anchor)\n                auraIcon.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n                auraIcon.Cooldown:SetDrawSwipe (true) \n                if modTable.config.BScdreverse then\n                    auraIcon.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n                end\n                \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703515022,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 462,
["semver"] = "",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Basic Options",
["Name"] = "Basic Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "BShidefriendly",
["Value"] = true,
["Name"] = "Hide Buff Special at Friendly UnitFrame",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Hide Buff Special at Friendly UnitFrame",
},
{
["Type"] = 4,
["Key"] = "BScdreverse",
["Value"] = true,
["Name"] = "Swipe Closure Inverted",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, swipe closure inverted",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set Buff Special border thickness",
["Min"] = 0,
["Key"] = "BSborderth",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Border Thickness",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Buff Special Text Options",
["Name"] = "Buff Special Text Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set timer text size",
["Min"] = 1,
["Key"] = "BStimer_size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timer Text Size",
},
{
["Type"] = 1,
["Key"] = "BStimer_color",
["Value"] = {
1,
1,
0,
1,
},
["Name"] = "Timer Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set timer text color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set stack text size",
["Min"] = 1,
["Key"] = "BSstack_size",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Stack Text Size",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Buff Special Player Name Options",
["Name"] = "Buff Special Player Name Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set player name text size",
["Min"] = 1,
["Key"] = "BSdesc_size",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Player Name Text Size",
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
["Min"] = 1,
["Key"] = "Descanchor",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Player Name Text Anchor",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set player name text y-offset",
["Min"] = -100,
["Key"] = "Descyoff",
["Value"] = -2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Player Name Text Y-offset",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set player name text x-offset",
["Min"] = -100,
["Key"] = "Descxoff",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Player Name Text X-offset",
},
},
["LastHookEdited"] = "Nameplate Created",
["Name"] = "Buff Special",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 0.6\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1703514714,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 174,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Border",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = .5 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Time"] = 1703521954,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 183,
["semver"] = "",
["Author"] = "????????-Illidan",
["Desc"] = "",
["Prio"] = 31,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Debuff Border",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x60f358aaaef576",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    if Plater.NameplateHasAura(unitFrame, envTable.debuffID) then\n        Plater.SetNameplateColor(unitFrame, 'deeppink')\n    else\n        local npcId = unitFrame['namePlateNpcId']\n        local npcColor = envTable.dbColor[npcId]\n        if npcColor then\n            Plater.SetNameplateColor(unitFrame, npcColor)\n        else\n            Plater.RefreshNameplateColor(unitFrame)\n        end\n    end\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local DF = _G ['DetailsFramework']\n    envTable.dbColor={}\n    for npcID, infoTable in pairs (Plater.db.profile.npc_colors) do\n        local enabled1 = infoTable[1] --this is the overall enabled\n        local enabled2 = infoTable[2] --if this is true, this color is only used for scripts\n        local colorID = infoTable[3] --the color\n        if (enabled1 and not enabled2) then\n            local r, g, b = DF:ParseColors (colorID)\n            envTable.dbColor[npcID] = {r, g, b, 1}\n        end\n    end\n    if Plater.PlayerClass == 'DEMONHUNTER' then\n        envTable.debuffID = 346278\n    elseif Plater.PlayerClass == 'ROGUE' then\n        envTable.debuffID = 324073\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703521950,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["scenario"] = true,
["raid"] = true,
["none"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
["DEMONHUNTER"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 243,
["semver"] = "",
["Author"] = "Avayde-Illidan",
["Desc"] = "",
["Prio"] = 30,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Debuff Color",
["Options"] = {
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if not envTable.units[select(6, strsplit(\"-\", UnitGUID(unitId)))] then\n        envTable.CheckAggro (unitFrame)\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.units = {\n        [\"120651\"] = true, -- Explosives \n        [\"174773\"] = true, -- Spiteful\n        [\"169430\"] = true, -- Ur'zul DH Necrolord\n        [\"169428\"] = true, -- Wrathguard DH Necrolord\n        [\"169425\"] = true, -- Felhound DH Necrolord\n        [\"168932\"] = true, -- Doomguard DH Necrolord\n        [\"169429\"] = true, -- Shivarra DH Necrolord\n        [\"169426\"] = true, -- Infernal DH Necrolord\n        [\"169421\"] = true, -- Felguard DH Necrolord\n    }\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.anothertank)\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703390950,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 1,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Force Threat Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 2.9,\n    }\n    \nend\n\n\n",
},
["Time"] = 1689714040,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 78,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "",
["Prio"] = 51,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Timer Text Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 2\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
},
["Time"] = 1711197526,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/targetborder/1",
["Icon"] = "Interface\\CHATFRAME\\UI-ChatInputBorder",
["Enabled"] = true,
["Revision"] = 82,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add a border around the current target.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Target Border",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Player Logon"] = "function()\n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Thin Arrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_thin_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 15,\n        height = 12,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color =  {0.36, 0.73, 1, 0.9},\n    }    \n    \nend",
},
["Time"] = 1722356440,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/4rFUVdRiH/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_thin_right_64",
["Enabled"] = true,
["Revision"] = 61,
["semver"] = "1.0.0",
["Author"] = "Xitobel-Saurfang",
["Desc"] = "Adds a single thin arrow to target indicator options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Arrow Thin Target",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s < 10 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    local IconRowFunctions = DF.IconRowFunctions or DF.IconMixin\n    IconRowFunctions.FormatCooldownTimeOrig = IconRowFunctions.FormatCooldownTimeOrig or IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1722370104,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mULsbUUxJ/13",
["Icon"] = "INTERFACE\\ICONS\\Ability_BossMagistrix_TimeWarp2",
["Enabled"] = true,
["Revision"] = 195,
["semver"] = "1.0.12",
["Author"] = "Viash-Thrall",
["Desc"] = "Overwrites the Plater time formatting to show second fractions.",
["Prio"] = 99,
["version"] = 13,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "formatAuraTimers",
["Value"] = true,
["Name"] = "Format Aura Timers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "formatBuffSpecialTimers",
["Value"] = true,
["Name"] = "Format Buff Special Timers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Detailed Time Format",
},
{
["OptionsValues"] = {
["midScale"] = 1,
["lowScale"] = 0.8999999761581421,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        -- Something\n        [\"211306\"] = 2, -- (Tindral) Roots\n        [\"214441\"] = 2, -- (Tindral) Treants\n        [\"174773\"] = 2, -- Spiteful (M+ Affix)\n        \n        -- Temple of the Jade Serpent\n        [\"62358\"] = 2, -- Corrupt Droplet\n        [\"200126\"] = 1, -- Fallen Waterspeaker\n        [\"65317\"] = 1, -- Xiang\n        [\"59547\"] = 1, --Jiang\n        [\"58319\"] = 2, --Lesser Sha\n        [\"59598\"] = 2, --Lesser Sha\n        [\"59553\"] = 1, --The Songbird Queen\n        [\"59545\"] = 2, --Golden Beetle\n        [\"59544\"] = 1, --The Nodding Tiger\n        [\"59552\"] = 1, --The Crybaby Hozen\n        [\"200131\"] = 1, --Sha-Touched Guardian\n        [\"57109\"] = 2, --Minion of Doubt\n        [\"200388\"] = 2, --Malformed Sha\n        [\"200387\"] = 1, --Shambling Infester\n        \n        --The Nokhud Offensive\n        [\"192803\"] = 2, --War Ohuna\n        [\"195265\"] = 1, --Stormcaller Arynga\n        --[\"194317\"] = 1, --Stormcaller Boroo\n        [\"194315\"] = 1, --Stormcaller Solongo\n        [\"194316\"] = 1, --Stormcaller Zarii\n        [\"192794\"] = 2, --Nokhud Beastmaster\n        [\"192796\"] = 1, --Nokhud Hornsounder\n        [\"192789\"] = 2, --Nokhud Longbow\n        [\"192800\"] = 1, --Nokhud Lancemaster\n        [\"191847\"] = 1, --Nokhud Plainstomper\n        --[\"192791\"] = 1, --Nokhud Warspear\n        [\"194898\"] = 2, --Primalist Arcblade\n        [\"194895\"] = 2, --Unstable Squall\n        [\"194896\"] = 2, --Primal Stormshield\n        [\"194897\"] = 2, --Stormsurge Totem\n        [\"195579\"] = 2, --Primal Gust\n        [\"195696\"] = 1, --Primalist Thunderbeast\n        [\"195855\"] = 2, --Risen Warrior\n        [\"195875\"] = 2, --Desecrated Bakar\n        [\"196645\"] = 2, --Desecrated Bakar\n        [\"195878\"] = 1, --Ukhel Beastcaller\n        [\"195876\"] = 2, --Descecrated Ohuna\n        --[\"195877\"] = 1, -- Risen Mystic\n        [\"195851\"] = 1, --Ukhel Deathspeaker\n        [\"195927\"] = 1, --Soulharvester Galtmaa (same)\n        [\"195928\"] = 1, --Soulharvester Duuren (same)\n        [\"195929\"] = 1, --Soulharvester Tumen (same)\n        [\"195930\"] = 1, --Soulharvester Mandakh (same)\n        [\"193553\"] = 2, --Nokhud Warhound\n        [\"193555\"] = 2, --Nokhud Villager (female)\n        [\"186643\"] = 2, --Nokhud Villager (male)\n        [\"193544\"] = 2, --Nokhud Houndsman\n        [\"193565\"] = 1, --Nokhud Defender\n        [\"193457\"] = 1, --Balara\n        [\"196263\"] = 2, --Nokhud Neophyte\n        [\"199325\"] = 2, --Nokhud Stormcaller\n        [\"196484\"] = 2, --Nokhud Stormcaller\n        [\"199294\"] = 2, --Nokhud Stormcaster\n        [\"199320\"] = 2, --Nokhud Warspear (RP version)\n        [\"199321\"] = 2, --Nokhud Warspear (RP version)\n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm,\n        [\"104251\"] = 1, --Duskwatch Sentry\n        [\"104246\"] = 1, --Duskwatch Guard\n        [\"111563\"] = 1, --Duskwatch Guard\n        [\"105705\"] = 1, --Bound Energy\n        [\"104295\"] = 2, --Blazing Imp\n        --[\"105715\"] = 1, --Watchful Inquisitor\n        [\"104277\"] = 2, --Legion Hound\n        [\"104300\"] = 1, --Shadow Mistress\n        \n        --Shadowmoon Burial Grounds\n        [\"75715\"] = 1, --Reanimated Ritual Bones\n        [\"75451\"] = 2, --Defiled Spirit (non-casting)\n        [\"75506\"] = 1, --Shadowmoon Loyalist\n        [\"77006\"] = 2, --Corpse Skitterling\n        --[\"76446\"] = 2, --Subjugated Enslaver\n        [\"76444\"] = 2, --Subjugated Soul\n        --[\"75979\"] = 1, --Exhumed Spirit\n        --[\"75459\"] = 1, --Plagued Bat\n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"197219\"] = 1, --Vile Lasher\n        [\"192329\"] = 2, --Territorial Eagle\n        [\"196694\"] = 2, --Arcane Forager\n        [\"196671\"] = 1, --Arcane Ravager\n        [\"196577\"] = 2, --Spellbound Battleaxe\n        [\"197904\"] = 2, --Spellbound Battleaxe\n        [\"196798\"] = 1, --Corrupted Manafiend\n        [\"196045\"] = 1, --Corrupted Manafiend\n        [\"196200\"] = 2, --Algeth'ar Echoknight\n        [\"196202\"] = 1, --Spectral Invoker\n        [\"196203\"] = 2, --Ethereal Restorer\n        \n        --The Azure Vault\n        [\"191313\"] = 2, --Bubbling Sapling\n        --[\"191164\"] = 1, --Arcane Tender\n        --[\"196115\"] = 1, --Arcane Tender\n        [\"196559\"] = 2, --Volatile Sapling\n        [\"187155\"] = 1, --Rune Seal Keeper\n        [\"187154\"] = 1, --Unstable Curator\n        [\"196116\"] = 1, --Crystal Fury\n        [\"196117\"] = 2, --Crystal Thrasher\n        [\"186740\"] = 2, --Arcane Construct\n        [\"189555\"] = 2, --Arcane Attendant\n        [\"190510\"] = 2, --Vault Guard\n        [\"191739\"] = 1, --Scalebane Liutenant\n        [\"187246\"] = 2, --Nullmagic Hornswog\n        [\"187242\"] = 2, --Tarasek Looter\n        [\"187240\"] = 1, --Draconid Breaker\n        \n        --Halls of Valor\n        [\"97087\"] = 2, --Valajar Champion\n        [\"95842\"] = 1, --Valajar Thundercaller\n        [\"96574\"] = 1, --Stormforged Sentinel\n        [\"95832\"] = 2, --Valajar Shieldmaiden\n        [\"101639\"] = 2, --Valajar Shieldmaiden\n        [\"101637\"] = 1, --Valajar Aspirant\n        [\"97197\"] = 1, --Valajar Purifier\n        [\"96640\"] = 1, --Valajar Marksman\n        [\"96611\"] = 2, --Angehoof Bull\n        [\"99922\"] = 2, --Ebonclaw Packmate\n        [\"96608\"] = 2, --Ebonclaw Worg\n        [\"97068\"] = 1, --Storm Drake\n        \n        --Ruby Life Pools\n        [\"188011\"] = 2, --Primal Terrasentry\n        [\"188067\"] = 2, --Flashfrost Chillweaver\n        [\"188244\"] = 1, --Primal Juggernaut\n        [\"189893\"] = 2, --Infused Whelp\n        [\"187894\"] = 2, --Infused Whelp\n        [\"187897\"] = 1, --Defier Draghar\n        [\"194622\"] = 2, --Scorchling\n        [\"190205\"] = 2, --Scorchling\n        [\"197698\"] = 1, --Thunderhead\n        [\"190034\"] = 1, --Blazebound Destroyer\n        [\"190207\"] = 1, --Primalist Cinderweaver\n        [\"197697\"] = 1, --Flamegullet\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"197982\"] = 2, --Storm Warrior\n        \n        --The Underrot\n        [\"131402\"] = 2, --Underrot Tick\n        [\"131436\"] = 1, --Chosen Blood Matron\n        [\"133663\"] = 1, --Fanatical Headhunter\n        [\"133852\"] = 2, --Living Rot\n        [\"130909\"] = 1, --Fetid Maggot\n        [\"133836\"] = 2, --Reanimated Guardian\n        [\"134284\"] = 1, --Fallen Deathspeaker\n        [\"135169\"] = 2, --Spirit Drain Totem\n        [\"138281\"] = 1, --Faceless Corruptor\n        [\"137458\"] = 2, --Rotting Spore\n        \n        --Freehold\n        [\"126928\"] = 2, --Irontide Corsair\n        [\"126918\"] = 1, --Irontide Crackshot\n        [\"128551\"] = 2, --Irontide Mastiff\n        [\"129602\"] = 1, --Irontide Enforcer\n        [\"127119\"] = 2, --Freehold Deckhand\n        [\"130521\"] = 2, --Freehold Deckhand\n        [\"129550\"] = 2, --Bilge Rat Padfoot\n        [\"129526\"] = 2, --Bilge Rat Swabby\n        [\"129548\"] = 2, --Blacktooth Brute\n        [\"130522\"] = 2, --Freehold Shipmate\n        [\"127124\"] = 2, --Freehold Barhand\n        [\"129559\"] = 2, --Cutwater Duelist\n        [\"130404\"] = 1, --Vermin Trapper\n        [\"126497\"] = 2, --Shiprat\n        [\"130024\"] = 2, --Soggy Shiprat\n        [\"129527\"] = 1, --Bilge Rat Buccaneer\n        [\"130011\"] = 2, --Irontide Buccaneer\n        [\"129599\"] = 2, --Cutwater Knife Juggler\n        [\"129547\"] = 2, --Blacktooth Knuckleduster\n        [\"129529\"] = 2, --Blacktooth Scrapper\n        [\"129601\"] = 2, --Cutwater Harpooner\n        [\"130400\"] = 1, --Irontide Crusher\n        [\"127019\"] = 2, --Target Dummy\n        [\"130012\"] = 2, --Irontide Ravager\n        [\"127111\"] = 1, --Irontide Oarsman\n        [\"127106\"] = 2, --Irontide Officer\n        \n        --Neltharion's Lair\n        [\"96247\"] = 2, --Vileshard Crawler\n        --[\"91006\"] = 1, --Rockback Gnasher\n        [\"98406\"] = 1, --Embershard Scorpion\n        [\"91001\"] = 1, --Tarspitter Lurker\n        [\"101438\"] = 1, --Vileshard Chunk\n        [\"105636\"] = 2, --Understone Drudge\n        [\"105720\"] = 2, --Understone Drudge\n        [\"92350\"] = 2, --Understone Drudge\n        [\"92610\"] = 2, --Understone Drummer\n        [\"92387\"] = 2, --Drums of War\n        [\"91332\"] = 1, --Stoneclaw Hunter\n        [\"90997\"] = 1, --Mightstone Breaker\n        [\"113998\"] = 1, --Mightstone Breaker\n        [\"94224\"] = 2, --Petrifying Totem\n        [\"90998\"] = 1, --Blightshard Shaper\n        [\"101437\"] = 2, --Burning Geode\n        [\"102430\"] = 2, --Tarspitter SLug\n        [\"102253\"] = 2, --Understone Demolisher\n        \n        --Vortex Pinnacle\n        [\"205326\"] = 2, --Gust Soldier\n        [\"45477\"] = 2, --Gust Soldier\n        [\"45915\"] = 1, --Armored Mistral\n        --[\"45912\"] = 1, --Wild Vortex\n        [\"45704\"] = 2, --Lurking Tempest\n        [\"204337\"] = 2, --Lurking Tempest\n        [\"45917\"] = 1, --Cloud Prince\n        [\"45924\"] = 1, --Turbulent Squall\n        [\"45922\"] = 2, --Empyrean Assassin\n        [\"45926\"] = 2, --Servant of Asaad\n        [\"45928\"] = 1, --Executor of the Caliph\n        [\"45932\"] = 2, --Skyfall Star\n        [\"45930\"] = 1, --Minister of Air\n        \n        --Halls of Infusion\n        [\"190345\"] = 2, --Primalist Geomancer\n        [\"190348\"] = 2, --Primalist Ravager\n        --[\"190340\"] = 1, --Refti Defender\n        [\"190342\"] = 1, --Containment Apperatus\n        [\"196712\"] = 1, --Nullification Device\n        [\"190366\"] = 2, --Curious Swoglet\n        [\"195399\"] = 2, --Curious Swoglet\n        [\"199037\"] = 1, --Primalist Shocktrooper\n        [\"190370\"] = 1, --Squallbringer Cyraz\n        [\"190923\"] = 2, --Zephyrling\n        [\"190373\"] = 1, --Primalist Galesinger\n        [\"190371\"] = 1, --Primalist Earthshaker\n        [\"190407\"] = 2, --Aqua Rager\n        [\"190359\"] = 2, --Skulking Zealot\n        \n        --Neltharus\n        [\"192787\"] = 2, --Qalashi Spinecrusher\n        [\"193293\"] = 2, --Qalashi Warden\n        [\"192781\"] = 2, --Ore Elemental\n        [\"192786\"] = 2, --Qalashi Plunderer\n        [\"189227\"] = 1, --Qalashi Hunter\n        [\"189247\"] = 2, --Tamed Phoenix\n        [\"189266\"] = 2, --Qalashi Trainee\n        [\"189470\"] = 2, --Lava Flare\n        [\"189472\"] = 2, --Qalashi Lavabearer\n        [\"189467\"] = 2, --Qalashi Bonesplitter\n        [\"189471\"] = 1, --Qalashi Blacksmith\n        [\"193291\"] = 1, --Apex Blazewing\n        [\"194389\"] = 2, --Lava Spawn\n        \n        --Uldaman\n        [\"184134\"] = 2, --Scavenging Leaper\n        [\"184020\"] = 1, --Hulking Berserker\n        [\"184019\"] = 2, --Burly Rock-Thrower\n        [\"186664\"] = 2, --Stonevault Ambusher\n        [\"186696\"] = 2, --Quaking Totem\n        [\"184130\"] = 2, --Earthen Custodian\n        [\"184319\"] = 1, --Refti Custodian\n        [\"184107\"] = 1, --Runic Protector\n        [\"184303\"] = 2, --Skittering Crawler\n        [\"184300\"] = 1, --Ebonstone Golem\n        [\"184131\"] = 1, --Earthen Guardian\n        [\"184331\"] = 1, --Infinite Timereaver\n        [\"191311\"] = 2, --Infinite Whelp\n        \n        --Brackenhide\n        [\"185529\"] = 1, --Bracken Warscourge\n        [\"185508\"] = 2, --Claw Fighter\n        [\"186206\"] = 2, --Cruel Bonecrusher\n        [\"186191\"] = 1, --Decay Speaker\n        [\"185534\"] = 1, --Bonebolt Hunter\n        [\"185691\"] = 2, --Vicious Hyena\n        [\"186122\"] = 2, --Rira Hackclaw\n        [\"186124\"] = 1, --Gashtooth\n        [\"186208\"] = 1, --Rotbow Stalker\n        [\"186284\"] = 2, --Gutchewer Bear\n        [\"194745\"] = 2, --Rotfang Hyena\n        [\"186227\"] = 2, --Monstrous Decay\n        [\"189299\"] = 2, --Decaying Slime\n        [\"194330\"] = 2, --Decaying Slime\n        [\"192481\"] = 2, --Decaying Slime\n        [\"194273\"] = 2, --Witherling\n        [\"187238\"] = 2, --Witherling\n        [\"187231\"] = 2, --Wither Biter\n        [\"187315\"] = 2, --Disease Slasher\n        [\"191243\"] = 2, --Wild Lasher\n        [\"189363\"] = 2, --Infected Lasher\n        [\"189531\"] = 1, --Decayed Elder\n        [\"186226\"] = 1, --Fetid Rotsinger\n        --[\"186229\"] = 1, --Wilted Oak\n        [\"194373\"] = 2, --Witherling\n        [\"199916\"] = 2, --Decaying Slime\n        [\"208994\"] = 2, --Infected Lasher\n        [\"186220\"] = 1, --Brackenhide Shaper\n        \n        --Dawn of the Infinite\n        [\"205408\"] = 1, --Infinite Timeslicer\n        [\"205435\"] = 2, --Epoch Ripper\n        [\"206066\"] = 1, --Timestream Leech\n        [\"206065\"] = 2, --Interval\n        [\"206068\"] = 2, --Temporal Fusion\n        [\"206063\"] = 2, --Temporal Deviation\n        [\"204536\"] = 2, --Blight Chunk\n        [\"205691\"] = 2, --Iridikron's Creation\n        [\"205151\"] = 2, --Tyr's Vanguard\n        [\"201223\"] = 1, --Infinite Twilight Magus\n        [\"205365\"] = 2, --Time-Lost Tidehunter\n        [\"205366\"] = 2, --Time-Lost Wakethrasher\n        [\"205363\"] = 1, --Infinite Waveshaper\n        [\"205408\"] = 1, --Infinite Timeslicer\n        [\"205408\"] = 1, --Infinite Timeslicer\n        [\"205408\"] = 1, --Infinite Timeslicer\n        [\"205408\"] = 1, --Infinite Timeslicer\n        \n        --Waycrest Manor\n        [\"135240\"] = 2, --Soul Essence\n        [\"131585\"] = 2, --Enthralled Guard\n        [\"135052\"] = 2, --Blight Toad\n        [\"131677\"] = 1, --Heartsbane Runeweaver\n        [\"135474\"] = 1, --Dreadwing Raven\n        [\"131587\"] = 1, --Bewitched Captain\n        [\"131858\"] = 2, --Thornguard\n        [\"135329\"] = 1, --Matron Bryndle\n        [\"134024\"] = 2, --Devouring Maggot\n        [\"134041\"] = 2, --Infected Peasant\n        [\"135048\"] = 2, --Gorestained Piglet\n        [\"135234\"] = 2, --Diseased Mastiff\n        [\"131847\"] = 2, --Waycrest Reveler\n        [\"131586\"] = 1, --Banquet Steward\n        [\"131669\"] = 2, --Jagged Hound\n        [\"139269\"] = 2, --Gloom Horror\n        \n        --Darkheart Thicket\n        [\"95772\"] = 2, --Frenzied Nightclaw\n        [\"101679\"] = 2, --Dreadsoul Poisoner\n        [\"95779\"] = 1, --Festerhide Grizzly\n        [\"95766\"] = 1, --Crazed Razorbeak\n        [\"99360\"] = 2, --Vilethorn Blossom\n        [\"99358\"] = 1, --Rotheart Dryad\n        [\"100529\"] = 2, --Hatespawn Slime\n        [\"101074\"] = 2, --Hatespawn Whelpling\n        [\"100526\"] = 1, --Tormented Bloodseeker\n        [\"99365\"] = 2, --Taintheart Stalker\n        [\"100539\"] = 2, --Taintheart Deadeye\n        [\"102277\"] = 2, --Tainted Deadeye Decoy\n        \n        --Black Rook Hold\n        [\"98366\"] = 2, --Ghostly Retainer\n        [\"98368\"] = 1, --Ghostly Protector\n        [\"98677\"] = 2, --Rook Spiderling\n        [\"98681\"] = 1, --Rook Spinner\n        [\"98691\"] = 1, --Risen Scout\n        [\"98243\"] = 1, --Soul-Torn Champion\n        [\"101839\"] = 2, --Risen Companion\n        [\"101549\"] = 2, --Arcane Minion\n        [\"98275\"] = 1, --Risen Archer\n        [\"98900\"] = 2, --Wyrmtongue Trickster\n        [\"98792\"] = 2, --Wyrmtongue Scavenger\n        [\"98810\"] = 1, --Wrathguard Bladelord\n        [\"102781\"] = 2, --Fel Bat Pup\n        [\"98813\"] = 2, --Bloodscent Felhound\n        [\"98813\"] = 2, --Bloodscent Felhound\n        [\"98813\"] = 2, --Bloodscent Felhound\n        [\"98813\"] = 2, --Bloodscent Felhound\n        [\"102094\"] = 1, --Risen Swordsman\n        \n        --Atal'Dazar\n        [\"128435\"] = 2, --Toxic Saurid\n        [\"122972\"] = 1, --Dazar'ai Augur\n        [\"122971\"] = 2, --Dazar'a Juggernaut\n        [\"127799\"] = 2, --Dazar'ai Honor Guard\n        [\"128455\"] = 1, --T'lonja\n        [\"129552\"] = 1, --Monzumi\n        [\"127879\"] = 1, --Shieldbearer of Zul\n        [\"122970\"] = 2, --Shadowblade Stalker\n        [\"127757\"] = 2, --Reanimated Honor Guard\n        [\"122984\"] = 1, --Dazar'ai Colossus\n        \n        --Everbloom\n        [\"81985\"] = 1, --Everbloom Cultivator\n        [\"81864\"] = 2, --Dreadpetal\n        [\"86372\"] = 1, --Melded Berserker\n        [\"212981\"] = 2, --Hapless Assistant\n        \n        --Throne of the Tides\n        [\"40584\"] = 2, --Naz'jar Invader\n        [\"212681\"] = 2, --Vicious Snap Dragon\n        [\"39616\"] = 2, --Naz'jar Invader\n        [\"39960\"] = 2, --Deep Murloc Drudge\n        [\"40577\"] = 1, --Naz'jar Sentinel\n        [\"213607\"] = 2, --Deep Sea Murloc\n        [\"40633\"] = 1, --Naz'jar Honorguard\n        [\"40935\"] = 2, --Gilgoblin Hunter\n        [\"40923\"] = 2, -- Unstable Corruption\n        [\"40925\"] = 1, -- Tainted Sentry\n        [\"213942\"] = 1, -- Sludge\n        [\"212778\"] = 2, --Minion of Ghur'sha\n        [\"40936\"] = 1, --Faceless Watcher\n        \n    }\n    \nend",
},
["Time"] = 1711197516,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Ru_9FLVjI/24",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2343,
["semver"] = "1.0.23",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = 24,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mid prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Low prio",
},
{
["Type"] = 4,
["Key"] = "color",
["Value"] = false,
["Name"] = "Enable Coloring",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to be colored based on priority.",
},
{
["Type"] = 1,
["Key"] = "midColor",
["Value"] = {
1,
0.92941182851791,
0,
1,
},
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for mid priority.",
},
{
["Type"] = 1,
["Key"] = "lowColor",
["Value"] = {
0.49803924560547,
0.49803924560547,
0.49803924560547,
1,
},
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set color for low priority.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
["willBeReadyColor"] = {
0.7764706611633301,
0.6980392336845398,
0.4666666984558106,
1,
},
["readyColor"] = {
0.3960784673690796,
0.6509804129600525,
0.3960784673690796,
1,
},
},
["LastHookEdited"] = "Cast Start",
["UID"] = "0x661711831a72796",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if(unitFrame.ActorType ~= \"friendlyplayer\" and unitFrame.ActorType ~= \"friendlynpc\"  ) then\n        local spec = GetSpecialization()\n        envTable.spec = spec\n        if envTable.class ~= 9 then\n            envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n        else\n            -- Special warlock logic because warlocks are special\n            if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n                if IsSpellKnown(19647, true) then -- Felhunter\n                    envTable.kickId = 119910\n                else -- Look for Grimoire of Sacrifice\n                    local i, found = 1, false\n                    local buff = UnitBuff(\"player\", i)\n                    while buff do\n                        if buff == \"Grimoire of Sacrifice\" then\n                            found = true\n                            buff = nil\n                        else\n                            i = i + 1\n                            buff = UnitBuff(\"player\", i)\n                        end\n                    end\n                    if found == true then\n                        envTable.kickId = 132409\n                    else \n                        envTable.kickId = nil\n                    end\n                end\n            elseif spec == 2 then -- Demo\n                if IsSpellKnown(89766, true) then -- Felguard\n                    envTable.kickId = 119914\n                elseif IsSpellKnown(19647, true) then -- Felhunter\n                    envTable.kickId = 119910\n                else \n                    envTable.kickId = nil \n                end\n            end\n        end\n        \n        -- Check for cast\n        local name, _, _, _, _, _, _, notInterruptible = UnitCastingInfo(unitId)\n        if name == nil then    \n            -- Check for channel\n            name, _, _, _, _, _, notInterruptible = UnitChannelInfo(unitId)\n            if name == nil then return end\n        end\n        envTable.notInterruptible = notInterruptible\n        \n        local InterruptCooldown = nil\n        if envTable.kickId ~= nil then\n            InterruptCooldown = GetSpellCooldown(envTable.kickId)\n        else\n            InterruptCooldown = 1\n        end\n        \n        if envTable.notInterruptible then\n            --Plater.SetCastBarBorderColor (unitFrame, 1, 0, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"protectedColor\"])\n        elseif InterruptCooldown > 0 then\n            --Plater.SetCastBarBorderColor (unitFrame, 1, 1, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"cooldownColor\"])\n        else\n            --Plater.SetCastBarBorderColor(unitFrame, 0, 1, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"readyColor\"])\n        end\n    end\nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if(unitFrame.ActorType ~= \"friendlyplayer\" and unitFrame.ActorType ~= \"friendlynpc\"  ) then\n        -- Check if the unit is still casting (did someone else interrupt?)\n        local name = UnitCastingInfo(unitId) or UnitChannelInfo(unitId)\n        \n        if self.IsInterrupted then\n            Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n            return\n        end\n        \n        local interruptCooldownStart, duration = nil\n        \n        if envTable.kickId ~= nil then\n            interruptCooldownStart, duration = GetSpellCooldown(envTable.kickId)\n            local interruptEndTime =  interruptCooldownStart + duration\n            local   interruptRemainingCooldown = max ( interruptEndTime - GetTime(), 0)\n            local  castRemainingCooldown = max (unitFrame.castBar.spellEndTime - GetTime(), 0)\n            \n            if interruptCooldownStart  ~= 0 then\n                if ( interruptRemainingCooldown + modTable.config[\"reactionTime\"] - castRemainingCooldown ) < 0 then\n                    interruptCooldownStart  = -1\n                end\n            end\n        else\n            interruptCooldownStart = 1\n        end\n        \n        if envTable.notInterruptible then\n            --Plater.SetCastBarBorderColor (unitFrame, 1, 0, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"protectedColor\"])\n        elseif  interruptCooldownStart > 0 then\n            --Plater.SetCastBarBorderColor (unitFrame, 1, 1, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"cooldownColor\"])\n        elseif  interruptCooldownStart < 0 then\n            --Plater.SetCastBarBorderColor (unitFrame, 1, 1, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"willBeReadyColor\"])\n        else\n            --Plater.SetCastBarBorderColor(unitFrame, 0, 1, 0)\n            Plater.SetCastBarBorderColor(unitFrame, modTable.config[\"readyColor\"])\n        end\n    end\n    \n    \nend",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.spec = GetSpecialization()\nend",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = 96231, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = 116705, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752}, -- Demon Hunter\n        [13] = {[1] = 351338, [2] = 351338, [3] = 351338} -- Evoker\n    }\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\nend",
},
["Time"] = 1722438505,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/2I4rmdjFQ/1",
["Icon"] = 608940,
["Enabled"] = true,
["Revision"] = 92,
["semver"] = "1.0.0",
["Author"] = "Maeliin-Silvermoon",
["Desc"] = "Changes the color of the nameplate castbar border based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["Name"] = "Interrupt CD Indicator",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 1,
["Name"] = "Kick Ready Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "readyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar border when your interrupt is ready.",
},
{
["Type"] = 1,
["Name"] = "Will Be Ready Color",
["Value"] = {
1,
0.35686275362968,
0,
1,
},
["Key"] = "willBeReadyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar border when your interrupt will be ready intime.",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Value of how many seconds the interrupt has to be off cooldown before the cast ends to indicate that it will be ready in time.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.3,
["Name"] = "Reation Time",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "reactionTime",
},
},
},
},
["aura_cooldown_show_swipe"] = false,
["extra_icon_caster_outline"] = "OUTLINE",
["auras_per_row_amount2"] = 4,
["aura_width"] = 15,
["health_statusbar_bgcolor"] = {
0.04313725605607,
0.04313725605607,
0.04313725605607,
0.70000001788139,
},
["cast_audiocues"] = {
[384524] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376683] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375727] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412129] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372222] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372223] = "nil",
[427176] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[253721] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[323137] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372735] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[266209] = "nil",
[269843] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388801] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[340160] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[260894] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[387910] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[226406] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[183088] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412200] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[197974] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[370764] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[201226] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377204] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427376] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[413607] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[432031] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369365] = "nil",
[395184] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372107] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257870] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[256627] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[333477] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[439621] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[451543] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376892] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[367521] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[169929] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257426] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[397931] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[434779] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[268202] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[422541] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[448105] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[422414] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427323] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[429427] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[412215] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257397] = "nil",
[384868] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[448619] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372311] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[449130] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[437719] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[391118] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369061] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[396665] = "nil",
[377732] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[408141] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388060] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[450854] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369828] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[164357] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375439] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[378818] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[411012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[386660] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[253544] = "Interface\\Addons\\SharedMedia_MyMedia\\sound\\Interrupt.ogg",
[382708] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200345] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[188169] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385578] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[451496] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[428293] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382712] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374361] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[371875] = "nil",
[426893] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382233] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[440218] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[88308] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[333488] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375943] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[397889] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[257756] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427342] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[453161] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[324323] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257862] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226296] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388392] = "nil",
[272609] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427025] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200784] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[375348] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265721] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372201] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[381525] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[387629] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427616] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[199151] = "nil",
[434824] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426645] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[87618] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Jump.ogg",
[321968] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375327] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[209628] = "nil",
[387950] = "nil",
[377559] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382277] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[320822] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[169179] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[441119] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[384978] = "nil",
[416139] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427359] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[431494] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200768] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[433662] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[462216] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[449090] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377034] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200913] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[445457] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388911] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[188404] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[432198] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200291] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[156718] = "nil",
[388976] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385958] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[448640] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[269029] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[447395] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426860] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[323496] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[443500] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372225] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[373742] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385536] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[432520] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[375251] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200261] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[432967] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[396812] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[265019] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369409] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[411994] = "nil",
[372087] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374839] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226304] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[391723] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[260793] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[193505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[383823] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[367484] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[393432] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265372] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[183465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376170] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[419351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[331718] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[435012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376171] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[255567] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[413529] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377383] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369573] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265540] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369675] = "nil",
},
["pet_width_scale"] = 0.99999994039536,
["extra_icon_timer_outline"] = "OUTLINE",
["quick_hide"] = true,
["extra_icon_timer_size"] = 7,
["target_highlight_color"] = {
1,
1,
},
["target_shady_enabled"] = false,
["aura_grow_direction"] = 3,
["health_animation_time_dilatation"] = 2.8699998855591,
["extra_icon_stack_outline"] = "OUTLINE",
["resources"] = {
["y_offset"] = 1,
["y_offset_target"] = 9,
["scale"] = 0.79999995231628,
},
["click_space"] = {
135,
38,
},
["extra_icon_auras"] = {
277242,
},
["castbar_target_font"] = "Cronix-Bold",
["castbar_target_outline"] = "NONE",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["cast_statusbar_spark_alpha"] = 0.699999988079071,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
["cast_statusbar_fadein_time"] = 0.019999999552965,
["cast_statusbar_spark_color"] = {
0.98823529411765,
[3] = 0.94117647058823,
},
["hover_highlight_alpha"] = 0.199999988079071,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 0,
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.6700000762939,
["ui_parent_buff_strata"] = "LOW",
["healthbar_framelevel"] = 0,
["profile_name"] = "croniX Nameplates",
["health_statusbar_bgtexture"] = "Cronix",
["indicator_raidmark_anchor"] = {
["y"] = 0.4000015258789063,
["x"] = 14,
["side"] = 10,
},
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
nil,
0.56078433990479,
0.55686277151108,
},
["aggro"] = {
0,
0.71372550725937,
},
["nocombat"] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
["noaggro"] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
["pulling"] = {
0.69019609689713,
0.6235294342041,
1,
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
["280001"] = true,
["297133"] = true,
["328501"] = false,
["227931"] = true,
["163689"] = true,
["233210"] = true,
["329181"] = false,
},
["debuff"] = {
224991,
277950,
},
["debuff_banned"] = {
["331653"] = true,
["330911"] = true,
["299151"] = true,
["327980"] = true,
["284678"] = true,
["281242"] = true,
["342938"] = true,
["340007"] = true,
},
["debuff_tracked"] = {
["341408"] = true,
["324652"] = false,
["342938"] = true,
["281242"] = true,
},
["buff_banned"] = {
["333553"] = true,
["281242"] = true,
["61573"] = true,
["206150"] = true,
["61574"] = true,
},
},
["extra_icon_caster_font"] = "Cronix",
["castbar_target_show"] = true,
["cast_statusbar_color_interrupted"] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
["cast_statusbar_color"] = {
0,
0.7137255072593689,
1,
1,
},
["update_throttle"] = 0.099999994039536,
["tocversion"] = 110000,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "Cronix-Bold",
["not_affecting_combat_alpha"] = 0.3999999761581421,
["use_health_animation"] = true,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["focus_as_target_alpha"] = true,
["aura_breakline_space"] = 4,
["target_shady_alpha"] = 0.2999999821186066,
["aura_sort"] = true,
["tap_denied_color"] = {
0.60392159223557,
0.60392159223557,
0.60392159223557,
},
["bossmod_icons_anchor"] = {
["y"] = 0,
},
["target_highlight_height"] = 18,
["indicator_raidmark_scale"] = 0.699999988079071,
["castbar_framelevel"] = 0,
["version"] = 38,
["first_run2"] = true,
["aura_width2"] = 15,
["plater_resources_scale"] = 0.8,
["extra_icon_auras_mine"] = {
["277242"] = false,
["224991"] = true,
},
["buff_frame_anchor_and_size_migrated"] = true,
["patch_version"] = 36,
["no_spellname_length_limit"] = true,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 7,
["ui_parent_cast_strata"] = "DIALOG",
["number_region_first_run"] = true,
["cast_statusbar_color_channeling"] = {
0.37647062540054,
nil,
0.48235297203064,
0.96000000089407,
},
["aura2_grow_direction"] = 3,
["aura_alpha"] = 0.84999996423721,
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["extra_icon_height"] = 8,
["range_check_alpha_friendlies"] = 0.7999999523162842,
["aura_show_enrage"] = true,
["dps"] = {
["colors"] = {
["solo"] = {
0,
0.71372550725937,
},
["notontank"] = {
0.69019609689713,
0.6235294342041,
},
["aggro"] = {
0.61568629741669,
0.18823531270027,
0.21176472306252,
},
["noaggro"] = {
0,
0.71372550725937,
},
["pulling"] = {
nil,
0.56078433990479,
0.55686277151108,
},
},
},
["indicator_elite"] = false,
["plater_resources_anchor"] = {
["y"] = 40,
["x"] = 0,
["side"] = 8,
},
["castbar_target_text_size"] = 6,
["captured_casts"] = {
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[412129] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164804,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102287,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90997,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[201226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[413607] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Bloodworker",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[369365] = {
["npcID"] = 184132,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[257870] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[256627] = {
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[333477] = {
["npcID"] = 163621,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[451543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Queen",
["npcID"] = 220003,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[257426] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[419351] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[422541] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[422414] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[427323] = {
["source"] = "Cursed Stormrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[429427] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[412215] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[257397] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[449130] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[369061] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[377732] = {
["npcID"] = 184319,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[253544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[384868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[397931] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[397889] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[257756] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[453161] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[331718] = {
["npcID"] = 171772,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[387629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[320822] = {
["npcID"] = 165222,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[321968] = {
["npcID"] = 164929,
},
[375327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[448640] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[462216] = {
["source"] = "Twilight Flamerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[369465] = {
["npcID"] = 186420,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[369409] = {
["npcID"] = 184130,
},
[200768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[449090] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[375348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[340160] = {
["npcID"] = 173655,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[323496] = {
["npcID"] = 165872,
},
[324323] = {
["npcID"] = 165919,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[427342] = {
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[369828] = {
["npcID"] = 184023,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[432967] = {
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[433662] = {
["isChanneled"] = true,
["source"] = "Reinforced Drone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[412505] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[226304] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[265372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[451496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Queen",
["npcID"] = 220003,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[413529] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[369675] = {
["npcID"] = 184022,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
},
["plater_resources_personal_bar"] = false,
["extra_icon_show_purge_border"] = {
nil,
0.71372550725937,
},
["cast_statusbar_spark_width"] = 20,
},
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Fixate On You"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Important Target [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Add - Explode on Die [P]"] = 1,
["Auto Set Skull"] = 11,
["Cast - Shield Interrupt"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - On Going Cast [P]"] = 2,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Spiteful Affix"] = 3,
["Cast - Circular Swipe"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Show Energy"] = 11,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["version"] = -1,
["Name"] = "Add - Important [P]",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Add - Warning [P]",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1596791840,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Extra Border [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Current Target Color [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Time"] = 1597097268,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Name"] = "Execute Range [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Time"] = 1620377377,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Attacking Specific Unit [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Time"] = 1608663128,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Aura Reorder [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Time"] = 1621935143,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Options"] = {
},
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function <Interface/AddOns/Plater/Plater.lua:1555>\n",
},
["resources_settings"] = {
["chr"] = {
["Player-3691-073D5B7D"] = "Runes",
["Player-3691-0A230CF3"] = "Runes",
["Player-581-0A8CFFE8"] = "Runes",
["Player-3691-09E4C064"] = "Chi",
["Player-3691-09521F9C"] = "Runes",
["Player-3691-09239812"] = "ComboPoints",
["Player-3691-0922ED1F"] = "Runes",
["Player-3691-09E75064"] = "Essence",
},
},
["npc_cache"] = {
[170487] = {
"Stoneguard Watcher",
"8.0 Boost Experience - Horde",
},
[101738] = {
"Arcane Construct",
"8.0 Boost Experience - Horde",
},
[107104] = {
"Target Dummy",
"8.0 Boost Experience - Horde",
},
[111998] = {
"Horde Grunt",
"8.0 Boost Experience - Horde",
},
[79414] = {
"Training Dummy",
"8.0 Boost Experience - Horde",
},
[170484] = {
"Chillbone Gnawer",
"8.0 Boost Experience - Horde",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1.562500034924597,
["first_run3"] = true,
["patch_version"] = 36,
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateShowEnemies"] = "0",
["NamePlateClassificationScale"] = "1",
["NamePlateVerticalScale"] = "1",
},
["number_region_first_run"] = true,
["aura2_y_offset"] = 5,
["login_counter"] = 72,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1657326232,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["SpellIds"] = {
350421,
355787,
348513,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
["Time"] = 1660511537,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 341,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetFromScale(0.2, 1)\n        texture.scale:SetToScale(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["SpellIds"] = {
373429,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1667700811,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604599472,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 355,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Skull Texture",
["Name"] = "Skull Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Skull Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1618996775,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
["Enabled"] = true,
["Revision"] = 843,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Tank Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1606506781,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 109,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Health Markers [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604607993,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 406,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Unit - Main Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
["Time"] = 1647994498,
["url"] = "",
["Icon"] = 4263293,
["Enabled"] = true,
["Revision"] = 70,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "ColorSettingsAnchor",
["Value"] = "Color Settings",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Adjust the nameplate color for each mob",
},
{
["Type"] = 1,
["Name"] = "Haste Color",
["Value"] = {
0.4549019607843137,
0.2156862745098039,
0.5490196078431373,
1,
},
["Key"] = "hasteColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "haste color",
},
{
["Type"] = 1,
["Key"] = "msColor",
["Value"] = {
0.3098039215686275,
0.5215686274509804,
0.2588235294117647,
1,
},
["Name"] = "Moviment Speep Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "moviment speep color",
},
{
["Type"] = 1,
["Name"] = "Cooldown Reduction Color",
["Value"] = {
0.1725490196078431,
0.2823529411764706,
0.5215686274509804,
1,
},
["Key"] = "cdrColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "cooldown reduction color",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "SizeSettingsAnchor",
["Value"] = "Size Settings",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "canChangeSize",
["Value"] = false,
["Name"] = "Change Nameplate Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If this is checked, the nameplate size is changed to the values below",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "total width of the nameplate",
["Min"] = 50,
["Key"] = "width",
["Value"] = 100,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 40,
["Desc"] = "total height of the nameplate",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 12,
["Key"] = "height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Height",
},
{
["Type"] = 6,
["Name"] = "Option 9",
["Value"] = 0,
["Key"] = "option9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "BorderSettingsAnchor",
["Value"] = "Border Settings",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Paint Border",
["Value"] = true,
["Key"] = "showBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
},
{
["Type"] = 6,
["Name"] = "Option 12",
["Value"] = 0,
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "NameSettings",
["Value"] = "Name Settings",
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Haste Name",
["Value"] = "HASTE",
["Key"] = "hasteName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "cdrName",
["Value"] = "CDR",
["Name"] = "Cooldown Reduction Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Movement Speed Name",
["Value"] = "MS",
["Key"] = "msName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Relics 9.2 M Dungeons",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1605214963,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 607,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1604454032,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 351,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
["Time"] = 1604617977,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 513,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Health Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the health bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1604617585,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 595,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
["Time"] = 1666836560,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 346,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["__TrashAt"] = 1671723736,
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1625696653,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 836,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Name"] = "Frame Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Frame Height",
["Value"] = 20,
["Key"] = "targetFrameHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1626467946,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1162,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1660259323,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 52,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1618996691,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1060,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
["Time"] = 1604698647,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 462,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1660340256,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 25,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
["Time"] = 1604599443,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 460,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.275,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1618996917,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 717,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["__TrashAt"] = 1671723736,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
["Time"] = 1671311518,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 511,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
209033,
360850,
212784,
207980,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1682380871,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
["Time"] = 1670202019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 468,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 5,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1682380871,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670202618,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 798,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
["__TrashAt"] = 1682380871,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"197697",
"59544",
},
["__TrashAt"] = 1691597661,
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[227931] = true,
[233210] = true,
[209859] = true,
[163689] = true,
[297133] = true,
},
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Extra Border"] = 2,
},
["aura_y_offset"] = 5,
},
},
["InterruptableSpells"] = {
[278444] = true,
[367503] = true,
[19647] = true,
[411300] = true,
[252923] = true,
[168040] = true,
[187707] = true,
[255824] = true,
[260701] = true,
[388862] = true,
[396640] = true,
[31935] = true,
[388863] = true,
[426731] = true,
[253562] = true,
[377389] = true,
[20484] = true,
[378282] = true,
[426541] = true,
[378155] = true,
[428263] = true,
[164887] = true,
[199663] = true,
[415770] = true,
[96231] = true,
[356995] = true,
[415773] = true,
[220543] = true,
[387596] = true,
[132409] = true,
[372743] = true,
[413607] = true,
[686] = true,
[264050] = true,
[395694] = true,
[260700] = true,
[93985] = true,
[428526] = true,
[387843] = true,
[374339] = true,
[377008] = true,
[199786] = true,
[384161] = true,
[418200] = true,
[147362] = true,
[372683] = true,
[194153] = true,
[386071] = true,
[422090] = true,
[417481] = true,
[105174] = true,
[418202] = true,
[387411] = true,
[201837] = true,
[371984] = true,
[204896] = true,
[173563] = true,
[383651] = true,
[382440] = true,
[382249] = true,
[386012] = true,
[266036] = true,
[377341] = true,
[263165] = true,
[404754] = true,
[411958] = true,
[165213] = true,
[392451] = true,
[400165] = true,
[361469] = true,
[183752] = true,
[47528] = true,
[691] = true,
[426240] = true,
[375596] = true,
[188196] = true,
[413427] = true,
[369365] = true,
[386015] = true,
[201839] = true,
[369823] = true,
[227913] = true,
[11978] = true,
[351338] = true,
[267824] = true,
[348] = true,
[201298] = true,
[429176] = true,
[34914] = true,
[194509] = true,
[51505] = true,
[1064] = true,
[2948] = true,
[8936] = true,
[1766] = true,
[387613] = true,
[412922] = true,
[407121] = true,
[266225] = true,
[169839] = true,
[255041] = true,
[200248] = true,
[372223] = true,
[369675] = true,
[427459] = true,
[420320] = true,
[373017] = true,
[169840] = true,
[384365] = true,
[253544] = true,
[357208] = true,
[373897] = true,
[374544] = true,
[392576] = true,
[386024] = true,
[169841] = true,
[420090] = true,
[407891] = true,
[264390] = true,
[373680] = true,
[386026] = true,
[265368] = true,
[164965] = true,
[91807] = true,
[6552] = true,
[252781] = true,
[397394] = true,
[382266] = true,
[197797] = true,
[2139] = true,
[428103] = true,
[408805] = true,
[417011] = true,
[30451] = true,
[8092] = true,
[200630] = true,
[264520] = true,
[377503] = true,
[374045] = true,
[268278] = true,
[377488] = true,
[259572] = true,
[265876] = true,
[225562] = true,
[376725] = true,
[412233] = true,
[168092] = true,
[436841] = true,
[253517] = true,
[190984] = true,
[200642] = true,
[388392] = true,
[200658] = true,
[260696] = true,
[387564] = true,
[377402] = true,
[408092] = true,
[372711] = true,
[384633] = true,
[386546] = true,
[417018] = true,
[395152] = true,
[383231] = true,
[97547] = true,
[395427] = true,
[274283] = true,
[253583] = true,
[204243] = true,
[57994] = true,
[369399] = true,
[374563] = true,
[76813] = true,
[416256] = true,
[369400] = true,
[392924] = true,
[359073] = true,
[377950] = true,
[387125] = true,
[164973] = true,
[263959] = true,
[115175] = true,
[116705] = true,
[168082] = true,
[381770] = true,
[264024] = true,
[426768] = true,
[264407] = true,
[381516] = true,
[377500] = true,
[384194] = true,
[373803] = true,
[392398] = true,
[387618] = true,
[395160] = true,
[382474] = true,
[420330] = true,
[373932] = true,
[32747] = true,
[585] = true,
[407124] = true,
[391528] = true,
[384197] = true,
[377384] = true,
[415435] = true,
[374699] = true,
[426783] = true,
[201399] = true,
[369674] = true,
[417030] = true,
[411994] = true,
[391403] = true,
[415437] = true,
[347008] = true,
[260697] = true,
[385029] = true,
[412378] = true,
[369602] = true,
[369411] = true,
[384808] = true,
[373395] = true,
[253526] = true,
[260698] = true,
[426596] = true,
[367500] = true,
[271174] = true,
[201411] = true,
[2060] = true,
[376171] = true,
[2061] = true,
[260699] = true,
[372538] = true,
[5143] = true,
[374706] = true,
[14914] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["captured_casts"] = {
[36807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[345554] = {
["npcID"] = 177168,
},
[398796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Brute",
["npcID"] = 200486,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[294362] = {
["npcID"] = 155908,
},
[331223] = {
["npcID"] = 162763,
},
[339415] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[368085] = {
["npcID"] = 183722,
},
[271841] = {
["npcID"] = 157002,
},
[404945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Iyazael",
["npcID"] = 199401,
},
[275937] = {
["source"] = "Frigidus",
["event"] = "SPELL_CAST_START",
["npcID"] = 204425,
},
[392659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Alpha",
["npcID"] = 194224,
},
[347609] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[228086] = {
["npcID"] = 114584,
},
[392660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Hornswog",
["npcID"] = 187111,
},
[320989] = {
["npcID"] = 156561,
},
[347610] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[390613] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[329181] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[384471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Skitter",
["npcID"] = 196758,
},
[320991] = {
["npcID"] = 162038,
},
[300514] = {
["npcID"] = 150146,
},
[170751] = {
["npcID"] = 156158,
},
[384473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icegnaw Mantacorn",
["npcID"] = 187826,
},
[404951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[355806] = {
["npcID"] = 179891,
},
[349663] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[339425] = {
["npcID"] = 173447,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[218875] = {
["npcID"] = 152500,
},
[318949] = {
["npcID"] = 163894,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullmagic Hornswog",
["npcID"] = 187246,
},
[331237] = {
["npcID"] = 162763,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[353763] = {
["npcID"] = 179135,
},
[355811] = {
["npcID"] = 180031,
},
[392671] = {
["source"] = "Vicious Ice Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186392,
},
[321000] = {
["npcID"] = 177134,
},
[421340] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[390624] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[392672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Vanguard",
["npcID"] = 196927,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[425437] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[76171] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[169732] = {
["npcID"] = 84877,
},
[300525] = {
["npcID"] = 150142,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[407009] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 202791,
},
[310765] = {
["npcID"] = 159677,
},
[353769] = {
["npcID"] = 179135,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[333294] = {
["npcID"] = 169893,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klozicc the Ascended",
["npcID"] = 187209,
},
[423396] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[321009] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[331248] = {
["npcID"] = 171745,
},
[390633] = {
["npcID"] = 189954,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 82721,
["encounterID"] = 1732,
},
[411111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[323058] = {
["npcID"] = 165609,
},
[392682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[411112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[323059] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164804,
},
[366062] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[396779] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[333299] = {
["npcID"] = 169893,
},
[384493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Hunter",
["npcID"] = 184657,
},
[396780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 191658,
},
[392685] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 198081,
},
[339444] = {
["npcID"] = 173276,
},
[392686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[172810] = {
["npcID"] = 81603,
},
[421355] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[323064] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[282110] = {
["source"] = "Kaldorei Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210645,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[355830] = {
["npcID"] = 179893,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 191654,
},
[199433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[425455] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[296447] = {
["npcID"] = 152644,
},
[390644] = {
["npcID"] = 189954,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 59051,
},
[382454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Dragonspawn",
["npcID"] = 188802,
},
[294401] = {
["npcID"] = 168102,
},
[404980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[423410] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[366074] = {
["npcID"] = 183927,
},
[404982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[300547] = {
["npcID"] = 150142,
},
[321025] = {
["npcID"] = 157754,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[169744] = {
["npcID"] = 84878,
},
[366077] = {
["npcID"] = 183925,
},
[400889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[296454] = {
["npcID"] = 152656,
},
[417272] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[392701] = {
["source"] = "Stormshroud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 192536,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Storm",
["npcID"] = 198716,
},
[265741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[343556] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[396798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaster",
["npcID"] = 199498,
},
[166675] = {
["npcID"] = 80937,
},
[167699] = {
["npcID"] = 83803,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[337415] = {
["npcID"] = 165339,
},
[275983] = {
["npcID"] = 157571,
},
[400896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[34254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[275984] = {
["npcID"] = 166936,
},
[419327] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[396802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaster",
["npcID"] = 199498,
},
[433662] = {
["isChanneled"] = true,
["source"] = "Reinforced Drone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[331275] = {
["npcID"] = 167533,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[364040] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 184140,
["encounterID"] = 2553,
},
[300560] = {
["npcID"] = 150142,
},
[321038] = {
["npcID"] = 162039,
},
[396805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[407045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[396807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[366091] = {
["npcID"] = 181011,
},
[372235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Shaman",
["npcID"] = 207583,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[341520] = {
["npcID"] = 173973,
},
[318995] = {
["npcID"] = 155945,
},
[265754] = {
["npcID"] = 125458,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[394763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Private Shikzar",
["npcID"] = 193127,
},
[252687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowblade Stalker",
["npcID"] = 122970,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[351762] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[394765] = {
["source"] = "Morgg",
["event"] = "SPELL_CAST_START",
["npcID"] = 189244,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathful Orchid",
["npcID"] = 186321,
},
[347668] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[325143] = {
["npcID"] = 157212,
},
[329239] = {
["npcID"] = 163882,
},
[259856] = {
["encounterName"] = "Rixxa Fluxfume",
["npcID"] = 129231,
["encounterID"] = 2107,
},
[331288] = {
["npcID"] = 167532,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[175899] = {
["npcID"] = 81272,
},
[345623] = {
["npcID"] = 165824,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[419343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[366102] = {
["npcID"] = 181011,
},
[370198] = {
["source"] = "Kauj",
["event"] = "SPELL_CAST_START",
["npcID"] = 186386,
},
[396819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[372247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Hidestitcher",
["npcID"] = 187941,
},
[345627] = {
["npcID"] = 159174,
},
[407060] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[357915] = {
["npcID"] = 177903,
},
["373742"] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[396823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[368155] = {
["npcID"] = 185505,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[390681] = {
["npcID"] = 189954,
},
[319010] = {
["npcID"] = 161917,
},
[394777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mahg the Trampler",
["npcID"] = 190244,
},
[396825] = {
["source"] = "Frostcaller Julh'ek",
["event"] = "SPELL_CAST_START",
["npcID"] = 186923,
},
[417303] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[419351] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[378397] = {
["npcID"] = 191095,
},
[421400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Spear",
["npcID"] = 209973,
},
[357920] = {
["npcID"] = 179684,
},
[321061] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[396828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fuming Ice Burrower",
["npcID"] = 197177,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenbelt Turtle",
["npcID"] = 192775,
},
[405020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[392734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Lookout",
["npcID"] = 196926,
},
[394782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ty'foon the Ascended",
["npcID"] = 191354,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[368163] = {
["npcID"] = 178229,
},
[329256] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169271,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183666,
["encounterID"] = 2546,
},
[415262] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[417310] = {
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208380,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Metalshaper",
["npcID"] = 190767,
},
[331305] = {
["npcID"] = 161599,
},
[357926] = {
["npcID"] = 177336,
},
[392738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargpaw the Fetid",
["npcID"] = 186660,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[325163] = {
["npcID"] = 171772,
},
[359975] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[396836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Glacier",
["npcID"] = 194798,
},
[319022] = {
["npcID"] = 158259,
},
["382708"] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[364073] = {
["npcID"] = 184735,
},
[351787] = {
["encounterName"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["npcID"] = 177594,
},
[353835] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209800,
},
[359979] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[353836] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[357932] = {
["npcID"] = 178810,
},
[362028] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[427557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[402985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[355887] = {
["npcID"] = 177293,
},
[325171] = {
["npcID"] = 157212,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Fury",
["npcID"] = 191111,
},
[355888] = {
["npcID"] = 177807,
},
[284217] = {
["npcID"] = 144564,
},
[205605] = {
["npcID"] = 166137,
},
[331316] = {
["npcID"] = 167538,
},
[284218] = {
["npcID"] = 144564,
},
[335412] = {
["npcID"] = 178660,
},
[314935] = {
["npcID"] = 160409,
},
[284219] = {
["npcID"] = 150297,
},
[212773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Reinforcement",
["npcID"] = 107073,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[173866] = {
["npcID"] = 79230,
},
[183081] = {
["npcID"] = 165793,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Earthcaller",
["npcID"] = 198500,
},
[423469] = {
["source"] = "Somnambulant Ori",
["event"] = "SPELL_CAST_START",
["npcID"] = 210047,
},
[284223] = {
["npcID"] = 144564,
},
[378420] = {
["source"] = "Displaced Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187393,
},
[357943] = {
["npcID"] = 180013,
},
[327227] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[357944] = {
["npcID"] = 179768,
},
[189227] = {
["source"] = "Crawliac Cinderwitch",
["event"] = "SPELL_CAST_START",
["npcID"] = 95174,
},
[198442] = {
["npcID"] = 165909,
},
[392757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Proto-Drake",
["npcID"] = 195094,
},
[396854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[325183] = {
["npcID"] = 171622,
},
[355900] = {
["npcID"] = 177807,
},
[316993] = {
["npcID"] = 167443,
},
[396856] = {
["npcID"] = 191401,
},
[308803] = {
["npcID"] = 158259,
},
[327233] = {
["encounterName"] = "Globgrog",
["npcID"] = 168393,
["encounterID"] = 2382,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[378428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 187082,
},
[339521] = {
["npcID"] = 173484,
},
[366142] = {
["npcID"] = 184651,
},
[351808] = {
["npcID"] = 176577,
},
[396859] = {
["npcID"] = 191105,
},
[366143] = {
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["encounterID"] = 1818,
["npcID"] = 95888,
},
[357953] = {
["npcID"] = 180013,
},
[417338] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[396861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Golem",
["npcID"] = 190779,
},
[347716] = {
["npcID"] = 176394,
},
[296523] = {
["npcID"] = 152708,
},
[298571] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[394816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[339527] = {
["npcID"] = 173469,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["npcID"] = 40586,
["encounterID"] = 1045,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[355910] = {
["npcID"] = 178666,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[339529] = {
["npcID"] = 173448,
},
[366150] = {
["npcID"] = 180906,
},
[347721] = {
["npcID"] = 176396,
},
[333387] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[212784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[362056] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 181447,
["encounterID"] = 2529,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[323150] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[407108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[327246] = {
["npcID"] = 167524,
},
[39126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[355915] = {
["npcID"] = 177816,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[321105] = {
["npcID"] = 168591,
},
[347726] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77816,
["encounterID"] = 1715,
},
[357967] = {
["npcID"] = 178897,
},
[394827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windseeker Avash",
["npcID"] = 192045,
},
[456260] = {
["source"] = "You?",
["event"] = "SPELL_CAST_START",
["npcID"] = 226694,
},
[400971] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 202622,
},
[382542] = {
["source"] = "Vicious Ice Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186391,
},
[376399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194444,
},
[394829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osseous Broodmother",
["npcID"] = 203348,
},
[396877] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[335445] = {
["npcID"] = 180032,
},
[290395] = {
["npcID"] = 144536,
},
[302682] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Looter",
["npcID"] = 187242,
},
[396879] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[294493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeless Causality",
["npcID"] = 186464,
},
[394833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Bull",
["npcID"] = 191903,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[172860] = {
["npcID"] = 83025,
},
[396882] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[191290] = {
["npcID"] = 76642,
},
[378453] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[372310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[162622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 187082,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[319070] = {
["npcID"] = 163891,
},
[355930] = {
["npcID"] = 177816,
},
[407124] = {
["source"] = "Alliance Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 208165,
},
[351835] = {
["npcID"] = 179894,
},
[394838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[357979] = {
["npcID"] = 178897,
},
[347741] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[366171] = {
["npcID"] = 184952,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[357981] = {
["npcID"] = 177562,
},
[355934] = {
["npcID"] = 177817,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[321124] = {
["npcID"] = 156815,
},
[185152] = {
["npcID"] = 157820,
},
[290411] = {
["npcID"] = 144536,
},
[357987] = {
["npcID"] = 178757,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[362084] = {
["npcID"] = 181324,
},
[82858] = {
["npcID"] = 42333,
},
[386658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[388706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Essence",
["npcID"] = 187819,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[327274] = {
["npcID"] = 167524,
},
[329322] = {
["npcID"] = 155830,
},
[366182] = {
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[366183] = {
["npcID"] = 183498,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[355945] = {
["npcID"] = 179940,
},
[183108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larivi",
["npcID"] = 192747,
},
[329325] = {
["npcID"] = 155831,
},
[366185] = {
["npcID"] = 183499,
},
[329326] = {
["npcID"] = 155831,
},
[355947] = {
["npcID"] = 179802,
},
[423523] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[390760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[376426] = {
["npcID"] = 181840,
},
[294517] = {
["npcID"] = 151816,
},
[337520] = {
["npcID"] = 159412,
},
[355950] = {
["npcID"] = 178029,
},
[366189] = {
["npcID"] = 183500,
},
[335473] = {
["encounterName"] = "Sludgefist",
["encounterID"] = 2399,
["npcID"] = 164407,
},
[290423] = {
["npcID"] = 144536,
},
[366190] = {
["npcID"] = 183495,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[22127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Herbalist",
["npcID"] = 19508,
},
[331379] = {
["npcID"] = 167965,
},
[260926] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2113,
},
[425576] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[321141] = {
["npcID"] = 156562,
},
[423529] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[417386] = {
["source"] = "Valhalas Vargul",
["event"] = "SPELL_CAST_START",
["npcID"] = 207804,
},
[394861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[323190] = {
["npcID"] = 163121,
},
[390766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[39131] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["npcID"] = 17978,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1928,
},
[339573] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[341621] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[228164] = {
["npcID"] = 114584,
},
[382578] = {
["npcID"] = 184131,
},
[76719] = {
["npcID"] = 40021,
},
[366197] = {
["npcID"] = 183500,
},
[294526] = {
["npcID"] = 151817,
},
[386675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[341625] = {
["encounterName"] = "Lady Inerva Darkvein",
["encounterID"] = 2406,
["npcID"] = 165521,
},
[337530] = {
["npcID"] = 158259,
},
[366199] = {
["npcID"] = 183495,
},
[329340] = {
["npcID"] = 165410,
},
[394869] = {
["source"] = "Boneshaper Jardak",
["event"] = "SPELL_CAST_START",
["npcID"] = 188693,
},
[335485] = {
["npcID"] = 179029,
},
[394870] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Chillblaster",
["npcID"] = 198501,
},
[355963] = {
["npcID"] = 152594,
},
[358011] = {
["npcID"] = 178789,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[294533] = {
["npcID"] = 151817,
},
[347775] = {
["npcID"] = 176395,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80805,
["encounterID"] = 1748,
},
[427638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[255814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[390780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[360064] = {
["npcID"] = 184216,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Image of Advisor Melandrus",
["npcID"] = 105754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[355970] = {
["npcID"] = 152594,
},
[325254] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[171858] = {
["npcID"] = 177877,
},
[394878] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Breaker",
["npcID"] = 198500,
},
[331398] = {
["npcID"] = 170147,
},
[341637] = {
["npcID"] = 174126,
},
[225100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[392832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Degmakh",
["npcID"] = 194251,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[272016] = {
["npcID"] = 154014,
},
[325258] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[331402] = {
["npcID"] = 180028,
},
[358023] = {
["npcID"] = 180474,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[390788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Gravestirrer",
["npcID"] = 189928,
},
[386694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsurge Totem",
["npcID"] = 194897,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[355979] = {
["npcID"] = 177804,
},
[360075] = {
["npcID"] = 182210,
},
[360076] = {
["npcID"] = 184061,
},
[388745] = {
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 197862,
},
[392841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Degmakh",
["npcID"] = 194251,
},
[337552] = {
["npcID"] = 162853,
},
[265881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[341648] = {
["npcID"] = 174134,
},
[335505] = {
["npcID"] = 179108,
},
[353935] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[388747] = {
["source"] = "Boggy Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193699,
},
[256846] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[257870] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[386700] = {
["source"] = "Hailbringer Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189228,
},
[331412] = {
["npcID"] = 177130,
},
[394893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[319127] = {
["npcID"] = 170335,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Hunter",
["npcID"] = 186490,
},
[407181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Koranos",
["npcID"] = 200077,
},
[298651] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[366227] = {
["npcID"] = 183496,
},
[364180] = {
["npcID"] = 183596,
},
[256849] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[351894] = {
["npcID"] = 178180,
},
[321178] = {
["npcID"] = 162047,
},
[358038] = {
["npcID"] = 179802,
},
[331418] = {
["npcID"] = 170160,
},
[358039] = {
["npcID"] = 178002,
},
[337562] = {
["npcID"] = 162875,
},
[227158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 113034,
},
[323229] = {
["npcID"] = 164875,
},
[358041] = {
["npcID"] = 180160,
},
[345755] = {
["npcID"] = 165663,
},
[392854] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[394903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[374426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate Radiya",
["npcID"] = 190014,
},
[329376] = {
["npcID"] = 165060,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1838,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[205660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[353952] = {
["encounterName"] = "Sylvannas Windrunner",
["npcID"] = 175732,
},
[323236] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[356001] = {
["npcID"] = 177808,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[333477] = {
["npcID"] = 163621,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[329383] = {
["npcID"] = 153882,
},
[356004] = {
["npcID"] = 177514,
},
[333479] = {
["npcID"] = 163620,
},
[82362] = {
["npcID"] = 39987,
},
[347814] = {
["npcID"] = 176396,
},
[358053] = {
["npcID"] = 180160,
},
[376483] = {
["source"] = "Charred Cinderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187404,
},
[386722] = {
["npcID"] = 190482,
},
[298669] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[358055] = {
["npcID"] = 179254,
},
[368294] = {
["npcID"] = 185752,
},
[368295] = {
["npcID"] = 183953,
},
[396964] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Flow Control Device",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 198527,
},
[394917] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[356010] = {
["npcID"] = 178041,
},
[358058] = {
["npcID"] = 178002,
},
[392870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurhilt",
["npcID"] = 194760,
},
[362154] = {
["npcID"] = 182879,
},
[339629] = {
["npcID"] = 173145,
},
[407205] = {
["source"] = "Alliance Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208208,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[411302] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Empty Recollection",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202969,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[362157] = {
["npcID"] = 182879,
},
[356014] = {
["npcID"] = 177356,
},
[228193] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114329,
["encounterID"] = 1957,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80816,
["encounterID"] = 1748,
},
[394922] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[372397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Skulker",
["npcID"] = 190188,
},
[329395] = {
["npcID"] = 170044,
},
[353969] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[407212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[353971] = {
["npcID"] = 178949,
},
[358067] = {
["npcID"] = 178877,
},
[360115] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[396975] = {
["npcID"] = 191401,
},
[356021] = {
["encounterName"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177891,
},
[256865] = {
["npcID"] = 171303,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Consecrator Hennas",
["npcID"] = 211231,
},
[390834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[427694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[356023] = {
["encounterName"] = "Sylvanas Windrunner",
["npcID"] = 179963,
["encounterID"] = 2435,
},
[415409] = {
["source"] = "Rupturing Firevine",
["event"] = "SPELL_CAST_START",
["npcID"] = 207699,
},
[329404] = {
["npcID"] = 185123,
},
[166766] = {
["npcID"] = 171172,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[421554] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[351931] = {
["npcID"] = 176598,
},
[321216] = {
["npcID"] = 172601,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[366267] = {
["npcID"] = 185008,
},
[386745] = {
["npcID"] = 189206,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[399033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weyrn Spellslinger",
["npcID"] = 200736,
},
[419511] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[356031] = {
["npcID"] = 177816,
},
[423607] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[135029] = {
["npcID"] = 78116,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[366272] = {
["npcID"] = 185032,
},
[315079] = {
["npcID"] = 161388,
},
[358082] = {
["npcID"] = 179608,
},
[351939] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177891,
},
[356035] = {
["npcID"] = 179608,
},
[419516] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[122301] = {
["npcID"] = 62930,
},
[427708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[358085] = {
["npcID"] = 179859,
},
[366278] = {
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[89538] = {
["npcID"] = 48143,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[423617] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[257899] = {
["source"] = "Irontide Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 130012,
},
[84931] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[407236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[394950] = {
["source"] = "Broodweaver Araznae",
["event"] = "SPELL_CAST_START",
["npcID"] = 193220,
},
[341709] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[419524] = {
["source"] = "Loose Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 209170,
},
[252781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[337616] = {
["npcID"] = 158989,
},
[34791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[256878] = {
["npcID"] = 171303,
},
[413385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[358096] = {
["npcID"] = 177425,
},
[417481] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181546,
["encounterID"] = 2544,
},
[267997] = {
["npcID"] = 135816,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[257904] = {
["source"] = "Ludwig Von Tortollan",
["event"] = "SPELL_CAST_START",
["npcID"] = 129699,
},
[394959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[331479] = {
["npcID"] = 167923,
},
[415437] = {
["source"] = "Timestream Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 206066,
},
[329432] = {
["npcID"] = 177861,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[300764] = {
["npcID"] = 150165,
},
[331481] = {
["npcID"] = 167948,
},
[397010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[256882] = {
["source"] = "Monzumi",
["event"] = "SPELL_CAST_START",
["npcID"] = 129552,
},
[427727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[397011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[333531] = {
["npcID"] = 172210,
},
[401108] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 202791,
},
[329437] = {
["npcID"] = 182791,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[366297] = {
["npcID"] = 184911,
},
[401109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[354011] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[372441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[257908] = {
["source"] = "Irontide Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 127106,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[321249] = {
["npcID"] = 162051,
},
[41448] = {
["npcID"] = 177637,
},
[327393] = {
["npcID"] = 163618,
},
[399065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[366303] = {
["npcID"] = 183927,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[409307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[300777] = {
["npcID"] = 150165,
},
[392926] = {
["source"] = "Flickering Ember",
["event"] = "SPELL_CAST_START",
["npcID"] = 197906,
},
[362210] = {
["npcID"] = 181963,
},
[372449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[358115] = {
["npcID"] = 178467,
},
[392927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yaankhi",
["npcID"] = 195101,
},
[358116] = {
["npcID"] = 180627,
},
[394976] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Beast",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[341735] = {
["npcID"] = 174336,
},
[83914] = {
["encounterName"] = "Ozumat",
["npcID"] = 44715,
["encounterID"] = 1047,
},
[372452] = {
["source"] = "Primal Drift",
["event"] = "SPELL_CAST_START",
["npcID"] = 186421,
},
[366309] = {
["npcID"] = 180917,
},
[403169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[351976] = {
["npcID"] = 176598,
},
[356072] = {
["npcID"] = 177394,
},
[288497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[323309] = {
["npcID"] = 177859,
},
[284402] = {
["npcID"] = 144566,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[382696] = {
["npcID"] = 184131,
},
[167815] = {
["npcID"] = 83390,
},
[329455] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[341742] = {
["npcID"] = 174336,
},
[349934] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[200580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[372460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakra the Bully",
["npcID"] = 186517,
},
["408141"] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[284409] = {
["npcID"] = 144566,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 181856,
["encounterID"] = 2512,
},
[356081] = {
["npcID"] = 177390,
},
[341747] = {
["npcID"] = 174158,
},
[327413] = {
["npcID"] = 168318,
},
[405228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[211845] = {
["source"] = "Avatar of Bloodshed",
["event"] = "SPELL_CAST_START",
["npcID"] = 150805,
},
[425706] = {
["source"] = "Astromancer's Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208729,
},
[331510] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 170838,
},
[382704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Mender",
["npcID"] = 203736,
},
[386800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blitztusk",
["npcID"] = 190907,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[386801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grounded Primalist",
["npcID"] = 187204,
},
[390897] = {
["source"] = "Scalepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186632,
},
[178059] = {
["npcID"] = 80491,
},
[368373] = {
["npcID"] = 183516,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[356088] = {
["npcID"] = 177984,
},
[222087] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 111510,
},
[360185] = {
["npcID"] = 181879,
},
[356090] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[263943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Runeweaver",
["npcID"] = 131677,
},
[372474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shikaar Beastmaster",
["npcID"] = 182727,
},
["369465"] = {
["npcID"] = 186420,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[172943] = {
["npcID"] = 84520,
},
[388857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Forest Giant",
["npcID"] = 194741,
},
[347903] = {
["npcID"] = 176395,
},
[222090] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 111510,
},
[79825] = {
["npcID"] = 41424,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[366336] = {
["npcID"] = 183927,
},
[392957] = {
["npcID"] = 198414,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[407292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[356100] = {
["npcID"] = 177395,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[413438] = {
["source"] = "Void Lord Aurvizk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200865,
},
[325386] = {
["npcID"] = 167115,
},
["164357"] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[403201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[372486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waste Water Elemental",
["npcID"] = 187497,
},
[390916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muugurv",
["npcID"] = 194225,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[341771] = {
["npcID"] = 170882,
},
[228239] = {
["npcID"] = 114627,
},
[300818] = {
["npcID"] = 150195,
},
[263959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[341775] = {
["npcID"] = 167528,
},
[263961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[178071] = {
["npcID"] = 80489,
},
[409352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[172952] = {
["npcID"] = 83026,
},
[323347] = {
["npcID"] = 165137,
},
[325395] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 166813,
["encounterID"] = 2385,
},
[352016] = {
["npcID"] = 176578,
},
[372494] = {
["source"] = "Stormshackler Rynea",
["event"] = "SPELL_CAST_START",
["npcID"] = 189391,
},
[170905] = {
["npcID"] = 82201,
},
[372495] = {
["source"] = "Ensnaring Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 191328,
},
[176025] = {
["npcID"] = 88163,
},
[390926] = {
["source"] = "Barker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194515,
},
[411404] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[325399] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[354068] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[331543] = {
["npcID"] = 170196,
},
[360213] = {
["npcID"] = 181839,
},
[411407] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[390930] = {
["npcID"] = 185784,
},
[411408] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[341786] = {
["npcID"] = 167528,
},
[331548] = {
["npcID"] = 167964,
},
[288546] = {
["npcID"] = 170495,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[390934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salkii",
["npcID"] = 193885,
},
[356123] = {
["npcID"] = 177395,
},
[183197] = {
["npcID"] = 155221,
},
[288548] = {
["npcID"] = 170495,
},
[186269] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[341790] = {
["npcID"] = 167528,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["npcID"] = 99657,
},
[272167] = {
["npcID"] = 136404,
},
[319266] = {
["npcID"] = 165747,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[333602] = {
["npcID"] = 163126,
},
[176032] = {
["npcID"] = 88163,
},
[395035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Mandakh",
["npcID"] = 195930,
},
[290600] = {
["npcID"] = 151684,
},
[390940] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[37361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[327461] = {
["npcID"] = 153165,
},
[349987] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[390943] = {
["npcID"] = 185784,
},
[362275] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[360228] = {
["npcID"] = 184061,
},
[386849] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[388897] = {
["source"] = "Scavenging Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193605,
},
[358181] = {
["encounterName"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[325418] = {
["npcID"] = 167113,
},
[319275] = {
["npcID"] = 159601,
},
[366374] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[327467] = {
["npcID"] = 153165,
},
[413473] = {
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_START",
["npcID"] = 206063,
},
[228254] = {
["npcID"] = 114626,
},
[149416] = {
["npcID"] = 183257,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[202658] = {
["npcID"] = 102584,
},
[317231] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[329518] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[364330] = {
["npcID"] = 184737,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186339,
},
[304946] = {
["npcID"] = 177223,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[76765] = {
["npcID"] = 39870,
},
[423718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balboan",
["npcID"] = 210559,
},
[327474] = {
["npcID"] = 166170,
},
[409385] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cliffside Pollinator",
["npcID"] = 205384,
},
[202661] = {
["npcID"] = 102583,
},
[397100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[350002] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[319286] = {
["npcID"] = 164084,
},
[331573] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 170199,
["encounterID"] = 2406,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[191401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[327481] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[386866] = {
["source"] = "Gorging Stagbeetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195709,
},
[339768] = {
["npcID"] = 166012,
},
[419632] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 208945,
},
[339770] = {
["npcID"] = 173568,
},
[395060] = {
["source"] = "Im'bunata",
["event"] = "SPELL_CAST_START",
["npcID"] = 196199,
},
[397108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Kelp Elemental",
["npcID"] = 196809,
},
[395061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molka The Grinder",
["npcID"] = 193443,
},
[397109] = {
["npcID"] = 190008,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 168246,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[397110] = {
["npcID"] = 190008,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Flare",
["npcID"] = 189470,
},
[325440] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165764,
["encounterID"] = 2402,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Guardian",
["npcID"] = 203831,
},
[323393] = {
["encounterName"] = "Lord Chamberlain",
["encounterID"] = 2381,
["npcID"] = 164218,
},
[358205] = {
["npcID"] = 178862,
},
[335680] = {
["npcID"] = 157807,
},
[339776] = {
["npcID"] = 173568,
},
[423734] = {
["source"] = "Doomfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 210910,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[88032] = {
["npcID"] = 45912,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[407354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[321349] = {
["npcID"] = 164857,
},
[388925] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[366400] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["encounterID"] = 2542,
["npcID"] = 185128,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trudging Devourer",
["npcID"] = 201066,
},
[354114] = {
["npcID"] = 179234,
},
[153524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Bat",
["npcID"] = 75459,
},
[341828] = {
["npcID"] = 172637,
},
[39413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[362308] = {
["npcID"] = 185755,
},
[407359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[327497] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 187315,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[358215] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177787,
},
[356169] = {
["npcID"] = 177567,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[366409] = {
["npcID"] = 184908,
},
[172982] = {
["npcID"] = 83026,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Matriarch",
["npcID"] = 187566,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[393031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[395080] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[366412] = {
["npcID"] = 183746,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[228273] = {
["npcID"] = 114637,
},
[360270] = {
["npcID"] = 181625,
},
[345936] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Matriarch",
["npcID"] = 187566,
},
[390987] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[354128] = {
["npcID"] = 178949,
},
[390988] = {
["source"] = "Hoary Icicle",
["event"] = "SPELL_CAST_START",
["npcID"] = 194797,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[388941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade",
["npcID"] = 186962,
},
[284506] = {
["npcID"] = 144566,
},
[393037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[358226] = {
["npcID"] = 176949,
},
[321367] = {
["npcID"] = 156562,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[358227] = {
["npcID"] = 176959,
},
[343893] = {
["npcID"] = 162829,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Hunter",
["npcID"] = 186490,
},
[298844] = {
["npcID"] = 153885,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 194241,
},
[329561] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165778,
["encounterID"] = 2402,
},
[228277] = {
["npcID"] = 114634,
},
[339801] = {
["npcID"] = 166046,
},
[327515] = {
["npcID"] = 168361,
},
[329563] = {
["npcID"] = 152508,
},
[372566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[358232] = {
["npcID"] = 180104,
},
[337755] = {
["npcID"] = 163213,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Legionnaire",
["npcID"] = 196679,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2614,
},
[325469] = {
["npcID"] = 166928,
},
[393045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[298849] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[228279] = {
["npcID"] = 114632,
},
[264038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Thornshaper",
["npcID"] = 131666,
},
[87527] = {
["npcID"] = 46694,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Riversnapper",
["npcID"] = 192684,
},
[358236] = {
["npcID"] = 178856,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[354142] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[210875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[358238] = {
["npcID"] = 178851,
},
[434005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Alchemist",
["npcID"] = 213995,
},
[59638] = {
["npcID"] = 31216,
},
[391003] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413529] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[425816] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 211904,
},
[37113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[388958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[391006] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[354147] = {
["encounterName"] = "Sylvannas Windrunner",
["npcID"] = 175732,
},
[364386] = {
["encounterName"] = "Rygelon",
["npcID"] = 182823,
["encounterID"] = 2549,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[176066] = {
["npcID"] = 88178,
},
[32637] = {
["source"] = "Doomwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167749,
},
[335720] = {
["npcID"] = 155812,
},
[341864] = {
["npcID"] = 173189,
},
[264050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[348008] = {
["npcID"] = 176394,
},
[341865] = {
["npcID"] = 174194,
},
[384868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[323437] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[341867] = {
["npcID"] = 165469,
},
[200642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[323438] = {
["npcID"] = 166073,
},
[162759] = {
["npcID"] = 85131,
},
[343916] = {
["npcID"] = 169102,
},
[198595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Thundercaller",
["npcID"] = 95842,
},
[176070] = {
["npcID"] = 173114,
},
[419684] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[356204] = {
["npcID"] = 177372,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[395112] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[364396] = {
["npcID"] = 184272,
},
[75245] = {
["encounterName"] = "Drahga Shadowburner",
["npcID"] = 40319,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[378731] = {
["npcID"] = 190938,
},
[356206] = {
["npcID"] = 177372,
},
[358254] = {
["npcID"] = 178002,
},
[356207] = {
["npcID"] = 177372,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[352112] = {
["npcID"] = 178372,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[256959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[321399] = {
["npcID"] = 173414,
},
[79854] = {
["npcID"] = 112038,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[350071] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 177117,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[337785] = {
["npcID"] = 171160,
},
[348024] = {
["npcID"] = 176520,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[36604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[321406] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 169498,
["encounterID"] = 2384,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[393079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koroleth",
["npcID"] = 188180,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[327552] = {
["npcID"] = 168573,
},
[325506] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165764,
["encounterID"] = 2402,
},
[358271] = {
["npcID"] = 179914,
},
[79857] = {
["npcID"] = 112038,
},
[296839] = {
["npcID"] = 152898,
},
[360320] = {
["npcID"] = 181942,
},
[214988] = {
["npcID"] = 100364,
},
["200261"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[421754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moltenbinder",
["npcID"] = 206477,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[164819] = {
["npcID"] = 81726,
},
[214989] = {
["npcID"] = 100364,
},
[368514] = {
["npcID"] = 183764,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[339846] = {
["npcID"] = 166052,
},
[391040] = {
["npcID"] = 185784,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
},
[329608] = {
["npcID"] = 155828,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[350086] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176705,
["encounterID"] = 2441,
},
[329609] = {
["npcID"] = 155828,
},
[384899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[298894] = {
["npcID"] = 151301,
},
[391043] = {
["npcID"] = 185784,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[372615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tamed Phoenix",
["npcID"] = 189247,
},
[200658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[364426] = {
["npcID"] = 180088,
},
[423811] = {
["source"] = "Overseer Chardryn",
["event"] = "SPELL_CAST_START",
["npcID"] = 210912,
},
[368522] = {
["npcID"] = 183764,
},
[113136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
},
[341902] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 174197,
},
[352141] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176974,
["encounterID"] = 2422,
},
[364429] = {
["npcID"] = 180085,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[360334] = {
["npcID"] = 183953,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[325523] = {
["npcID"] = 165515,
},
[329619] = {
["npcID"] = 185123,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[368528] = {
["npcID"] = 183764,
},
[76790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Invader",
["npcID"] = 39616,
},
[368529] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[350101] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176705,
["encounterID"] = 2441,
},
[360340] = {
["npcID"] = 182425,
},
[346006] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[354198] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[270241] = {
["npcID"] = 154129,
},
[362390] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1057,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126848,
},
[327581] = {
["encounterName"] = "Globgrog",
["npcID"] = 168396,
["encounterID"] = 2382,
},
[244693] = {
["encounterName"] = "Aggramar",
["npcID"] = 121975,
["encounterID"] = 2063,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[364442] = {
["npcID"] = 180089,
},
[325535] = {
["npcID"] = 164562,
},
[270246] = {
["npcID"] = 154128,
},
[327584] = {
["npcID"] = 168393,
},
[222169] = {
["npcID"] = 112002,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[270248] = {
["npcID"] = 154129,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[358302] = {
["npcID"] = 179911,
},
[183263] = {
["npcID"] = 155219,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 83612,
["encounterID"] = 1754,
},
[372638] = {
["encounterName"] = "Sludgefist",
["encounterID"] = 2399,
["npcID"] = 189706,
},
[417689] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[421785] = {
["isChanneled"] = true,
["source"] = "Screaming Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[368544] = {
["npcID"] = 184597,
},
[364449] = {
["npcID"] = 179939,
},
[368545] = {
["npcID"] = 184599,
},
[358307] = {
["npcID"] = 179913,
},
["413607"] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[356260] = {
["npcID"] = 179388,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[335783] = {
["npcID"] = 155812,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368548] = {
["npcID"] = 185145,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[331689] = {
["npcID"] = 165181,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Bloodworker",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[368551] = {
["npcID"] = 184605,
},
[348074] = {
["npcID"] = 178041,
},
[325549] = {
["npcID"] = 168960,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[358314] = {
["npcID"] = 180162,
},
[362410] = {
["npcID"] = 181349,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200918,
},
[352172] = {
["npcID"] = 178102,
},
[113656] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaisia",
["npcID"] = 69792,
},
[358316] = {
["npcID"] = 180681,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[199652] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Haldor",
["npcID"] = 95843,
},
[270264] = {
["npcID"] = 154131,
},
[362413] = {
["npcID"] = 179939,
},
[413607] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[354223] = {
["npcID"] = 177514,
},
[358320] = {
["npcID"] = 180162,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36296,
},
[203750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Chronomaton",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Proto-Drake",
["npcID"] = 184869,
},
[358323] = {
["npcID"] = 180246,
},
[88061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[386992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 192636,
},
[178154] = {
["encounterName"] = "Oshir",
["npcID"] = 89011,
["encounterID"] = 1750,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[298940] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[360373] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[386994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194086,
},
[202728] = {
["npcID"] = 99649,
},
[323515] = {
["encounterName"] = "Gorechop",
["encounterID"] = 2365,
["npcID"] = 162317,
},
[358327] = {
["npcID"] = 179760,
},
[358328] = {
["npcID"] = 179760,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["npcID"] = 44704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[360378] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[321471] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[298946] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[4962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Beast",
["npcID"] = 10413,
},
[79872] = {
["npcID"] = 177586,
},
[413621] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[348094] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["npcID"] = 136541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[401338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[354240] = {
["npcID"] = 179433,
},
[393148] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[395196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[374719] = {
["source"] = "Muckjaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 188039,
},
[344003] = {
["encounterName"] = "Globgrog",
["npcID"] = 168580,
["encounterID"] = 2382,
},
[387006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Treant",
["npcID"] = 186361,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[401341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[331718] = {
["npcID"] = 171772,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[401342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[274383] = {
["source"] = "Vermin Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130404,
},
[194545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Technician",
["npcID"] = 211884,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[335817] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[337865] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165759,
["encounterID"] = 2402,
},
[356295] = {
["npcID"] = 170257,
},
[228334] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[164854] = {
["npcID"] = 80858,
},
[364488] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[354250] = {
["npcID"] = 179434,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[264150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornguard",
["npcID"] = 131858,
},
[329679] = {
["npcID"] = 158256,
},
[358348] = {
["npcID"] = 179472,
},
[427972] = {
["encounterName"] = "Volcoross",
["source"] = "Lieutenant Lunker",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 211272,
},
[372683] = {
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187894,
},
[384970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Hyena",
["npcID"] = 185691,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Plunderer",
["npcID"] = 192786,
},
[356302] = {
["npcID"] = 178671,
},
[350159] = {
["npcID"] = 177267,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[356303] = {
["npcID"] = 180162,
},
[341969] = {
["npcID"] = 174210,
},
[354256] = {
["npcID"] = 177413,
},
[364495] = {
["npcID"] = 181625,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[387021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Essence",
["npcID"] = 192238,
},
[166906] = {
["npcID"] = 178645,
},
[417738] = {
["source"] = "Peeved",
["event"] = "SPELL_CAST_START",
["npcID"] = 205428,
},
[356306] = {
["npcID"] = 177331,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[319447] = {
["npcID"] = 157016,
},
[378832] = {
["source"] = "Skulking Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 196384,
},
[325591] = {
["npcID"] = 157212,
},
[192504] = {
["encounterName"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["npcID"] = 95885,
},
[356308] = {
["npcID"] = 152594,
},
["266209"] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[339927] = {
["npcID"] = 173553,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[366549] = {
["npcID"] = 185154,
},
[352215] = {
["npcID"] = 176578,
},
[341977] = {
["npcID"] = 170690,
},
[176124] = {
["npcID"] = 173114,
},
[333787] = {
["npcID"] = 168934,
},
[354265] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
[374743] = {
["npcID"] = 115488,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[327646] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[417748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[177150] = {
["npcID"] = 81726,
},
[331743] = {
["npcID"] = 166276,
},
[327648] = {
["npcID"] = 168418,
},
[176127] = {
["npcID"] = 80935,
},
[378843] = {
["npcID"] = 191713,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[348128] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[401370] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[366559] = {
["npcID"] = 185154,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[325605] = {
["npcID"] = 169630,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Spinecrusher",
["npcID"] = 192787,
},
[54791] = {
["encounterName"] = "Maleki the Pallid",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 481,
},
[401373] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[387039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 187299,
},
[350180] = {
["npcID"] = 177286,
},
[327655] = {
["npcID"] = 168420,
},
[329703] = {
["npcID"] = 159106,
},
[421852] = {
["source"] = "Resilient Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 207620,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[319465] = {
["npcID"] = 164184,
},
[378850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destabilized Elemental",
["npcID"] = 181536,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[17287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Mender",
["npcID"] = 19633,
},
[417759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[329706] = {
["npcID"] = 177397,
},
[366566] = {
["npcID"] = 184910,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[252923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[305136] = {
["npcID"] = 156212,
},
[417763] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[79884] = {
["npcID"] = 82901,
},
[329711] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 169196,
},
[389096] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[327664] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Dragon",
["npcID"] = 194091,
},
[399336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Frostclaw",
["npcID"] = 201035,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[389098] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[366573] = {
["npcID"] = 185154,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[313332] = {
["npcID"] = 166046,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tamed Vulture",
["npcID"] = 190931,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[423912] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[385005] = {
["source"] = "Primalsworn Furbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 190738,
},
[362480] = {
["npcID"] = 182322,
},
[389101] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[15620] = {
["encounterName"] = "Hearthsinger Forresten",
["source"] = "Hearthsinger Forresten",
["npcID"] = 10558,
["event"] = "SPELL_CAST_START",
["encounterID"] = 473,
},
[387054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Hunter",
["npcID"] = 187281,
},
[166923] = {
["npcID"] = 81603,
},
[79886] = {
["npcID"] = 82901,
},
[272382] = {
["npcID"] = 155250,
},
[296956] = {
["npcID"] = 152995,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[262145] = {
["npcID"] = 175670,
},
[76815] = {
["npcID"] = 41096,
},
[354297] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 179334,
["encounterID"] = 2425,
},
[350202] = {
["encounterName"] = "The Nine",
["npcID"] = 177095,
["encounterID"] = 2429,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[391158] = {
["source"] = "Tomnu",
["event"] = "SPELL_CAST_START",
["npcID"] = 193722,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 210437,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[417780] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[374778] = {
["source"] = "Vault Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[417781] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[225289] = {
["npcID"] = 101035,
},
[348159] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 164967,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Creation",
["npcID"] = 193214,
},
[348160] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[333827] = {
["npcID"] = 167533,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[270348] = {
["npcID"] = 154131,
},
[331781] = {
["npcID"] = 170164,
},
[352259] = {
["npcID"] = 179433,
},
[411644] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[385024] = {
["source"] = "Salty Salamander",
["event"] = "SPELL_CAST_START",
["npcID"] = 188027,
},
[89105] = {
["npcID"] = 45704,
},
[339975] = {
["npcID"] = 173609,
},
[393217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[76307] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[227341] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114251,
["encounterID"] = 1957,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272402] = {
["source"] = "Cutwater Knife Juggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[385029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[358410] = {
["npcID"] = 178151,
},
[296978] = {
["npcID"] = 153003,
},
[191508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[362507] = {
["npcID"] = 182690,
},
[333839] = {
["npcID"] = 167534,
},
[191509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[319506] = {
["npcID"] = 164232,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormsentry",
["npcID"] = 196856,
},
[352271] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windblessed Ohuna",
["npcID"] = 188088,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[432135] = {
["source"] = "Partially Teleported Kobold",
["event"] = "SPELL_CAST_START",
["npcID"] = 226669,
},
[411658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instigator Belaphon",
["npcID"] = 199304,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[333845] = {
["npcID"] = 167534,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
["419351"] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[323608] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[329753] = {
["npcID"] = 156134,
},
[339992] = {
["npcID"] = 173609,
},
[284703] = {
["npcID"] = 144572,
},
[368661] = {
["npcID"] = 179386,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[391187] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[368662] = {
["npcID"] = 180015,
},
[321564] = {
["npcID"] = 165829,
},
[360472] = {
["npcID"] = 178963,
},
[321565] = {
["npcID"] = 165829,
},
[301088] = {
["npcID"] = 151657,
},
[385046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulking Gutstabber",
["npcID"] = 186242,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 210969,
},
[79896] = {
["npcID"] = 83001,
},
[259092] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[189469] = {
["npcID"] = 100364,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[376860] = {
["npcID"] = 186854,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391195] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[356384] = {
["npcID"] = 177385,
},
[415769] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[415770] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[356386] = {
["npcID"] = 177385,
},
[391198] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[415773] = {
["source"] = "Interval",
["event"] = "SPELL_CAST_START",
["npcID"] = 206065,
},
[352293] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[259097] = {
["source"] = "Shadowblade Razi",
["event"] = "SPELL_CAST_START",
["npcID"] = 130912,
},
[366629] = {
["npcID"] = 185155,
},
[329770] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[393251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Grovetalon",
["npcID"] = 187507,
},
[395299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[391204] = {
["source"] = "Uurtus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193724,
},
["388060"] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[395300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[340011] = {
["npcID"] = 173613,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[176165] = {
["npcID"] = 88224,
},
[366633] = {
["npcID"] = 185155,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[329774] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[191524] = {
["npcID"] = 96657,
},
[346157] = {
["npcID"] = 180252,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[225313] = {
["npcID"] = 101011,
},
[340016] = {
["npcID"] = 171184,
},
[393259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[340018] = {
["npcID"] = 172523,
},
[333875] = {
["npcID"] = 168942,
},
[303159] = {
["npcID"] = 155435,
},
[340019] = {
["npcID"] = 173604,
},
[191527] = {
["npcID"] = 96657,
},
[297017] = {
["npcID"] = 152995,
},
[227363] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[118297] = {
["npcID"] = 61029,
},
[442408] = {
["source"] = "Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214649,
},
[297018] = {
["npcID"] = 152995,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[329783] = {
["npcID"] = 156226,
},
[356404] = {
["npcID"] = 180091,
},
[297020] = {
["npcID"] = 153011,
},
[393265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Creation",
["npcID"] = 193214,
},
[227365] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[292926] = {
["npcID"] = 151127,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[356407] = {
["npcID"] = 180091,
},
[358455] = {
["npcID"] = 177972,
},
[340026] = {
["npcID"] = 171184,
},
[81439] = {
["npcID"] = 43391,
},
[387125] = {
["encounterName"] = "The Raging Tempest",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[315454] = {
["npcID"] = 157212,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[325694] = {
["npcID"] = 160359,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[387127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Violetwing Stagbeetle",
["npcID"] = 188244,
},
[337982] = {
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[325696] = {
["npcID"] = 168960,
},
[356414] = {
["npcID"] = 179892,
},
[29579] = {
["npcID"] = 114625,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[354367] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["npcID"] = 175730,
["encounterID"] = 2431,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[325700] = {
["npcID"] = 165529,
},
[274507] = {
["source"] = "Bilge Rat Swabby",
["event"] = "SPELL_CAST_START",
["npcID"] = 129526,
},
[325701] = {
["npcID"] = 165529,
},
[226347] = {
["source"] = "Stoneclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91332,
},
[372800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187125,
},
[391230] = {
["source"] = "Bisquius",
["event"] = "SPELL_CAST_START",
["npcID"] = 197557,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arcblade",
["npcID"] = 194898,
},
[331846] = {
["npcID"] = 167964,
},
[183345] = {
["npcID"] = 153011,
},
[319560] = {
["npcID"] = 158054,
},
[358468] = {
["npcID"] = 177979,
},
[362565] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[292942] = {
["npcID"] = 177331,
},
[362566] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[284752] = {
["npcID"] = 144572,
},
[184371] = {
["npcID"] = 185125,
},
[362568] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[364616] = {
["npcID"] = 183596,
},
[368712] = {
["npcID"] = 184058,
},
[362569] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[350283] = {
["encounterName"] = "The Nine",
["npcID"] = 177094,
["encounterID"] = 2429,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[397382] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Frostforged Zealot",
["npcID"] = 199547,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[417860] = {
["source"] = "Resilient Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 207620,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[374859] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[75813] = {
["npcID"] = 40634,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[356430] = {
["npcID"] = 178958,
},
[29580] = {
["npcID"] = 114625,
},
[204852] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[173112] = {
["npcID"] = 83697,
},
[356431] = {
["npcID"] = 180113,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[338003] = {
["npcID"] = 165414,
},
[295001] = {
["npcID"] = 151128,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[393295] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[393296] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[364628] = {
["npcID"] = 183596,
},
[176187] = {
["npcID"] = 84876,
},
[244787] = {
["source"] = "Glimmerspine",
["event"] = "SPELL_CAST_START",
["npcID"] = 149654,
},
[229429] = {
["npcID"] = 115388,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[366678] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Podling",
["npcID"] = 187317,
},
[389204] = {
["encounterName"] = "Eranog",
["source"] = "Frozen Behemoth",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 196845,
},
[352345] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 176178,
},
[338011] = {
["npcID"] = 166318,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[360538] = {
["npcID"] = 182120,
},
[346204] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[198715] = {
["npcID"] = 100876,
},
[352348] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[395351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[321633] = {
["npcID"] = 171562,
},
[393305] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[372828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[366685] = {
["npcID"] = 185271,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[346208] = {
["npcID"] = 167323,
},
[323683] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanius",
["npcID"] = 194147,
},
[358496] = {
["npcID"] = 179805,
},
[393308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Flamecaller",
["npcID"] = 193558,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[393309] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198311,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[366689] = {
["npcID"] = 185268,
},
[352355] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176929,
["encounterID"] = 2422,
},
[411740] = {
["isChanneled"] = true,
["source"] = "Rashok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201320,
},
[340070] = {
["npcID"] = 166503,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[354405] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[323689] = {
["npcID"] = 158642,
},
[200768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[333929] = {
["npcID"] = 177443,
},
[393314] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[329834] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169267,
},
[340073] = {
["npcID"] = 168697,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[364647] = {
["npcID"] = 181057,
},
[333931] = {
["npcID"] = 177422,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[372839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Spearthrower",
["npcID"] = 191570,
},
[333932] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 169813,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[329838] = {
["npcID"] = 159027,
},
[198723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[342125] = {
["npcID"] = 167538,
},
[197700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Priestess",
["npcID"] = 100450,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Calf",
["npcID"] = 180705,
},
[409704] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[383084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Primalist",
["npcID"] = 190066,
},
[393323] = {
["source"] = "Iskaaran Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 198298,
},
[321652] = {
["npcID"] = 170228,
},
["201226"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
},
[262268] = {
["npcID"] = 133432,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[360562] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[157772] = {
["source"] = "Voidseer Kalurg",
["event"] = "SPELL_CAST_START",
["npcID"] = 83385,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krojek The Shoreprowler",
["npcID"] = 187645,
},
[385137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[403567] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[342135] = {
["npcID"] = 167532,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[395377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[385141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[387189] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[342139] = {
["npcID"] = 167536,
},
[360569] = {
["npcID"] = 179007,
},
[362617] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[352379] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176929,
["encounterID"] = 2422,
},
[387191] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[364666] = {
["npcID"] = 178563,
},
[387192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Hammer",
["npcID"] = 209831,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[393336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[173135] = {
["npcID"] = 83578,
},
[366716] = {
["npcID"] = 185274,
},
[403576] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[389242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormed Blackpaw",
["npcID"] = 193827,
},
[358526] = {
["npcID"] = 179342,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Churning Splash",
["npcID"] = 187318,
},
[321669] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 165108,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 190153,
},
[360577] = {
["npcID"] = 179007,
},
[346243] = {
["npcID"] = 168233,
},
[331909] = {
["npcID"] = 165473,
},
[350339] = {
["encounterName"] = "The Nine",
["npcID"] = 177407,
["encounterID"] = 2429,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[329862] = {
["npcID"] = 153885,
},
[389247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Avenger",
["npcID"] = 187187,
},
[79922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Flayer",
["npcID"] = 42808,
},
[185425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[323720] = {
["npcID"] = 181203,
},
[350342] = {
["encounterName"] = "The Nine",
["npcID"] = 177095,
["encounterID"] = 2429,
},
[352390] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 179334,
["encounterID"] = 2425,
},
[389250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Slayer",
["npcID"] = 201831,
},
[172116] = {
["npcID"] = 86071,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[319628] = {
["npcID"] = 156564,
},
[81459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[385157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenbelt Riverbeast",
["npcID"] = 192834,
},
[387205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Gryphon",
["npcID"] = 193154,
},
[346251] = {
["npcID"] = 178490,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 150712,
["encounterID"] = 2312,
},
[448640] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[413829] = {
["source"] = "Myrmidon Solek'vosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 200864,
},
[268440] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[360589] = {
["npcID"] = 182114,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobberclaw",
["npcID"] = 195972,
},
[360590] = {
["npcID"] = 182114,
},
[403593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182045,
["encounterID"] = 2544,
},
[391308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[15497] = {
["npcID"] = 47140,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shortcoat Bear",
["npcID"] = 193497,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[325782] = {
["npcID"] = 163991,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207800,
},
[331927] = {
["npcID"] = 167962,
},
[358548] = {
["npcID"] = 180664,
},
[299164] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153756,
["encounterID"] = 2312,
},
[393361] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[342168] = {
["npcID"] = 156331,
},
[409744] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[173148] = {
["npcID"] = 81279,
},
[389267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Clearwater Snapper",
["npcID"] = 195506,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[417937] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guarantor",
["npcID"] = 187061,
},
[389270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guarantor",
["npcID"] = 187061,
},
[325790] = {
["npcID"] = 172909,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warhound",
["npcID"] = 190962,
},
[331935] = {
["npcID"] = 170385,
},
[350365] = {
["encounterName"] = "The Nine",
["npcID"] = 177095,
["encounterID"] = 2429,
},
[417941] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[338079] = {
["npcID"] = 164737,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[199772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Champion",
["npcID"] = 97087,
},
[319650] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[389274] = {
["npcID"] = 190070,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[284840] = {
["npcID"] = 144572,
},
[417944] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[340130] = {
["npcID"] = 165663,
},
[317605] = {
["npcID"] = 162744,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[297128] = {
["npcID"] = 144298,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["npcID"] = 102019,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[338084] = {
["npcID"] = 172982,
},
[391326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honmor",
["npcID"] = 193704,
},
[336037] = {
["npcID"] = 181186,
},
[358563] = {
["npcID"] = 175616,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[387232] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[389280] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[344230] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[167012] = {
["npcID"] = 155945,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[325802] = {
["npcID"] = 166936,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodscent Felhound",
["npcID"] = 98813,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[78907] = {
["source"] = "Kaldorei Starcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183994,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[366759] = {
["npcID"] = 183498,
},
[131178] = {
["npcID"] = 66768,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[383143] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[413860] = {
["source"] = "Chromie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205707,
},
[342189] = {
["npcID"] = 174175,
},
[79932] = {
["npcID"] = 155282,
},
[329903] = {
["npcID"] = 157099,
},
[28434] = {
["isChanneled"] = true,
["source"] = "Carrion Spinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 15975,
},
[346286] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[358573] = {
["npcID"] = 179423,
},
[393385] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[329905] = {
["npcID"] = 157122,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[387243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murhulk",
["npcID"] = 195095,
},
[405673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overflowing Magma",
["npcID"] = 203277,
},
[334002] = {
["npcID"] = 172590,
},
[350385] = {
["encounterName"] = "The Nine",
["npcID"] = 177094,
["encounterID"] = 2429,
},
[319669] = {
["encounterName"] = "Kul'tharok",
["npcID"] = 162309,
["encounterID"] = 2364,
},
[329908] = {
["npcID"] = 157017,
},
[405675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[329909] = {
["npcID"] = 157017,
},
[172138] = {
["npcID"] = 86185,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102287,
},
[329916] = {
["npcID"] = 171173,
},
[356537] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 179334,
["encounterID"] = 2425,
},
[358585] = {
["npcID"] = 176669,
},
[354490] = {
["npcID"] = 179526,
},
[264390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[89663] = {
["encounterName"] = "Glubtok",
["npcID"] = 48229,
["encounterID"] = 1064,
},
[360636] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[395448] = {
["source"] = "Voraazka",
["event"] = "SPELL_CAST_START",
["npcID"] = 193674,
},
[348350] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[207979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[303300] = {
["source"] = "Primalist Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 186112,
},
[340160] = {
["npcID"] = 173655,
},
[334017] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 170199,
["encounterID"] = 2406,
},
[207980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
[262347] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["encounterID"] = 2105,
},
[201837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[383165] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[319685] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[405691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanakk",
["npcID"] = 200911,
},
[336068] = {
["npcID"] = 182686,
},
[321734] = {
["npcID"] = 156564,
},
["200768"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[407740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurantia",
["npcID"] = 203047,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[356548] = {
["npcID"] = 179334,
},
[334023] = {
["npcID"] = 167536,
},
[360644] = {
["npcID"] = 181339,
},
[231532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrestar Demolisher",
["npcID"] = 114845,
},
[303308] = {
["source"] = "Primalist Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 186112,
},
[329929] = {
["npcID"] = 157083,
},
[323786] = {
["npcID"] = 163524,
},
[358598] = {
["npcID"] = 178897,
},
[327882] = {
["npcID"] = 168153,
},
[297166] = {
["npcID"] = 152875,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[377029] = {
["source"] = "Primal Scythid Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 184853,
},
[327885] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
["397931"] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[194675] = {
["npcID"] = 98963,
},
[350411] = {
["encounterName"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["npcID"] = 175728,
},
[358603] = {
["npcID"] = 181212,
},
[377033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[264407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[323793] = {
["npcID"] = 170146,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[393419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[325844] = {
["npcID"] = 163991,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[39207] = {
["npcID"] = 45618,
},
[389327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsiran",
["npcID"] = 188141,
},
[358611] = {
["npcID"] = 179760,
},
[329943] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 168156,
},
[178298] = {
["npcID"] = 81432,
},
[350421] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
["200913"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[350422] = {
["encounterName"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["npcID"] = 175727,
},
[362710] = {
["npcID"] = 183229,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[323804] = {
["npcID"] = 163524,
},
[317661] = {
["npcID"] = 163503,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[393429] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[227447] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 197671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[393430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[340189] = {
["npcID"] = 173655,
},
["375727"] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[395479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[430292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[262377] = {
["npcID"] = 133482,
},
[387290] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[323810] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 166085,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mercenary",
["npcID"] = 193791,
},
["411994"] = {
["isChanneled"] = true,
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[332002] = {
["npcID"] = 170417,
},
[358623] = {
["npcID"] = 179552,
},
[241784] = {
["npcID"] = 114629,
},
[321764] = {
["npcID"] = 164861,
},
[358624] = {
["npcID"] = 178997,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[338147] = {
["npcID"] = 169885,
},
[364769] = {
["npcID"] = 181360,
},
[334053] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[366818] = {
["npcID"] = 185275,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Supplyhand",
["npcID"] = 193790,
},
[387297] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[375011] = {
["npcID"] = 191019,
},
[368868] = {
["npcID"] = 184738,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[241788] = {
["npcID"] = 114632,
},
[387300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Wyrm",
["npcID"] = 192739,
},
[366823] = {
["npcID"] = 185275,
},
[346346] = {
["npcID"] = 164713,
},
[323821] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 162099,
},
[201858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[221312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greystone Shardcaster",
["npcID"] = 111184,
},
[338157] = {
["npcID"] = 165047,
},
[364778] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[418020] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[209027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 111563,
},
[340208] = {
["npcID"] = 173655,
},
[358638] = {
["npcID"] = 178997,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[325876] = {
["npcID"] = 165414,
},
[319733] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[325877] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Defender",
["npcID"] = 199941,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[393454] = {
["source"] = "Battlehorn Pyrhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190986,
},
[444648] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[329975] = {
["npcID"] = 168004,
},
[389360] = {
["source"] = "Ancient Timekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192516,
},
[350453] = {
["npcID"] = 179894,
},
[395504] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[176267] = {
["npcID"] = 88224,
},
[227461] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114324,
["encounterID"] = 1957,
},
[393458] = {
["source"] = "Malifron",
["event"] = "SPELL_CAST_START",
["npcID"] = 190278,
},
[329978] = {
["npcID"] = 185100,
},
[176268] = {
["npcID"] = 88224,
},
[389364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[334076] = {
["npcID"] = 168942,
},
[209033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Guard",
["npcID"] = 111563,
},
[356602] = {
["npcID"] = 180164,
},
[391414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borzgas",
["npcID"] = 193896,
},
[368890] = {
["npcID"] = 181408,
},
[411894] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Remnant",
["npcID"] = 205378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[299268] = {
["npcID"] = 144566,
},
[241799] = {
["npcID"] = 114783,
},
[76369] = {
["npcID"] = 40291,
},
[340224] = {
["npcID"] = 161529,
},
[366847] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182144,
["encounterID"] = 2544,
},
[385277] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[379134] = {
["npcID"] = 191092,
},
["156718"] = {
["source"] = "Monstrous Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 76104,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[329989] = {
["npcID"] = 158978,
},
[350467] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[329990] = {
["npcID"] = 158978,
},
["269843"] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[389376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlerock",
["npcID"] = 193652,
},
[350469] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[391425] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[342280] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[256138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Honor Guard",
["npcID"] = 127799,
},
[342281] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[352520] = {
["npcID"] = 178601,
},
[383237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 187321,
},
[163990] = {
["encounterName"] = "Imperator Mar'gok",
["npcID"] = 77428,
["encounterID"] = 1705,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[364808] = {
["npcID"] = 181145,
},
[350475] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[393478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[321807] = {
["npcID"] = 163619,
},
[348428] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176605,
["encounterID"] = 2422,
},
[95826] = {
["npcID"] = 51346,
},
[354572] = {
["npcID"] = 176561,
},
[387337] = {
["npcID"] = 191093,
},
[360717] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181399,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[368909] = {
["npcID"] = 185861,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[407817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[241808] = {
["npcID"] = 114792,
},
[313621] = {
["npcID"] = 177637,
},
[350482] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[241809] = {
["npcID"] = 114792,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[387343] = {
["source"] = "Molded Boulder",
["event"] = "SPELL_CAST_START",
["npcID"] = 190213,
},
[366866] = {
["npcID"] = 184651,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[362771] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183463,
["encounterID"] = 2546,
},
[375058] = {
["source"] = "Grasslands Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195219,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[227477] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[366869] = {
["npcID"] = 184651,
},
[352538] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[354586] = {
["npcID"] = 179526,
},
[154784] = {
["npcID"] = 84110,
},
[360730] = {
["npcID"] = 181114,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[336158] = {
["npcID"] = 172217,
},
[389401] = {
["source"] = "Alora Mistbreeze",
["event"] = "SPELL_CAST_START",
["npcID"] = 189243,
},
[405784] = {
["source"] = "Tarasek Boarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203307,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[297254] = {
["encounterName"] = "King Gobbamak",
["npcID"] = 150159,
["encounterID"] = 2290,
},
[284968] = {
["npcID"] = 144572,
},
[321828] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[301351] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[172193] = {
["npcID"] = 172589,
},
[360737] = {
["npcID"] = 181116,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201268,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[342310] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[385313] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[444698] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[373027] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[321834] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[358695] = {
["npcID"] = 180426,
},
[389412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[325932] = {
["npcID"] = 179524,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[395558] = {
["source"] = "Emblazion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193650,
},
[342317] = {
["npcID"] = 177476,
},
[393511] = {
["source"] = "Cauldronbearer Blakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 186783,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Mudrunner",
["npcID"] = 186690,
},
[358700] = {
["npcID"] = 180417,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[399656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[342320] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[342321] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 84464,
["encounterID"] = 1754,
},
[342322] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[332084] = {
["npcID"] = 167965,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[362801] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 183501,
["encounterID"] = 2553,
},
[391470] = {
["source"] = "Twigs",
["event"] = "SPELL_CAST_START",
["npcID"] = 194460,
},
[264510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Marksman",
["npcID"] = 131849,
},
[389423] = {
["source"] = "Thieving Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196388,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[395567] = {
["source"] = "Gravlion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193654,
},
[350517] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[393520] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[340279] = {
["npcID"] = 173714,
},
[399664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[33844] = {
["source"] = "Treant Grovetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[227493] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[377140] = {
["event"] = "SPELL_CAST_START",
["source"] = "River Hornswog",
["npcID"] = 191618,
},
[362806] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[399666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[295231] = {
["npcID"] = 165167,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["source"] = "Swift Hornstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 190029,
},
[368951] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[411954] = {
["isChanneled"] = true,
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[424241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207782,
},
[393525] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 77483,
["encounterID"] = 1732,
},
[389430] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[389431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[393527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[229544] = {
["npcID"] = 115401,
},
[411958] = {
["source"] = "Iridikron's Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 205691,
},
[373051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Salamancer",
["npcID"] = 186669,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[371005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[340289] = {
["npcID"] = 173714,
},
[360767] = {
["npcID"] = 181879,
},
[387388] = {
["source"] = "Worldbreaker Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 185595,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[217260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[403772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[364865] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181548,
["encounterID"] = 2544,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[399678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Shaman",
["npcID"] = 203700,
},
[385344] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 195335,
},
["268202"] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[340294] = {
["npcID"] = 162727,
},
[89697] = {
["npcID"] = 48266,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[297292] = {
["npcID"] = 153165,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
["372223"] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[235692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Darius Crowley",
["npcID"] = 213057,
},
[395586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[391491] = {
["source"] = "Sootscale the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 190307,
},
[360775] = {
["npcID"] = 185511,
},
[356680] = {
["npcID"] = 177133,
},
[358728] = {
["npcID"] = 176940,
},
[319821] = {
["npcID"] = 161529,
},
[176309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Guardian",
["npcID"] = 88279,
},
[387398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Guardian",
["npcID"] = 189489,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[360778] = {
["npcID"] = 181116,
},
[167095] = {
["npcID"] = 83390,
},
[350541] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[352589] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 176583,
},
[407879] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201579,
},
[340304] = {
["npcID"] = 173720,
},
[418119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Destroyer",
["npcID"] = 207912,
},
[395594] = {
["source"] = "Zurgaz Corebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193680,
},
[340305] = {
["npcID"] = 173720,
},
[334162] = {
["npcID"] = 166908,
},
[393547] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[344403] = {
["npcID"] = 175012,
},
[356690] = {
["npcID"] = 177135,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 144244,
["encounterID"] = 2257,
},
[227508] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[387410] = {
["source"] = "Boss",
["event"] = "SPELL_CAST_START",
["npcID"] = 194404,
},
[34616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethervine Inciter",
["npcID"] = 19511,
},
[385363] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Mandakh",
["npcID"] = 195930,
},
[418128] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[403794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[368983] = {
["npcID"] = 191378,
},
[315742] = {
["npcID"] = 166012,
},
[350554] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameshatter",
["npcID"] = 191136,
},
[346459] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[317791] = {
["npcID"] = 163366,
},
[366938] = {
["npcID"] = 185032,
},
[393559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gethrel the South Wind",
["npcID"] = 193848,
},
[40248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Houndmaster",
["npcID"] = 17670,
},
["200345"] = {
["isChanneled"] = true,
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[358748] = {
["npcID"] = 178824,
},
[196796] = {
["npcID"] = 99956,
},
[354653] = {
["npcID"] = 179560,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[358749] = {
["npcID"] = 178824,
},
[377179] = {
["npcID"] = 190230,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[319843] = {
["npcID"] = 165747,
},
[321891] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 165251,
},
[191678] = {
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[348513] = {
["encounterName"] = "Painsmith Raznal",
["encounterID"] = 2430,
["npcID"] = 176523,
},
[229562] = {
["npcID"] = 115406,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 183501,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193204,
},
[350564] = {
["npcID"] = 177114,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[389473] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 196946,
},
[393569] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[389474] = {
["npcID"] = 190904,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[393571] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Concentrated Storm",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 198370,
},
[358760] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 176521,
["encounterID"] = 2433,
},
[418145] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[389477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rouen Icewind",
["npcID"] = 193682,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["npcID"] = 96015,
},
[354666] = {
["npcID"] = 179580,
},
[389478] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[358762] = {
["npcID"] = 180389,
},
[385383] = {
["source"] = "Forge-Keep Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192699,
},
[354667] = {
["npcID"] = 179580,
},
[323951] = {
["npcID"] = 177380,
},
[295283] = {
["npcID"] = 154033,
},
[387433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Teerai Battlemaster",
["npcID"] = 191494,
},
[385386] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192702,
},
[399721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[200901] = {
["encounterName"] = "Hyrja",
["source"] = "Solsten",
["npcID"] = 97219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[418153] = {
["source"] = "Cinderclaw Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 207084,
},
[358769] = {
["npcID"] = 180782,
},
[385390] = {
["source"] = "Forge-Keep Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192699,
},
[346483] = {
["npcID"] = 173580,
},
[405868] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[358770] = {
["npcID"] = 176880,
},
[393582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[346484] = {
["npcID"] = 173580,
},
[389487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[295291] = {
["npcID"] = 154033,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[389488] = {
["npcID"] = 191378,
},
[393584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Armoredon",
["npcID"] = 190339,
},
[358773] = {
["npcID"] = 179891,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[418161] = {
["source"] = "Kirkessen the Zealous",
["event"] = "SPELL_CAST_START",
["npcID"] = 207821,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[332156] = {
["npcID"] = 167963,
},
[38204] = {
["source"] = "Unbound Corrupter",
["event"] = "SPELL_CAST_START",
["npcID"] = 30868,
},
[260291] = {
["npcID"] = 130958,
},
[385399] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192955,
},
[389495] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[257220] = {
["npcID"] = 166029,
},
[395639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[137427] = {
["npcID"] = 170031,
},
[393592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gethrel the South Wind",
["npcID"] = 193848,
},
[389497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sand",
["npcID"] = 187475,
},
[167120] = {
["npcID"] = 81279,
},
[278919] = {
["npcID"] = 170737,
},
[227529] = {
["npcID"] = 114334,
},
[336257] = {
["npcID"] = 164351,
},
[358784] = {
["npcID"] = 179891,
},
[295304] = {
["npcID"] = 154033,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[326021] = {
["npcID"] = 172312,
},
[393597] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[332165] = {
["npcID"] = 170414,
},
[228555] = {
["npcID"] = 183424,
},
[330118] = {
["npcID"] = 159755,
},
[11985] = {
["npcID"] = 46914,
},
[360835] = {
["npcID"] = 180722,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[395648] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[389505] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[391553] = {
["source"] = "Andantenormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 199609,
},
[332169] = {
["npcID"] = 170400,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[395650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Nightmare",
["npcID"] = 199014,
},
[399746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warp Crystal",
["npcID"] = 201082,
},
[295311] = {
["npcID"] = 154033,
},
[154839] = {
["npcID"] = 84110,
},
[395652] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[228559] = {
["npcID"] = 114792,
},
[321935] = {
["npcID"] = 164707,
},
[393607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodclaw",
["npcID"] = 187553,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[393609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krojek The Shoreprowler",
["npcID"] = 187645,
},
[389514] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[344464] = {
["npcID"] = 166398,
},
[364942] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[358799] = {
["npcID"] = 178519,
},
[346513] = {
["npcID"] = 171581,
},
[295320] = {
["npcID"] = 154033,
},
[257231] = {
["npcID"] = 166057,
},
[54333] = {
["source"] = "Lightning Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 16385,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koroleth",
["npcID"] = 188180,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[336277] = {
["npcID"] = 172265,
},
[268702] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 130635,
["encounterID"] = 2105,
},
[352660] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[295324] = {
["npcID"] = 144562,
},
[387473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[348566] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176562,
["encounterID"] = 2440,
},
[319898] = {
["npcID"] = 168022,
},
[350615] = {
["encounterName"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["npcID"] = 175727,
},
[352663] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[356759] = {
["npcID"] = 177129,
},
[342425] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[313757] = {
["npcID"] = 160974,
},
[227542] = {
["encounterName"] = "Moroes",
["npcID"] = 114317,
["encounterID"] = 1961,
},
[360856] = {
["npcID"] = 182392,
},
["426645"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[448910] = {
["source"] = "Darklost Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 216260,
},
[54334] = {
["source"] = "Living Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 16021,
},
[420242] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Echo of Fyrakk",
["npcID"] = 208524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[227543] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114284,
["encounterID"] = 1957,
},
[326046] = {
["npcID"] = 167111,
},
[328094] = {
["npcID"] = 168627,
},
[395670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[448912] = {
["source"] = "Shadowguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 216263,
},
[360859] = {
["npcID"] = 181047,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[356764] = {
["npcID"] = 175697,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 185656,
},
[387481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[227545] = {
["encounterName"] = "Moroes",
["npcID"] = 114316,
["encounterID"] = 1961,
},
[297382] = {
["encounterName"] = "King Gobbamak",
["npcID"] = 153172,
["encounterID"] = 2290,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[360863] = {
["npcID"] = 183249,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[389532] = {
["source"] = "Laden Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 193541,
},
[369055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Crustshaper",
["npcID"] = 186638,
},
[332196] = {
["npcID"] = 167963,
},
[11538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marius Sunshard",
["npcID"] = 113542,
},
[38209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 210969,
},
[389534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[228571] = {
["npcID"] = 114794,
},
[395678] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Longwing Skyhunter",
["npcID"] = 187226,
},
[81530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[412062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lead Researcher Sytorian",
["npcID"] = 203067,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[397729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[369061] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[299438] = {
["npcID"] = 150249,
},
[319916] = {
["npcID"] = 161410,
},
[405922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200913,
},
[395685] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Familiar",
["npcID"] = 19016,
},
[360875] = {
["npcID"] = 180722,
},
[321968] = {
["npcID"] = 164929,
},
[360876] = {
["npcID"] = 182357,
},
[387497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[344496] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[338353] = {
["npcID"] = 173016,
},
[381356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[399786] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Berserker",
["npcID"] = 201117,
},
[381357] = {
["source"] = "Hunting Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190267,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 99868,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[395692] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[369072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olphis the Molten",
["npcID"] = 181875,
},
[118905] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 61245,
},
[338357] = {
["npcID"] = 172981,
},
[364978] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 181047,
["encounterID"] = 2529,
},
[358835] = {
["npcID"] = 177444,
},
[395695] = {
["source"] = "Sleeping Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 196073,
},
[364979] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[334263] = {
["npcID"] = 168977,
},
[198888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[338360] = {
["npcID"] = 165290,
},
[362934] = {
["npcID"] = 182326,
},
[334266] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[338362] = {
["npcID"] = 165290,
},
[178412] = {
["npcID"] = 83578,
},
[377270] = {
["source"] = "Cliffdrip Wavemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189814,
},
[313790] = {
["npcID"] = 160974,
},
[385462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rellen, The Learned",
["npcID"] = 190949,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Experiment",
["npcID"] = 203007,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["npcID"] = 99651,
},
[270515] = {
["source"] = "Azerite-Infused Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 137905,
},
[402890] = {
["isChanneled"] = true,
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200681,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Reaver",
["npcID"] = 200756,
},
[350653] = {
["encounterName"] = "Painsmith Raznal",
["npcID"] = 177613,
["encounterID"] = 2430,
},
[229608] = {
["npcID"] = 115486,
},
[335495] = {
["npcID"] = 180032,
},
[299460] = {
["npcID"] = 150250,
},
[358845] = {
["npcID"] = 181133,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[152818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[391610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[345552] = {
["npcID"] = 177168,
},
[456272] = {
["source"] = "You?",
["event"] = "SPELL_CAST_START",
["npcID"] = 226694,
},
[444820] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[257254] = {
["npcID"] = 171302,
},
[377277] = {
["npcID"] = 192221,
},
[395707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salamanther Fenmother",
["npcID"] = 210788,
},
["253544"] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[319941] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[428472] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210295,
},
[417752] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[391613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[54339] = {
["isChanneled"] = true,
["source"] = "Surgical Assistant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 16022,
},
[384538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Tuskarr Hero",
["npcID"] = 194731,
},
[373184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[443921] = {
["source"] = "Shadowguard Ethereal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221305,
},
[229611] = {
["npcID"] = 115486,
},
[194682] = {
["npcID"] = 98963,
},
[353741] = {
["npcID"] = 178958,
},
[417694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye Stalk",
["npcID"] = 208519,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Maxîî",
["npcID"] = 203812,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[412093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Titan Watcher",
["npcID"] = 203834,
},
[356804] = {
["npcID"] = 178578,
},
[417701] = {
["source"] = "Peeved",
["event"] = "SPELL_CAST_START",
["npcID"] = 205428,
},
[395433] = {
["isChanneled"] = true,
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198878,
},
[417725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[400859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[396742] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199659,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[417751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[404932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[332234] = {
["npcID"] = 167967,
},
[334282] = {
["npcID"] = 154330,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
["253721"] = {
["isChanneled"] = true,
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Devilsaur",
["npcID"] = 187262,
},
[342474] = {
["npcID"] = 165759,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[420289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[319713] = {
["encounterName"] = "Kryxis the Voracious",
["encounterID"] = 2360,
["npcID"] = 162100,
},
[12542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Darkcaster",
["npcID"] = 17694,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[418121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Monstrosity",
["npcID"] = 207923,
},
[324046] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[39121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Greenkeeper",
["npcID"] = 18419,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[321999] = {
["npcID"] = 164705,
},
[299474] = {
["npcID"] = 150154,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2607,
},
[420292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthbound Primalist",
["npcID"] = 193795,
},
[373194] = {
["source"] = "Windyfin Windbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187432,
},
[317905] = {
["npcID"] = 159601,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Restorer",
["npcID"] = 188067,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200527,
},
[333612] = {
["npcID"] = 168374,
},
[207865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[335305] = {
["npcID"] = 171799,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[413487] = {
["source"] = "Temporal Fusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 206068,
},
[223100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadheart Ruiner",
["npcID"] = 112021,
},
[328146] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melidrussa Chillworn",
["npcID"] = 195119,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Darkcaster",
["npcID"] = 17694,
},
["226304"] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[319956] = {
["npcID"] = 172217,
},
[34785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[405962] = {
["source"] = "Bronogg the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 203386,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spectral Invoker",
["npcID"] = 188067,
},
[319957] = {
["npcID"] = 177134,
},
[207861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[365008] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183033,
["encounterID"] = 2546,
},
[191735] = {
["npcID"] = 98954,
},
[125056] = {
["npcID"] = 165189,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[365009] = {
["npcID"] = 184409,
},
[393588] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[372202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[389583] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[375249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadethroat Mallard",
["npcID"] = 190708,
},
[369049] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 186107,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
["369365"] = {
["npcID"] = 184132,
},
[369107] = {
["npcID"] = 185272,
},
[173307] = {
["npcID"] = 83390,
},
[198904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[382573] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Imp",
["npcID"] = 17477,
},
[423771] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
["200784"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[398780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Myrmidon",
["npcID"] = 200485,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[317916] = {
["npcID"] = 159112,
},
[369110] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[393540] = {
["source"] = "Zhurtan the Riverboiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 188687,
},
[358872] = {
["npcID"] = 178592,
},
[229622] = {
["npcID"] = 115484,
},
[418258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[388540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Brute",
["npcID"] = 192928,
},
[183548] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[319966] = {
["npcID"] = 167078,
},
[420306] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[227575] = {
["encounterName"] = "Moroes",
["npcID"] = 114316,
["encounterID"] = 1961,
},
[358006] = {
["npcID"] = 179608,
},
[393686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turboris",
["npcID"] = 187886,
},
[255220] = {
["npcID"] = 166032,
},
[368062] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[389524] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 196946,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[340446] = {
["npcID"] = 167898,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[410070] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[173311] = {
["npcID"] = 83390,
},
[368061] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[10452] = {
["npcID"] = 45569,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[363965] = {
["npcID"] = 183747,
},
[389594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horace \"Scalding\" Stern",
["npcID"] = 186430,
},
[350687] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[28299] = {
["encounterName"] = "Thaddius",
["source"] = "Thaddius",
["encounterID"] = 1120,
["event"] = "SPELL_CAST_START",
["npcID"] = 15928,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[430476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hallowed Monstrosity",
["npcID"] = 211933,
},
[383452] = {
["source"] = "Imbu Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 190745,
},
[80009] = {
["npcID"] = 82991,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[381405] = {
["npcID"] = 182280,
},
[424408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bodwin",
["npcID"] = 209153,
},
[344546] = {
["npcID"] = 162880,
},
[362976] = {
["npcID"] = 183721,
},
[394680] = {
["source"] = "Reclaimer Makko",
["event"] = "SPELL_CAST_START",
["npcID"] = 191536,
},
[345553] = {
["npcID"] = 174843,
},
["226296"] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[425889] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Restorer",
["npcID"] = 188067,
},
[228603] = {
["npcID"] = 114804,
},
[415403] = {
["isChanneled"] = true,
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202244,
},
[418269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[365026] = {
["npcID"] = 182318,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201790,
},
[88201] = {
["npcID"] = 45919,
},
[338406] = {
["npcID"] = 173051,
},
[260344] = {
["npcID"] = 166027,
},
[285165] = {
["npcID"] = 144578,
},
[393696] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[338407] = {
["npcID"] = 165339,
},
[388535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Chainchewer",
["npcID"] = 196521,
},
[176280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[226304] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[346599] = {
["npcID"] = 168975,
},
[422078] = {
["source"] = "Emerald Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210278,
},
[255824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[328170] = {
["npcID"] = 162057,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Metalshaper",
["npcID"] = 190767,
},
[348648] = {
["npcID"] = 176520,
},
[369073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greedy Gessie",
["npcID"] = 209936,
},
[352744] = {
["encounterName"] = "The Nine",
["encounterID"] = 2429,
["npcID"] = 175726,
},
[242940] = {
["source"] = "Black Harvest Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 121416,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[228606] = {
["npcID"] = 114803,
},
[164102] = {
["npcID"] = 81235,
},
[425885] = {
["encounterName"] = "Smolderon",
["source"] = "Seeking Inferno",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 210203,
},
[182532] = {
["npcID"] = 174183,
},
[353721] = {
["npcID"] = 179135,
},
[425819] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 211904,
},
[362985] = {
["npcID"] = 183714,
},
[365033] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[417784] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[369129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modak Flamespit",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[324079] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165946,
},
[317936] = {
["npcID"] = 163459,
},
[80012] = {
["npcID"] = 82991,
},
[346605] = {
["npcID"] = 175801,
},
[366326] = {
["npcID"] = 185537,
},
[428004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[421703] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[403943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[332272] = {
["npcID"] = 180028,
},
[268792] = {
["npcID"] = 130242,
},
[328177] = {
["npcID"] = 168572,
},
[346607] = {
["npcID"] = 175857,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[358894] = {
["npcID"] = 179892,
},
[421984] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Tempting Shadow",
["npcID"] = 208526,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[412136] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[309749] = {
["npcID"] = 172556,
},
[352752] = {
["encounterName"] = "The Nine",
["encounterID"] = 2429,
["npcID"] = 178736,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["npcID"] = 80005,
["encounterID"] = 1736,
},
[393539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Choruk",
["npcID"] = 186592,
},
[385517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Sentry",
["npcID"] = 187021,
},
[395756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Magmathrower",
["npcID"] = 190117,
},
[340467] = {
["npcID"] = 173756,
},
[334324] = {
["npcID"] = 171376,
},
[188470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Noxious Seedling",
["npcID"] = 211410,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[340468] = {
["npcID"] = 159105,
},
[317943] = {
["npcID"] = 163457,
},
[333241] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 170850,
},
["260894"] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[201839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[334326] = {
["npcID"] = 171376,
},
[352756] = {
["encounterName"] = "The Nine",
["encounterID"] = 2429,
["npcID"] = 178738,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[414189] = {
["source"] = "Krrrn Trr Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205821,
},
[54331] = {
["source"] = "Sludge Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 16029,
},
[295420] = {
["npcID"] = 144580,
},
[388529] = {
["source"] = "Seabreaker Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 192931,
},
[365044] = {
["npcID"] = 182318,
},
[325232] = {
["npcID"] = 177214,
},
[360949] = {
["npcID"] = 184268,
},
[420334] = {
["source"] = "Keeper Adranas",
["event"] = "SPELL_CAST_START",
["npcID"] = 209931,
},
[397809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[268801] = {
["npcID"] = 125460,
},
[405929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Crecheguard",
["npcID"] = 203368,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[414192] = {
["source"] = "Krrrn Trr Cryomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204451,
},
["384524"] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[200969] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Tor",
["npcID"] = 97084,
},
[395763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalemelter Dorbane",
["npcID"] = 192744,
},
[340474] = {
["npcID"] = 169874,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[319997] = {
["npcID"] = 164510,
},
[420293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[381430] = {
["npcID"] = 190388,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[295425] = {
["npcID"] = 154039,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 10470,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[417678] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[393718] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[342256] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[415419] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[374192] = {
["source"] = "Hungry Muckjaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 197815,
},
[418122] = {
["source"] = "Lord Thassarian",
["event"] = "SPELL_CAST_START",
["npcID"] = 207822,
},
[227592] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[326146] = {
["npcID"] = 157558,
},
[368047] = {
["npcID"] = 178508,
},
[299525] = {
["npcID"] = 150250,
},
[34637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Channeler",
["npcID"] = 19505,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[423775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Boughweaver",
["npcID"] = 211383,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[338434] = {
["npcID"] = 162875,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["npcID"] = 80005,
["encounterID"] = 1736,
},
[356812] = {
["npcID"] = 180286,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[258181] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[356865] = {
["npcID"] = 177271,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[37965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[424227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[255041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Skyscreamer",
["npcID"] = 128434,
},
[375296] = {
["npcID"] = 187131,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[412156] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[324103] = {
["npcID"] = 162133,
},
[141427] = {
["npcID"] = 183257,
},
[320008] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[319547] = {
["npcID"] = 165706,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
["260793"] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[367108] = {
["npcID"] = 184413,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[346631] = {
["npcID"] = 175930,
},
[359852] = {
["npcID"] = 181981,
},
[317963] = {
["npcID"] = 163458,
},
[369157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tarasek",
["npcID"] = 188372,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 204918,
},
[393731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flayfist",
["npcID"] = 187505,
},
[341422] = {
["npcID"] = 174194,
},
[427960] = {
["source"] = "Firebrand Fystia",
["event"] = "SPELL_CAST_START",
["npcID"] = 209893,
},
[176301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[358921] = {
["npcID"] = 178615,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[328206] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[427657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[198931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 207026,
},
[350732] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[310703] = {
["npcID"] = 159459,
},
[427514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[365067] = {
["npcID"] = 182318,
},
["200630"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[426500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[395784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[264153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
["169179"] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[363021] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183463,
["encounterID"] = 2546,
},
[274968] = {
["npcID"] = 170414,
},
[34639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Harvester",
["npcID"] = 19509,
},
[320019] = {
["npcID"] = 167022,
},
[424144] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Timeline Fracture",
["npcID"] = 208561,
},
[417499] = {
["source"] = "Malfunctioning Robotic Cauldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 207111,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[420326] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mystic",
["npcID"] = 195877,
},
[417497] = {
["source"] = "Rude Crude",
["event"] = "SPELL_CAST_START",
["npcID"] = 206617,
},
[409745] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[363024] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 183671,
["encounterID"] = 2546,
},
[198934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[360977] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[37967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[333225] = {
["encounterName"] = "Doctor Ickus",
["encounterID"] = 2384,
["npcID"] = 170851,
},
[340500] = {
["npcID"] = 167078,
},
[417953] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[264734] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[258777] = {
["source"] = "Irontide Oarsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 127111,
},
[399061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[405117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[172771] = {
["npcID"] = 86809,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[356885] = {
["npcID"] = 179851,
},
[264024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[338456] = {
["npcID"] = 172981,
},
[356886] = {
["npcID"] = 180331,
},
[408080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[417872] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[354080] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[326171] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[320028] = {
["npcID"] = 177252,
},
[413813] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Clockwork Sapper",
["npcID"] = 206058,
},
[356888] = {
["npcID"] = 177813,
},
[299502] = {
["npcID"] = 155094,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[417782] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[328221] = {
["npcID"] = 166723,
},
[395797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[358938] = {
["npcID"] = 180840,
},
[393750] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[332318] = {
["encounterName"] = "Sludgefist",
["encounterID"] = 2399,
["npcID"] = 164407,
},
[417926] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[260372] = {
["npcID"] = 133436,
},
[317985] = {
["npcID"] = 163520,
},
[393752] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[346654] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[326177] = {
["npcID"] = 167437,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[418025] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[340512] = {
["npcID"] = 167078,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
["88308"] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[232153] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[425873] = {
["source"] = "Lingering Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 209564,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[225562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[28294] = {
["source"] = "Living Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 16021,
},
["199151"] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[30633] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Warbringer O'mrogg",
["npcID"] = 16809,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1937,
},
[411730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[375327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Deathspeaker",
["npcID"] = 195851,
},
[256922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[278444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[363042] = {
["npcID"] = 185759,
},
[401297] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[268846] = {
["npcID"] = 136934,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 83612,
["encounterID"] = 1754,
},
[428047] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[341406] = {
["npcID"] = 174012,
},
[345772] = {
["npcID"] = 175579,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[338471] = {
["npcID"] = 162100,
},
[356901] = {
["npcID"] = 177004,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[417899] = {
["source"] = "Risen Adventurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205992,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 196043,
},
[332329] = {
["npcID"] = 170486,
},
[228637] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114802,
["encounterID"] = 1960,
},
[346186] = {
["npcID"] = 167323,
},
[422416] = {
["source"] = "Birchbramble",
["event"] = "SPELL_CAST_START",
["npcID"] = 209450,
},
["375327"] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[285232] = {
["npcID"] = 150734,
},
[395811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonebreakers",
["npcID"] = 187599,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[415296] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[357786] = {
["npcID"] = 177718,
},
[424234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207782,
},
[269890] = {
["source"] = "Irontide Ruffian",
["event"] = "SPELL_CAST_START",
["npcID"] = 126720,
},
[419975] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[277043] = {
["npcID"] = 154018,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[227615] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[334381] = {
["npcID"] = 171384,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
["265540"] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[354117] = {
["npcID"] = 179234,
},
[325725] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 166608,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[227616] = {
["encounterName"] = "Moroes",
["npcID"] = 114319,
["encounterID"] = 1961,
},
[9613] = {
["npcID"] = 59166,
},
[409477] = {
["source"] = "Kretchenwrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201673,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Ironskin",
["npcID"] = 191524,
},
[265759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[395817] = {
["isChanneled"] = true,
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[324146] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[369197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Flametamer",
["npcID"] = 195187,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[419659] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187908,
},
[406058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle",
["npcID"] = 203406,
},
["396665"] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[393772] = {
["source"] = "Hihveer",
["event"] = "SPELL_CAST_START",
["npcID"] = 188717,
},
[222499] = {
["npcID"] = 162829,
},
[356913] = {
["npcID"] = 179851,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[423725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balboan",
["npcID"] = 210559,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[396689] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[391726] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[394641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfist",
["npcID"] = 192030,
},
[387631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[422443] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[358963] = {
["npcID"] = 180864,
},
[359829] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[453161] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[462216] = {
["source"] = "Twilight Flamerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[89757] = {
["npcID"] = 48266,
},
[328248] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[222501] = {
["source"] = "Captain Grub Redcut",
["event"] = "SPELL_CAST_START",
["npcID"] = 199351,
},
["393432"] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[364617] = {
["npcID"] = 181057,
},
[426541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[338488] = {
["npcID"] = 173066,
},
[315963] = {
["npcID"] = 170146,
},
[375348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[265880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[421260] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[365110] = {
["npcID"] = 183746,
},
[358967] = {
["npcID"] = 179446,
},
[303678] = {
["npcID"] = 155793,
},
[395827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[263583] = {
["npcID"] = 134012,
},
["265019"] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[361016] = {
["npcID"] = 183253,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[418265] = {
["source"] = "Uther",
["event"] = "SPELL_CAST_START",
["npcID"] = 207818,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanius",
["npcID"] = 194147,
},
[385170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[358970] = {
["npcID"] = 179891,
},
[328254] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 168700,
["encounterID"] = 2402,
},
[420403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decaymonger Rotpaw",
["npcID"] = 205995,
},
[356923] = {
["npcID"] = 179890,
},
[358971] = {
["npcID"] = 179890,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[356924] = {
["npcID"] = 179890,
},
[418233] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[420405] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[299588] = {
["npcID"] = 150251,
},
[418202] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[353682] = {
["npcID"] = 176880,
},
[395833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[397881] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
["375439"] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[320067] = {
["npcID"] = 177217,
},
[395834] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197121,
},
[341395] = {
["npcID"] = 174012,
},
[322965] = {
["npcID"] = 161971,
},
[361023] = {
["npcID"] = 181005,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[356928] = {
["npcID"] = 177131,
},
[419790] = {
["source"] = "Beleaguered Moonkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 211007,
},
[361024] = {
["npcID"] = 181007,
},
[346690] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[365120] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[334404] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[352834] = {
["npcID"] = 176959,
},
[154331] = {
["npcID"] = 133104,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[399933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tukkaraq's Boat",
["npcID"] = 201121,
},
[336453] = {
["npcID"] = 176002,
},
[400954] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[198959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[59395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 202555,
},
[361027] = {
["npcID"] = 181093,
},
[81008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalspawn Giant",
["npcID"] = 42810,
},
[16429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[358980] = {
["npcID"] = 180864,
},
[279118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[397888] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[268709] = {
["npcID"] = 130661,
},
[393793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hacklung",
["npcID"] = 187752,
},
[395841] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[397889] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[358982] = {
["npcID"] = 180865,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alyn Black",
["npcID"] = 61834,
},
[427518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[365126] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181548,
["encounterID"] = 2544,
},
[159030] = {
["npcID"] = 81396,
},
["412215"] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[387652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[331152] = {
["npcID"] = 167164,
},
[346698] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[198962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[367176] = {
["npcID"] = 184409,
},
[393797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charfang",
["npcID"] = 187751,
},
[428609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 207024,
},
[381511] = {
["npcID"] = 182280,
},
[420419] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[352843] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[371273] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 188302,
["encounterID"] = 2418,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[350796] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[423531] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[341390] = {
["npcID"] = 174012,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[320081] = {
["npcID"] = 177217,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[356941] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 178081,
},
[449090] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[377419] = {
["npcID"] = 189914,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[397897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jazshariu",
["npcID"] = 104273,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[171044] = {
["npcID"] = 88512,
},
[387659] = {
["source"] = "Tomnu",
["event"] = "SPELL_CAST_START",
["npcID"] = 193722,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[326227] = {
["npcID"] = 157558,
},
[393803] = {
["source"] = "Trakhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193783,
},
[412233] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[393804] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[363088] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[411952] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[376200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[354898] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[381519] = {
["npcID"] = 183829,
},
[350803] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[393806] = {
["source"] = "Stoneheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 187387,
},
[260811] = {
["encounterName"] = "Mogul Razdunk",
["npcID"] = 129232,
["encounterID"] = 2108,
},
[348756] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[418024] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[395855] = {
["source"] = "Ruffian Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193819,
},
[381521] = {
["source"] = "Encroaching Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[271764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yetor",
["npcID"] = 192038,
},
[361044] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 182305,
["encounterID"] = 2544,
},
[257739] = {
["source"] = "Blacktooth Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129529,
},
[397904] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[431488] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Idriana",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214211,
},
[81440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonebinder",
["npcID"] = 189834,
},
[332377] = {
["npcID"] = 170513,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[393810] = {
["source"] = "Shiverweb Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186064,
},
[368379] = {
["npcID"] = 183516,
},
[356951] = {
["npcID"] = 177004,
},
[358999] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
},
[393811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maiden of Diligence",
["npcID"] = 192718,
},
[354904] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[393812] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[395860] = {
["source"] = "Gargantuan Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191606,
},
[419798] = {
["source"] = "Beleaguered Moonkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 211007,
},
[428625] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[393813] = {
["source"] = "Shiverweb Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186064,
},
[387670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Chieftain",
["npcID"] = 187266,
},
[356956] = {
["npcID"] = 177551,
},
[375384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthshaker",
["npcID"] = 190371,
},
[369241] = {
["source"] = "Searing Flame Harchek",
["event"] = "SPELL_CAST_START",
["npcID"] = 191476,
},
[322143] = {
["npcID"] = 156559,
},
[356955] = {
["npcID"] = 176880,
},
[375385] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[328287] = {
["npcID"] = 167550,
},
[365958] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23089,
},
[81576] = {
["npcID"] = 43537,
},
[328288] = {
["npcID"] = 168718,
},
[417868] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[381530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[401447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horrific Aberration",
["npcID"] = 198965,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[424178] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[257756] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[375388] = {
["npcID"] = 190900,
},
[428130] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[329168] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[397914] = {
["source"] = "Depraved Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200137,
},
[350816] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 176531,
["encounterID"] = 2433,
},
[423491] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77816,
["encounterID"] = 1715,
},
[398720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[253239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathling Destroyer",
["npcID"] = 190214,
},
[389725] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[417928] = {
["source"] = "Invading Flameclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 206805,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[177473] = {
["npcID"] = 82876,
},
[381535] = {
["npcID"] = 190388,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
["257756"] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[405450] = {
["source"] = "Hungry Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203260,
},
[340581] = {
["npcID"] = 166279,
},
[300650] = {
["npcID"] = 150169,
},
[328295] = {
["npcID"] = 168718,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonebinder",
["npcID"] = 189834,
},
[381537] = {
["source"] = "Vicious Ice Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186392,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[395872] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[174403] = {
["npcID"] = 86330,
},
[257337] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["encounterID"] = 2105,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[354918] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[328002] = {
["npcID"] = 168574,
},
[356967] = {
["npcID"] = 180348,
},
[387683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
["412012"] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[360432] = {
["npcID"] = 182362,
},
[459355] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[387684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Spire",
["npcID"] = 195348,
},
[227646] = {
["encounterName"] = "Moroes",
["npcID"] = 114318,
["encounterID"] = 1961,
},
[277106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[295536] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[365961] = {
["npcID"] = 183406,
},
[324205] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[377447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Wingguard",
["npcID"] = 192220,
},
[340588] = {
["npcID"] = 166467,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[301681] = {
["npcID"] = 150292,
},
[361066] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[395878] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[356971] = {
["npcID"] = 180087,
},
[350828] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[415436] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[407332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Dustmoth",
["npcID"] = 202316,
},
[164168] = {
["npcID"] = 81212,
},
[426596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Diviner",
["npcID"] = 131819,
},
[412262] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[158025] = {
["encounterName"] = "Imperator Mar'gok",
["npcID"] = 77428,
["encounterID"] = 1705,
},
[167240] = {
["npcID"] = 83028,
},
[320114] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[394620] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[406120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Tyr",
["npcID"] = 198982,
},
[336066] = {
["npcID"] = 179911,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[354927] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 178081,
},
[232142] = {
["encounterName"] = "Opera Hall",
["npcID"] = 116574,
["encounterID"] = 1957,
},
[403034] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[393835] = {
["source"] = "Shiverweb Cloaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195397,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[397931] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[336499] = {
["encounterName"] = "Mistcaller",
["encounterID"] = 2392,
["npcID"] = 164501,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[365168] = {
["npcID"] = 184530,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["npcID"] = 204337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[37979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[395885] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[365169] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[391790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Stomps",
["npcID"] = 197829,
},
[371313] = {
["npcID"] = 34545,
},
[436841] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[335233] = {
["npcID"] = 177245,
},
[391791] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[320120] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164463,
},
[354932] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 178081,
},
[359028] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[346742] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[356981] = {
["npcID"] = 177529,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[373364] = {
["npcID"] = 189878,
},
[260072] = {
["npcID"] = 131834,
},
[320123] = {
["npcID"] = 168966,
},
[363126] = {
["npcID"] = 181027,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[362316] = {
["npcID"] = 184425,
},
[385652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Crag",
["npcID"] = 195243,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[356984] = {
["npcID"] = 178402,
},
[399987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[114859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
["193505"] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[415435] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[354938] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[412275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
["375348"] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[391798] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[328318] = {
["npcID"] = 177912,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
[290438] = {
["npcID"] = 144536,
},
[391799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Root of Decay",
["npcID"] = 185326,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[407389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Serpent",
["npcID"] = 202272,
},
[373370] = {
["npcID"] = 189878,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[82608] = {
["npcID"] = 3255,
},
[350847] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[367228] = {
["npcID"] = 184767,
},
[320132] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[400756] = {
["source"] = "Remembered Lazy Peon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221895,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tenacious Timbertooth",
["npcID"] = 196185,
},
[229705] = {
["npcID"] = 115418,
},
[361088] = {
["npcID"] = 181027,
},
[291463] = {
["npcID"] = 150738,
},
[375422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 190888,
},
[442997] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215597,
},
[387708] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2116,
},
[229706] = {
["npcID"] = 115418,
},
[366606] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[375423] = {
["npcID"] = 181310,
},
[406934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[365185] = {
["npcID"] = 184659,
},
[412284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[320135] = {
["npcID"] = 167470,
},
[387711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Watcher",
["npcID"] = 200407,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[183633] = {
["source"] = "Rockbound Pelter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91008,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[420476] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[324987] = {
["npcID"] = 166301,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[82610] = {
["npcID"] = 37660,
},
[381570] = {
["npcID"] = 190388,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[418430] = {
["source"] = "Remembered Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221904,
},
[316836] = {
["npcID"] = 158992,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Elementium",
["npcID"] = 205628,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[400752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Travard",
["npcID"] = 198947,
},
[340617] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 173112,
["encounterID"] = 2418,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[193585] = {
["source"] = "Rockbound Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[398978] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200823,
},
[319994] = {
["npcID"] = 162258,
},
[320141] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[395908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Icebulk",
["npcID"] = 192767,
},
[229698] = {
["npcID"] = 115417,
},
[334476] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[296372] = {
["npcID"] = 152612,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[381575] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[325590] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[229711] = {
["npcID"] = 115419,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[332430] = {
["npcID"] = 177132,
},
[320144] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[418436] = {
["source"] = "Remembered Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221904,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[340622] = {
["npcID"] = 173798,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[393864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trap-Layer Kerwal",
["npcID"] = 186516,
},
[322193] = {
["npcID"] = 171255,
},
[340623] = {
["npcID"] = 173798,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[377483] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[413544] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[418192] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[285335] = {
["npcID"] = 177131,
},
[328338] = {
["npcID"] = 167493,
},
[330386] = {
["npcID"] = 158976,
},
[381580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Brawler",
["npcID"] = 202248,
},
[352914] = {
["npcID"] = 177397,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[330387] = {
["npcID"] = 159178,
},
[420490] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[350865] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177154,
},
[377486] = {
["npcID"] = 184335,
},
[330388] = {
["npcID"] = 159178,
},
[381582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[391821] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[210261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Sentry",
["npcID"] = 104251,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[334485] = {
["encounterName"] = "Ventunax",
["encounterID"] = 2356,
["npcID"] = 162058,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[414280] = {
["source"] = "Infinite Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205709,
},
[357011] = {
["npcID"] = 177514,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[377490] = {
["source"] = "Cragstrike Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195717,
},
[330391] = {
["npcID"] = 159178,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Keeper",
["npcID"] = 200284,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[229716] = {
["npcID"] = 115419,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trudging Devourer",
["npcID"] = 201066,
},
[340631] = {
["npcID"] = 173800,
},
[334488] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[279199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[400908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suffocating Menace",
["npcID"] = 201644,
},
[226287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Chunk",
["npcID"] = 101438,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Cultivator",
["npcID"] = 81985,
},
[389779] = {
["npcID"] = 186150,
},
[397014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Emissary",
["npcID"] = 197146,
},
[328069] = {
["npcID"] = 172072,
},
[387732] = {
["npcID"] = 3255,
},
[258199] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 187960,
},
[418449] = {
["source"] = "Rune Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207050,
},
[395924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leerain",
["npcID"] = 193679,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[330397] = {
["npcID"] = 178281,
},
[329422] = {
["npcID"] = 157571,
},
[334493] = {
["npcID"] = 164862,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[381592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[405850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[228567] = {
["npcID"] = 114794,
},
[381593] = {
["npcID"] = 184300,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[164192] = {
["npcID"] = 81236,
},
[330400] = {
["npcID"] = 161553,
},
[365212] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[391833] = {
["source"] = "Sherath",
["event"] = "SPELL_CAST_START",
["npcID"] = 188710,
},
[393881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[395097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[275112] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[377500] = {
["npcID"] = 184335,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[334498] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[340642] = {
["npcID"] = 170872,
},
[399949] = {
["source"] = "Primal Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 200673,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murloc",
["npcID"] = 190584,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[387224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mender",
["npcID"] = 199942,
},
[391837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Warden",
["npcID"] = 191252,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[339966] = {
["npcID"] = 164861,
},
[391840] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[396645] = {
["source"] = "Hamett",
["event"] = "SPELL_CAST_START",
["npcID"] = 187781,
},
[395934] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[316072] = {
["npcID"] = 159174,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[320168] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[346790] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 169924,
},
[340646] = {
["npcID"] = 173802,
},
[228700] = {
["npcID"] = 114338,
},
[420509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Infernomancer",
["npcID"] = 210503,
},
[395936] = {
["source"] = "Riverbeast Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 191687,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[375459] = {
["source"] = "Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 191827,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 162692,
},
[330409] = {
["npcID"] = 158420,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[328362] = {
["npcID"] = 167834,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[340649] = {
["npcID"] = 180096,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[395939] = {
["source"] = "Riverbeast Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 191687,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[412313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberdusk",
["npcID"] = 203664,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[178091] = {
["npcID"] = 80491,
},
[334509] = {
["npcID"] = 177294,
},
[336556] = {
["npcID"] = 164897,
},
[395941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbeast Elder",
["npcID"] = 191687,
},
[357735] = {
["encounterName"] = "Painsmith Raznal",
["npcID"] = 179847,
["encounterID"] = 2430,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[459422] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["npcID"] = 129758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[81442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[326319] = {
["npcID"] = 164921,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[338606] = {
["npcID"] = 167731,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[413023] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[418469] = {
["source"] = "Minion of Deathwingurlugull",
["event"] = "SPELL_CAST_START",
["npcID"] = 205037,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[340655] = {
["npcID"] = 172077,
},
[391849] = {
["npcID"] = 191406,
},
[336560] = {
["npcID"] = 180627,
},
[330417] = {
["npcID"] = 169696,
},
[211299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Inquisitor",
["npcID"] = 105715,
},
[85692] = {
["npcID"] = 11859,
},
[399059] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Electrified Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 200943,
},
[346800] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[418226] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[424615] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[395947] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197124,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[395946] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[395948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[327016] = {
["npcID"] = 159156,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90997,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[336567] = {
["npcID"] = 165976,
},
[16564] = {
["npcID"] = 170487,
},
[423259] = {
["source"] = "Wildfire Blazekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[174442] = {
["npcID"] = 86256,
},
[391855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[265582] = {
["source"] = "Glimmerspine",
["event"] = "SPELL_CAST_START",
["npcID"] = 149654,
},
[395951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[340662] = {
["npcID"] = 172078,
},
[391856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tenmod",
["npcID"] = 194763,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[159085] = {
["npcID"] = 85775,
},
[426669] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[346807] = {
["npcID"] = 175700,
},
[403601] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[365921] = {
["npcID"] = 183406,
},
[250208] = {
["npcID"] = 170122,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[373429] = {
["npcID"] = 189878,
},
[334522] = {
["encounterName"] = "Hungering Destroyer",
["npcID"] = 164261,
["encounterID"] = 2383,
},
[393907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[322236] = {
["encounterName"] = "Stradama Margrave",
["npcID"] = 165430,
["encounterID"] = 2386,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126841,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[369335] = {
["npcID"] = 184107,
},
[371383] = {
["source"] = "Hailbringer Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189229,
},
[347490] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 204508,
},
[357862] = {
["npcID"] = 177903,
},
[346811] = {
["npcID"] = 177735,
},
[389814] = {
["npcID"] = 189955,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80816,
["encounterID"] = 1748,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
["265568"] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[331414] = {
["npcID"] = 157754,
},
[367290] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[250213] = {
["npcID"] = 161527,
},
[346813] = {
["npcID"] = 152905,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[367966] = {
["npcID"] = 184901,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[6535] = {
["npcID"] = 3273,
},
[337249] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[228025] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114329,
["encounterID"] = 1957,
},
[359102] = {
["npcID"] = 176533,
},
[391866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 192057,
},
[377532] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[320196] = {
["npcID"] = 175605,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[340674] = {
["npcID"] = 165053,
},
[395188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontree",
["npcID"] = 188124,
},
[312674] = {
["npcID"] = 161388,
},
[412346] = {
["source"] = "Irontide Corsair",
["event"] = "SPELL_CAST_START",
["npcID"] = 126928,
},
[398012] = {
["npcID"] = 191093,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["npcID"] = 95885,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[397886] = {
["source"] = "Corrupt Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 62358,
},
[391870] = {
["source"] = "Hungry Muckjaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 197815,
},
[319906] = {
["npcID"] = 177252,
},
[330438] = {
["npcID"] = 165976,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[350916] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 179269,
["encounterID"] = 2440,
},
[320200] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[395967] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[340678] = {
["npcID"] = 172079,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pesky Sporemoth",
["npcID"] = 202625,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[355675] = {
["npcID"] = 176705,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[336584] = {
["npcID"] = 164476,
},
[459449] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
["387950"] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[350919] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[344776] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 175205,
},
[407107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[334538] = {
["npcID"] = 171422,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[328395] = {
["npcID"] = 171656,
},
[400974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebringer Shaman",
["npcID"] = 203700,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[213688] = {
["npcID"] = 107024,
},
[400999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[340683] = {
["npcID"] = 162708,
},
[350922] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 179269,
["encounterID"] = 2440,
},
[394972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 197148,
},
[338636] = {
["npcID"] = 167731,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182071,
["encounterID"] = 2539,
},
[329930] = {
["npcID"] = 157083,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[387783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windseeker Avash",
["npcID"] = 192045,
},
[395952] = {
["source"] = "Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197125,
},
[334542] = {
["npcID"] = 171422,
},
[320208] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 164578,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[188587] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[427342] = {
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[328400] = {
["npcID"] = 164737,
},
[173098] = {
["npcID"] = 78638,
},
[406215] = {
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[333145] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 167566,
["encounterID"] = 2402,
},
[409231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[29492] = {
["npcID"] = 114625,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 204508,
},
[346832] = {
["npcID"] = 176262,
},
[390481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[404815] = {
["source"] = "Grugoth the Hullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200721,
},
[35943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Acolyte",
["npcID"] = 16594,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[369359] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 189515,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[164218] = {
["npcID"] = 81407,
},
[404171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[332500] = {
["npcID"] = 173582,
},
[341895] = {
["npcID"] = 168647,
},
[361169] = {
["npcID"] = 182466,
},
[385351] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 195335,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[400077] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[297310] = {
["npcID"] = 153174,
},
[402766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[319371] = {
["npcID"] = 163512,
},
[342741] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 172858,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windsage",
["npcID"] = 195352,
},
[340375] = {
["npcID"] = 168148,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Hound",
["npcID"] = 199823,
},
[54318] = {
["npcID"] = 29337,
},
[365905] = {
["npcID"] = 184860,
},
[268797] = {
["npcID"] = 133432,
},
[317880] = {
["npcID"] = 158992,
},
[389496] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[393937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[330458] = {
["npcID"] = 151331,
},
[422606] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[169341] = {
["npcID"] = 83765,
},
[369365] = {
["npcID"] = 184132,
},
[412368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[328411] = {
["npcID"] = 159106,
},
[395987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jumping Spiderling",
["npcID"] = 199182,
},
["369409"] = {
["npcID"] = 184130,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[365903] = {
["npcID"] = 185346,
},
[357081] = {
["npcID"] = 176956,
},
[328413] = {
["npcID"] = 158473,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[412371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[357082] = {
["npcID"] = 178733,
},
[171390] = {
["npcID"] = 80380,
},
[328414] = {
["npcID"] = 159106,
},
[338653] = {
["npcID"] = 173044,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[391895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalag-MIGHT!",
["npcID"] = 197848,
},
[385258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[395991] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[357084] = {
["npcID"] = 180379,
},
[391896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Lifetender",
["npcID"] = 196647,
},
[202108] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[406231] = {
["source"] = "Lingering Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201758,
},
[342751] = {
["npcID"] = 171596,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 164815,
},
[381659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade",
["npcID"] = 186962,
},
[391898] = {
["source"] = "Mistyvale Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 193969,
},
[365155] = {
["npcID"] = 183746,
},
[76133] = {
["encounterName"] = "Ozumat",
["npcID"] = 40792,
["encounterID"] = 1047,
},
[324323] = {
["npcID"] = 165919,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[176512] = {
["npcID"] = 83692,
},
[194942] = {
["encounterName"] = "Glazer",
["encounterID"] = 1817,
["npcID"] = 95887,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[318181] = {
["npcID"] = 157274,
},
[385757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mender Eskros",
["npcID"] = 195303,
},
[412378] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[340707] = {
["npcID"] = 172084,
},
[173751] = {
["npcID"] = 155216,
},
[320230] = {
["encounterName"] = "Dealer Xy'exa",
["encounterID"] = 2400,
["npcID"] = 164450,
},
[404188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Static Charge",
["npcID"] = 202847,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[171394] = {
["npcID"] = 80379,
},
[385419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
["169929"] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[357091] = {
["npcID"] = 178731,
},
[391903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Egg Guardian",
["npcID"] = 190171,
},
[176514] = {
["npcID"] = 83694,
},
[330471] = {
["npcID"] = 153174,
},
[390472] = {
["npcID"] = 189933,
},
[334567] = {
["npcID"] = 171448,
},
[279278] = {
["npcID"] = 152500,
},
[322281] = {
["npcID"] = 156559,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[428765] = {
["source"] = "Tindral Sageswift",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
["257870"] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[412383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[340712] = {
["npcID"] = 162697,
},
[408901] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[391907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalag-MIGHT!",
["npcID"] = 197850,
},
[420575] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Echo of Fyrakk",
["npcID"] = 208524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[373477] = {
["source"] = "Bound Shoresnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[152814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[355048] = {
["npcID"] = 178139,
},
[397468] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Flamesworn Herald",
["npcID"] = 199549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[161150] = {
["npcID"] = 80936,
},
[355049] = {
["npcID"] = 176535,
},
[396005] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[332526] = {
["npcID"] = 171396,
},
[328429] = {
["npcID"] = 168022,
},
[355050] = {
["npcID"] = 176535,
},
[332525] = {
["npcID"] = 171396,
},
[391910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[412388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[182661] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shimmerfin",
["npcID"] = 136009,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[341323] = {
["npcID"] = 173973,
},
[330479] = {
["npcID"] = 153382,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[391912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalag-MIGHT!",
["npcID"] = 197853,
},
[386509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[426725] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[373483] = {
["source"] = "Soggymaw Wavebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187263,
},
["200291"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
["427376"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
["255567"] = {
["event"] = "SPELL_CAST_START",
["source"] = "T'lonja",
["npcID"] = 128455,
},
[357102] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[320243] = {
["npcID"] = 160905,
},
[355055] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176929,
["encounterID"] = 2422,
},
[256382] = {
["npcID"] = 127807,
},
[391915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grounded Primalist",
["npcID"] = 187204,
},
[339274] = {
["npcID"] = 173298,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 56439,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[342770] = {
["npcID"] = 173604,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Snail",
["npcID"] = 191628,
},
[346866] = {
["npcID"] = 174175,
},
[385331] = {
["encounterName"] = "Umbrelskul",
["source"] = "Hardened Crystal",
["npcID"] = 199368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[326389] = {
["encounterName"] = "Echelon",
["npcID"] = 164185,
["encounterID"] = 2380,
},
[328437] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[194951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[319775] = {
["npcID"] = 166872,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[338677] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 173161,
},
[365298] = {
["npcID"] = 184539,
},
[385263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[340724] = {
["npcID"] = 177217,
},
[357108] = {
["npcID"] = 177144,
},
[326392] = {
["npcID"] = 157212,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[395541] = {
["source"] = "Emblazion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193650,
},
[364833] = {
["npcID"] = 181111,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[355062] = {
["npcID"] = 178623,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126845,
},
[386993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Proto-Drake",
["npcID"] = 194939,
},
[355063] = {
["npcID"] = 178623,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[277249] = {
["npcID"] = 158177,
},
[331550] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 170197,
["encounterID"] = 2406,
},
[9053] = {
["npcID"] = 41272,
},
[357112] = {
["npcID"] = 177831,
},
[412360] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[369399] = {
["npcID"] = 186420,
},
[412402] = {
["source"] = "Flowfy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203660,
},
[199050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[412403] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201773,
},
[369400] = {
["npcID"] = 184132,
},
[338684] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 173162,
},
[406260] = {
["source"] = "Memory of an Attacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200825,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[240006] = {
["npcID"] = 182863,
},
[374081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Godoloto",
["npcID"] = 190022,
},
[215433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[326399] = {
["npcID"] = 155251,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[338686] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 173163,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[353603] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[355069] = {
["npcID"] = 178625,
},
[355070] = {
["npcID"] = 178625,
},
[375547] = {
["npcID"] = 191286,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[404216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[374080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Ravager",
["npcID"] = 190348,
},
[396605] = {
["source"] = "Rapid Wooly Ewe",
["event"] = "SPELL_CAST_START",
["npcID"] = 197200,
},
[402748] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[412408] = {
["source"] = "Field Despair Bot K156",
["event"] = "SPELL_CAST_START",
["npcID"] = 205612,
},
[377335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[167239] = {
["npcID"] = 83028,
},
[355072] = {
["npcID"] = 178628,
},
[340738] = {
["npcID"] = 167848,
},
[399744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[82641] = {
["npcID"] = 41272,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[352158] = {
["npcID"] = 175727,
},
[355074] = {
["npcID"] = 178628,
},
[404220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[369409] = {
["npcID"] = 184130,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[332550] = {
["npcID"] = 169875,
},
[87761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[412413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skornak",
["npcID"] = 203643,
},
[357124] = {
["npcID"] = 180780,
},
[310026] = {
["npcID"] = 166159,
},
[369411] = {
["npcID"] = 184301,
},
[412414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[357125] = {
["npcID"] = 176879,
},
[326409] = {
["npcID"] = 164557,
},
[394912] = {
["source"] = "Crystalus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193645,
},
[357029] = {
["npcID"] = 180335,
},
[414463] = {
["source"] = "MR-7 Tangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 205824,
},
[88170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Squall",
["npcID"] = 45924,
},
[377604] = {
["npcID"] = 191729,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[355646] = {
["npcID"] = 178191,
},
[391939] = {
["npcID"] = 189206,
},
[35950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Houndmaster",
["npcID"] = 17670,
},
[340746] = {
["npcID"] = 167848,
},
[357128] = {
["npcID"] = 176879,
},
[342794] = {
["npcID"] = 174336,
},
[32011] = {
["npcID"] = 45618,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[414466] = {
["source"] = "MR-7 Gutcutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204515,
},
[424705] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Keevah",
["npcID"] = 210051,
},
[369416] = {
["npcID"] = 184355,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[68821] = {
["source"] = "Apothecary Hummel",
["event"] = "SPELL_CAST_START",
["npcID"] = 36296,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[295698] = {
["npcID"] = 154041,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Stormcaller",
["npcID"] = 198502,
},
[340749] = {
["npcID"] = 167548,
},
[424707] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Keevah",
["npcID"] = 210051,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Soldier",
["npcID"] = 186919,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[340750] = {
["npcID"] = 167548,
},
[391944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[396040] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[193941] = {
["source"] = "Embershard Scorpion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98406,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[344847] = {
["npcID"] = 178226,
},
[396041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracked Concretion",
["npcID"] = 197074,
},
[389898] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196992,
},
[361230] = {
["npcID"] = 182561,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[194966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[357135] = {
["npcID"] = 180387,
},
[310037] = {
["npcID"] = 166159,
},
[344849] = {
["npcID"] = 175240,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[130767] = {
["source"] = "Elder Sage Snow-Ting",
["event"] = "SPELL_CAST_START",
["npcID"] = 57323,
},
[369423] = {
["npcID"] = 184303,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 187969,
},
[406283] = {
["isChanneled"] = true,
["source"] = "Ruinous Flames",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202424,
},
[218871] = {
["npcID"] = 152500,
},
[361233] = {
["npcID"] = 182158,
},
[355090] = {
["npcID"] = 178628,
},
[328458] = {
["npcID"] = 168844,
},
[388944] = {
["npcID"] = 190904,
},
[393998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[331634] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166970,
},
[357139] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[310041] = {
["npcID"] = 166159,
},
[331069] = {
["npcID"] = 179615,
},
[396019] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[332567] = {
["npcID"] = 170228,
},
[358239] = {
["npcID"] = 178851,
},
[397878] = {
["source"] = "Corrupt Living Water",
["event"] = "SPELL_CAST_START",
["npcID"] = 59873,
},
[412430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gastrite",
["npcID"] = 205801,
},
[291613] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[259473] = {
["npcID"] = 131331,
},
[332569] = {
["npcID"] = 156559,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[269090] = {
["npcID"] = 137029,
},
[273185] = {
["npcID"] = 150251,
},
[357143] = {
["npcID"] = 178646,
},
[257426] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[328475] = {
["npcID"] = 164737,
},
[177564] = {
["npcID"] = 177586,
},
[357144] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 180323,
},
[392635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[382261] = {
["source"] = "Amalgam of Desperation",
["event"] = "SPELL_CAST_START",
["npcID"] = 199423,
},
[355640] = {
["npcID"] = 179840,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[75992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[338591] = {
["npcID"] = 173066,
},
[340764] = {
["npcID"] = 173864,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Relentless Gust",
["npcID"] = 194159,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cantankerous Hornswog",
["npcID"] = 187140,
},
[389040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[396751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[391959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ganmat the Wise",
["npcID"] = 192226,
},
[387748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Zambul",
["npcID"] = 191145,
},
[381721] = {
["npcID"] = 186150,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[352842] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[396018] = {
["source"] = "The Crybaby Hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59552,
},
[392724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[337587] = {
["npcID"] = 162880,
},
[391247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[334625] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[293670] = {
["npcID"] = 144299,
},
[339706] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 173549,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[324387] = {
["npcID"] = 165197,
},
[87768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[374066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[345397] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[82137] = {
["npcID"] = 39665,
},
[330532] = {
["npcID"] = 164510,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[193951] = {
["npcID"] = 97677,
},
[296748] = {
["npcID"] = 152875,
},
[351969] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[412444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[422683] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[359203] = {
["npcID"] = 184059,
},
[369442] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 189515,
},
[162475] = {
["encounterName"] = "Tectus, The Living Mountain",
["npcID"] = 78948,
["encounterID"] = 1722,
},
[406302] = {
["source"] = "Memory of a Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200824,
},
[397892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[394795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlerock",
["npcID"] = 193652,
},
[407097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[422685] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[326441] = {
["npcID"] = 164557,
},
[406304] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200816,
},
[157355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidseer Kalurg",
["npcID"] = 83385,
},
[324394] = {
["npcID"] = 165197,
},
[199034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[320300] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[400162] = {
["isChanneled"] = true,
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200681,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[404258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[356929] = {
["npcID"] = 179837,
},
[277060] = {
["npcID"] = 154020,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[404259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
["188169"] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[344875] = {
["npcID"] = 171317,
},
[396069] = {
["npcID"] = 191095,
},
[365870] = {
["npcID"] = 183404,
},
[318255] = {
["npcID"] = 163575,
},
[229714] = {
["npcID"] = 115419,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[385832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[396071] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[408358] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[348974] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[33395] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Water Elemental",
["npcID"] = 208441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2687,
},
[396073] = {
["source"] = "The Nodding Tiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59544,
},
[303924] = {
["npcID"] = 155911,
},
[412455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[326450] = {
["npcID"] = 164562,
},
[375596] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[373549] = {
["source"] = "Scrambling Skitterfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 193703,
},
[383236] = {
["source"] = "Beguiled Aquamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195960,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[396075] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[422696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avius Flamebeak",
["npcID"] = 210305,
},
[173480] = {
["npcID"] = 83389,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[88080] = {
["npcID"] = 47238,
},
[414506] = {
["source"] = "Verdant Dream Raven",
["event"] = "SPELL_CAST_START",
["npcID"] = 211372,
},
[375599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Shards",
["npcID"] = 191315,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[322358] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[340788] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[391982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[352347] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 176551,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[422699] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[326455] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[393298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[384296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[357172] = {
["npcID"] = 178575,
},
[285440] = {
["encounterName"] = "Machinist's Garden",
["npcID"] = 144248,
["encounterID"] = 2259,
},
[418605] = {
["source"] = "Future Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 208887,
},
[268185] = {
["npcID"] = 136470,
},
[316218] = {
["npcID"] = 178056,
},
[396925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 197149,
},
[367413] = {
["encounterName"] = "Lihuvim, Principal Architect",
["encounterID"] = 2539,
["npcID"] = 185423,
},
[330553] = {
["npcID"] = 178979,
},
[365365] = {
["npcID"] = 184603,
},
[359222] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 180158,
["encounterID"] = 2440,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[355127] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176929,
["encounterID"] = 2422,
},
[340793] = {
["npcID"] = 166140,
},
[375605] = {
["npcID"] = 185272,
},
["257426"] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[322943] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[130265] = {
["npcID"] = 66291,
},
[391842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Shaman",
["npcID"] = 187552,
},
[104318] = {
["npcID"] = 55659,
},
[396084] = {
["npcID"] = 190933,
},
[341852] = {
["npcID"] = 173832,
},
[18651] = {
["source"] = "Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 87518,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Attendant",
["npcID"] = 187036,
},
[333641] = {
["npcID"] = 169905,
},
[340796] = {
["npcID"] = 166139,
},
[334653] = {
["npcID"] = 165076,
},
[369465] = {
["npcID"] = 186420,
},
[322367] = {
["npcID"] = 165485,
},
[392484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moskhoi",
["npcID"] = 195093,
},
[326463] = {
["npcID"] = 164036,
},
[271174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pallid Gorger",
["npcID"] = 137830,
},
[355132] = {
["npcID"] = 178141,
},
[130266] = {
["npcID"] = 66200,
},
[326464] = {
["npcID"] = 164036,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[324417] = {
["npcID"] = 162133,
},
[340799] = {
["npcID"] = 166139,
},
[340564] = {
["npcID"] = 169206,
},
[358375] = {
["npcID"] = 179472,
},
[322370] = {
["npcID"] = 157054,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[334558] = {
["npcID"] = 171448,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Kharad",
["npcID"] = 190932,
},
[330562] = {
["npcID"] = 164506,
},
[357183] = {
["npcID"] = 177938,
},
[224682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Houndsmaster",
["npcID"] = 211882,
},
[377661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Vorquin",
["npcID"] = 190216,
},
[395899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chillblaster",
["npcID"] = 199124,
},
[389948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Zambul",
["npcID"] = 191145,
},
[377411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Striker",
["npcID"] = 192938,
},
[332612] = {
["npcID"] = 170572,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[389949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Reaver",
["npcID"] = 187201,
},
[359233] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 181047,
["encounterID"] = 2529,
},
[394045] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[346947] = {
["encounterName"] = "Mailroom Mayhem",
["npcID"] = 175646,
["encounterID"] = 2424,
},
[351045] = {
["npcID"] = 177797,
},
[391998] = {
["npcID"] = 191403,
},
[414525] = {
["source"] = "Morchie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205708,
},
[281420] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[359235] = {
["npcID"] = 180906,
},
[342854] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[422717] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[357188] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[359236] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[205231] = {
["npcID"] = 103673,
},
[353573] = {
["npcID"] = 179133,
},
[389953] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[334664] = {
["npcID"] = 171341,
},
[326952] = {
["npcID"] = 168058,
},
[412479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinn",
["npcID"] = 203646,
},
[404288] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[351047] = {
["npcID"] = 178392,
},
[373573] = {
["source"] = "Sprite Dreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207617,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[324427] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[357192] = {
["npcID"] = 178576,
},
[418624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Assassin",
["npcID"] = 207915,
},
[365385] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 184622,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 191654,
},
[423195] = {
["isChanneled"] = true,
["source"] = "Nymue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[157348] = {
["npcID"] = 77942,
},
[330574] = {
["npcID"] = 179755,
},
[199090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[335141] = {
["npcID"] = 165824,
},
[303952] = {
["npcID"] = 155910,
},
[76516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[162231] = {
["npcID"] = 80071,
},
[392006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sharpfang",
["npcID"] = 192749,
},
[392007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Bruiser",
["npcID"] = 183343,
},
[19645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Banshee",
["npcID"] = 10464,
},
[398150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Dominator",
["npcID"] = 76446,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[320336] = {
["npcID"] = 163126,
},
[346957] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175667,
},
[357196] = {
["npcID"] = 180336,
},
[331045] = {
["npcID"] = 170860,
},
[357197] = {
["npcID"] = 180336,
},
[412486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warchanter Ronvath",
["npcID"] = 200128,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[342863] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[331044] = {
["npcID"] = 170860,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[398154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Spirit",
["npcID"] = 75451,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[396107] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[351057] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[73958] = {
["npcID"] = 39464,
},
[51963] = {
["npcID"] = 27829,
},
[315082] = {
["npcID"] = 158259,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Attendant",
["npcID"] = 187036,
},
[328533] = {
["npcID"] = 163862,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[406345] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[392014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rokzul",
["npcID"] = 194458,
},
[348117] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[412492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[357203] = {
["npcID"] = 178056,
},
[342869] = {
["npcID"] = 168934,
},
[394060] = {
["source"] = "Productive Pollinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193809,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[337556] = {
["npcID"] = 162853,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[325223] = {
["npcID"] = 166304,
},
[384648] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
["411012"] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[168380] = {
["npcID"] = 84201,
},
[227672] = {
["encounterName"] = "Moroes",
["npcID"] = 114321,
["encounterID"] = 1961,
},
[322936] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[364643] = {
["npcID"] = 181057,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[330586] = {
["npcID"] = 169927,
},
[294180] = {
["npcID"] = 151773,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[168381] = {
["npcID"] = 84201,
},
[365851] = {
["npcID"] = 183404,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[212031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Energy",
["npcID"] = 105705,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 183421,
["encounterID"] = 2544,
},
[342875] = {
["npcID"] = 166981,
},
[365400] = {
["npcID"] = 184413,
},
[351066] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[357659] = {
["npcID"] = 178878,
},
[68841] = {
["npcID"] = 36272,
},
[351067] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[342873] = {
["npcID"] = 177589,
},
[346972] = {
["npcID"] = 169605,
},
[166335] = {
["npcID"] = 82579,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[341715] = {
["npcID"] = 174162,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[342878] = {
["npcID"] = 171189,
},
[180670] = {
["npcID"] = 90215,
},
[388374] = {
["source"] = "Towering Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 203786,
},
[353562] = {
["encounterName"] = "Soulrender Dormazain",
["encounterID"] = 2434,
["npcID"] = 179177,
},
[324293] = {
["npcID"] = 165919,
},
[355166] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 177289,
},
[330593] = {
["npcID"] = 168724,
},
[302979] = {
["npcID"] = 151625,
},
[317959] = {
["npcID"] = 163458,
},
[385883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[359704] = {
["npcID"] = 181626,
},
[414993] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[412505] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[398171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senegos",
["npcID"] = 199923,
},
[351073] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[443222] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[371551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Dustcaller",
["npcID"] = 187551,
},
[398172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellagosa",
["npcID"] = 200099,
},
[359265] = {
["npcID"] = 185415,
},
[320358] = {
["encounterName"] = "Stichflesh",
["npcID"] = 162689,
["encounterID"] = 2389,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[357218] = {
["npcID"] = 176957,
},
[351075] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177154,
},
[369942] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191509,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[357219] = {
["npcID"] = 176957,
},
[375649] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[353124] = {
["npcID"] = 178957,
},
[297835] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[406366] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[262794] = {
["npcID"] = 133430,
},
[414992] = {
["source"] = "Burning Flamespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 205138,
},
[301075] = {
["npcID"] = 165167,
},
[349030] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[332646] = {
["npcID"] = 162872,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[34170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[335129] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[344936] = {
["npcID"] = 168975,
},
[166341] = {
["npcID"] = 82579,
},
[406369] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[348071] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[346985] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[333861] = {
["npcID"] = 167533,
},
[194611] = {
["npcID"] = 98926,
},
[199726] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Ranulf",
["npcID"] = 97083,
},
[330604] = {
["npcID"] = 168724,
},
[347414] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swelling Fire Elemental",
["npcID"] = 188667,
},
[352833] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[360451] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[357226] = {
["npcID"] = 180429,
},
[267551] = {
["npcID"] = 129214,
},
[328558] = {
["npcID"] = 159027,
},
[389981] = {
["npcID"] = 189955,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[318312] = {
["npcID"] = 166426,
},
[344941] = {
["npcID"] = 162845,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[227776] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114251,
["encounterID"] = 1957,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[361324] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2086,
},
[357229] = {
["npcID"] = 180348,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["npcID"] = 95885,
},
[377707] = {
["npcID"] = 191729,
},
[338800] = {
["npcID"] = 173202,
},
[327280] = {
["npcID"] = 167524,
},
[202181] = {
["source"] = "Rockback Gnasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91006,
},
[343316] = {
["npcID"] = 173446,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohn'ir Windcaller",
["npcID"] = 191244,
},
[406378] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[404748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Navigator Bi-Yun",
["npcID"] = 201184,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[338802] = {
["npcID"] = 173202,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[342898] = {
["npcID"] = 162123,
},
[288765] = {
["npcID"] = 177637,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[334708] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 171557,
["encounterID"] = 2418,
},
[351090] = {
["npcID"] = 176574,
},
[351091] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177787,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[227779] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
[359282] = {
["npcID"] = 185415,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[330614] = {
["npcID"] = 163086,
},
[389999] = {
["npcID"] = 189955,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[320376] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 164578,
},
[357232] = {
["npcID"] = 179108,
},
[373618] = {
["npcID"] = 190174,
},
[354242] = {
["npcID"] = 179434,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[337513] = {
["npcID"] = 158259,
},
[346205] = {
["npcID"] = 173717,
},
[352223] = {
["npcID"] = 176578,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[357238] = {
["npcID"] = 180429,
},
[212423] = {
["npcID"] = 99541,
},
[332608] = {
["npcID"] = 170572,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[357239] = {
["npcID"] = 180407,
},
[351096] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[350875] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[265091] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[366187] = {
["npcID"] = 183499,
},
[340761] = {
["npcID"] = 166140,
},
[336763] = {
["npcID"] = 169780,
},
[322429] = {
["npcID"] = 162057,
},
[227985] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[375671] = {
["npcID"] = 190900,
},
[443247] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[300687] = {
["npcID"] = 150168,
},
[211401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[344956] = {
["npcID"] = 162829,
},
[323544] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 165905,
},
[357243] = {
["npcID"] = 180433,
},
[383864] = {
["npcID"] = 191403,
},
[385912] = {
["source"] = "Shiverweb Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192591,
},
[428915] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Monarch",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 214020,
},
[332671] = {
["npcID"] = 170480,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[91622] = {
["npcID"] = 47141,
},
[322433] = {
["npcID"] = 162057,
},
[357245] = {
["npcID"] = 180407,
},
[383866] = {
["npcID"] = 194526,
},
[368166] = {
["npcID"] = 183814,
},
[357086] = {
["npcID"] = 180392,
},
[339557] = {
["npcID"] = 173464,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[316689] = {
["npcID"] = 162682,
},
[361343] = {
["npcID"] = 178963,
},
[324483] = {
["npcID"] = 177211,
},
[257478] = {
["source"] = "Irontide Mastiff",
["event"] = "SPELL_CAST_START",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[258169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[387965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Bladewing",
["npcID"] = 187232,
},
[395859] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[424825] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[320390] = {
["npcID"] = 168697,
},
[371584] = {
["npcID"] = 34640,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[329569] = {
["npcID"] = 158160,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[40317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[398206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exhumed Spirit",
["npcID"] = 75979,
},
[383872] = {
["source"] = "Destructive Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194179,
},
[418684] = {
["source"] = "Alliance Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208208,
},
[330631] = {
["npcID"] = 180013,
},
[211406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 104295,
},
[351109] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177787,
},
[272272] = {
["npcID"] = 161692,
},
[363396] = {
["npcID"] = 181572,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[327332] = {
["npcID"] = 163459,
},
[114646] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[324490] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[373636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konkhular",
["npcID"] = 194544,
},
[377732] = {
["npcID"] = 184319,
},
[394114] = {
["event"] = "SPELL_CAST_START",
["source"] = "S.A.V.I.O.R.",
["npcID"] = 195328,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[29583] = {
["npcID"] = 114625,
},
[196242] = {
["npcID"] = 99649,
},
[365831] = {
["npcID"] = 182357,
},
[153395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[332683] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 169835,
},
[363400] = {
["npcID"] = 178158,
},
[335114] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[420737] = {
["source"] = "Flame-Warped Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 207016,
},
["409492"] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Totem",
["npcID"] = 190426,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["npcID"] = 125977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[387974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[391871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Tendontearer",
["npcID"] = 197820,
},
[51219] = {
["npcID"] = 46859,
},
[320063] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164451,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36565,
},
[357259] = {
["npcID"] = 180392,
},
[351117] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177889,
},
[424836] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[355212] = {
["npcID"] = 178630,
},
[357260] = {
["npcID"] = 180431,
},
[204243] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[175763] = {
["npcID"] = 85241,
},
[414974] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[317284] = {
["npcID"] = 162880,
},
[355214] = {
["npcID"] = 178630,
},
[367496] = {
["npcID"] = 185537,
},
[351119] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177716,
},
[263066] = {
["npcID"] = 133345,
},
[323640] = {
["npcID"] = 165473,
},
[367502] = {
["npcID"] = 181059,
},
[392075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arkhuu",
["npcID"] = 195300,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[375694] = {
["npcID"] = 181310,
},
[353540] = {
["npcID"] = 179152,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[342931] = {
["npcID"] = 169410,
},
[359313] = {
["npcID"] = 185759,
},
[378112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Hornswog",
["npcID"] = 189314,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[443640] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[420746] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[254920] = {
["npcID"] = 167724,
},
[367505] = {
["npcID"] = 181059,
},
[344922] = {
["npcID"] = 168148,
},
[191823] = {
["encounterName"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["npcID"] = 95885,
},
[365458] = {
["npcID"] = 184651,
},
[351124] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[271628] = {
["npcID"] = 164334,
},
[417018] = {
["source"] = "Alliance Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[292903] = {
["npcID"] = 150958,
},
[392080] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[412922] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[334748] = {
["npcID"] = 166302,
},
[414606] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 205069,
},
[334747] = {
["npcID"] = 166302,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[76535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[283551] = {
["encounterName"] = "King Mechagon",
["npcID"] = 144249,
["encounterID"] = 2260,
},
[342936] = {
["npcID"] = 173387,
},
[263074] = {
["npcID"] = 133345,
},
[387987] = {
["source"] = "Keen Skywatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 190778,
},
[396180] = {
["source"] = "Lava Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 186620,
},
[79607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomtail Scorpid",
["npcID"] = 3127,
},
[200154] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[355224] = {
["npcID"] = 151818,
},
[414609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pureblooded Cloud Serpent",
["npcID"] = 205680,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[344986] = {
["npcID"] = 158314,
},
[355225] = {
["npcID"] = 178142,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[342939] = {
["npcID"] = 169410,
},
[338846] = {
["npcID"] = 167525,
},
[355226] = {
["npcID"] = 152656,
},
[20802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Putrifier",
["npcID"] = 186363,
},
[355230] = {
["npcID"] = 152656,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[443636] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[188046] = {
["npcID"] = 198489,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Insatiable Hornswog",
["npcID"] = 185715,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[355228] = {
["npcID"] = 178631,
},
[227800] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[338847] = {
["npcID"] = 167525,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[349087] = {
["npcID"] = 176705,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[338848] = {
["npcID"] = 167525,
},
[332705] = {
["npcID"] = 170490,
},
[355234] = {
["npcID"] = 178142,
},
[357280] = {
["npcID"] = 180387,
},
[332708] = {
["npcID"] = 167532,
},
[332706] = {
["npcID"] = 170490,
},
[385950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathwingurlugull",
["npcID"] = 195314,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[322470] = {
["npcID"] = 157054,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[336803] = {
["npcID"] = 160785,
},
[338851] = {
["npcID"] = 167525,
},
[357281] = {
["npcID"] = 180432,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[426905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Ghur'sha",
["npcID"] = 212778,
},
[338852] = {
["npcID"] = 167527,
},
["369675"] = {
["npcID"] = 184022,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 202824,
},
[347045] = {
["npcID"] = 176131,
},
[338853] = {
["npcID"] = 167527,
},
[193164] = {
["npcID"] = 96657,
},
[367522] = {
["npcID"] = 181059,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[371618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[357284] = {
["npcID"] = 180432,
},
[365477] = {
["npcID"] = 182649,
},
[392098] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[388001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[422813] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[392097] = {
["source"] = "Diluu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195431,
},
[336809] = {
["npcID"] = 162873,
},
[388002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[357286] = {
["npcID"] = 180392,
},
[359334] = {
["npcID"] = 181028,
},
["253517"] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[338857] = {
["npcID"] = 167527,
},
[422815] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[338858] = {
["npcID"] = 167526,
},
[336810] = {
["npcID"] = 160785,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[332610] = {
["npcID"] = 156333,
},
[384663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[345002] = {
["npcID"] = 168977,
},
[408483] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[334765] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[375719] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[404388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatching Egg",
["npcID"] = 202897,
},
[332717] = {
["npcID"] = 162614,
},
[326574] = {
["encounterName"] = "Stichflesh",
["encounterID"] = 2389,
["npcID"] = 162689,
},
[385959] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[209378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imacu'tya",
["npcID"] = 104275,
},
[324527] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[355577] = {
["npcID"] = 178171,
},
[361387] = {
["npcID"] = 182466,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[332335] = {
["npcID"] = 170488,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[392105] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[338863] = {
["npcID"] = 167526,
},
[57984] = {
["npcID"] = 95061,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[388340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[338864] = {
["npcID"] = 167526,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[392106] = {
["source"] = "Diluu",
["event"] = "SPELL_CAST_START",
["npcID"] = 195431,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[338865] = {
["npcID"] = 173191,
},
[358466] = {
["npcID"] = 178898,
},
[227809] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[410537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[338867] = {
["npcID"] = 167526,
},
[338868] = {
["npcID"] = 167526,
},
[330676] = {
["npcID"] = 168862,
},
[404396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[342963] = {
["npcID"] = 158259,
},
[345011] = {
["npcID"] = 173580,
},
[322486] = {
["npcID"] = 164929,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[398254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterpelt Defender",
["npcID"] = 200362,
},
[263103] = {
["npcID"] = 133345,
},
[330678] = {
["npcID"] = 168862,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[392111] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[451496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Queen",
["npcID"] = 220003,
},
[323682] = {
["npcID"] = 163501,
},
[428965] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Dark Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214012,
},
[392021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mantai",
["npcID"] = 195286,
},
[342911] = {
["npcID"] = 162123,
},
[396208] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197126,
},
[166380] = {
["npcID"] = 82597,
},
[408495] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[338872] = {
["npcID"] = 167526,
},
[420782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[198944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[400300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[355123] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[419052] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Future Self",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[395957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[329425] = {
["npcID"] = 157824,
},
[388335] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[355256] = {
["npcID"] = 178631,
},
[301629] = {
["npcID"] = 150297,
},
[262092] = {
["npcID"] = 130435,
},
[188907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[199146] = {
["source"] = "Gildedfur Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 96609,
},
[196787] = {
["npcID"] = 99956,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[329635] = {
["npcID"] = 158256,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[169730] = {
["npcID"] = 84877,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 189472,
},
[293827] = {
["npcID"] = 144294,
},
[174574] = {
["npcID"] = 87229,
},
[28099] = {
["source"] = "Tesla Coil",
["event"] = "SPELL_CAST_START",
["npcID"] = 16218,
},
[394167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[368034] = {
["npcID"] = 183722,
},
[353783] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176565,
["encounterID"] = 2440,
},
[408502] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[199674] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Bjorn",
["npcID"] = 97081,
},
[388332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[327130] = {
["npcID"] = 165872,
},
[334377] = {
["npcID"] = 171805,
},
[330565] = {
["npcID"] = 164506,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[385980] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[173552] = {
["npcID"] = 85768,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Pip",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[336834] = {
["npcID"] = 177295,
},
[347073] = {
["npcID"] = 177187,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[404400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[336601] = {
["npcID"] = 164476,
},
[91038] = {
["npcID"] = 48440,
},
[318406] = {
["encounterName"] = "Gorechop",
["encounterID"] = 2365,
["npcID"] = 162317,
},
[346980] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 176551,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[338856] = {
["npcID"] = 167527,
},
[342752] = {
["npcID"] = 173633,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[367554] = {
["npcID"] = 183416,
},
[336838] = {
["npcID"] = 164345,
},
[320069] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164451,
},
[373698] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[304075] = {
["npcID"] = 155812,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[334792] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[167119] = {
["npcID"] = 173114,
},
[330697] = {
["npcID"] = 170690,
},
[308172] = {
["npcID"] = 158177,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[241774] = {
["npcID"] = 114636,
},
[197251] = {
["encounterName"] = "Cordana Felsong",
["encounterID"] = 1818,
["npcID"] = 95888,
},
[343276] = {
["npcID"] = 173178,
},
[340739] = {
["npcID"] = 173855,
},
[328651] = {
["npcID"] = 167493,
},
[330699] = {
["npcID"] = 170932,
},
[351174] = {
["npcID"] = 88224,
},
[392132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muugurv",
["npcID"] = 194225,
},
[365835] = {
["npcID"] = 183407,
},
[294324] = {
["npcID"] = 144293,
},
[398276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[340057] = {
["npcID"] = 174336,
},
[320462] = {
["npcID"] = 163128,
},
[404409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[227823] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[367561] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 180773,
},
[320463] = {
["npcID"] = 177252,
},
[328940] = {
["npcID"] = 171383,
},
[357087] = {
["npcID"] = 178731,
},
[326607] = {
["npcID"] = 167612,
},
[197880] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[330703] = {
["npcID"] = 174210,
},
[41056] = {
["encounterName"] = "Anduin Wrynn",
["encounterID"] = 2546,
["npcID"] = 185005,
},
[330496] = {
["npcID"] = 155250,
},
[320465] = {
["npcID"] = 177252,
},
[412614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian King",
["npcID"] = 201029,
},
[329224] = {
["npcID"] = 168022,
},
[175607] = {
["npcID"] = 82733,
},
[324447] = {
["npcID"] = 177211,
},
[293729] = {
["npcID"] = 144295,
},
[394466] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[359374] = {
["npcID"] = 181028,
},
[351044] = {
["npcID"] = 177797,
},
[406752] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[315076] = {
["npcID"] = 173414,
},
[404415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damned Warrior",
["npcID"] = 202922,
},
[323496] = {
["npcID"] = 165872,
},
[414665] = {
["source"] = "Murloc Gillbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 205823,
},
[330423] = {
["npcID"] = 168572,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Crustshaper",
["npcID"] = 186638,
},
[347090] = {
["npcID"] = 178263,
},
[394464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piercer Gigra",
["npcID"] = 186511,
},
[392141] = {
["source"] = "Gamgus",
["event"] = "SPELL_CAST_START",
["npcID"] = 194240,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[347091] = {
["npcID"] = 164047,
},
[356139] = {
["npcID"] = 178043,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[345044] = {
["npcID"] = 170028,
},
[356817] = {
["npcID"] = 178578,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[392449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[330711] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[383953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[391825] = {
["npcID"] = 190900,
},
[347094] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[351459] = {
["npcID"] = 176572,
},
[278935] = {
["npcID"] = 170737,
},
[157769] = {
["encounterName"] = "Imperator Mar'gok",
["npcID"] = 78121,
["encounterID"] = 1705,
},
[347095] = {
["npcID"] = 178263,
},
[271329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[293854] = {
["npcID"] = 144294,
},
[304093] = {
["npcID"] = 155908,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[326619] = {
["npcID"] = 166873,
},
[328667] = {
["npcID"] = 163126,
},
[332239] = {
["npcID"] = 170418,
},
[357336] = {
["source"] = "Havac",
["event"] = "SPELL_CAST_START",
["npcID"] = 180355,
},
[420817] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[336859] = {
["npcID"] = 162873,
},
[412626] = {
["source"] = "General Zskorro",
["event"] = "SPELL_CAST_START",
["npcID"] = 203592,
},
[336383] = {
["npcID"] = 179755,
},
[340536] = {
["npcID"] = 173783,
},
[320478] = {
["npcID"] = 180379,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["encounterID"] = 2388,
["npcID"] = 163157,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[176768] = {
["npcID"] = 83790,
},
[320999] = {
["npcID"] = 164852,
},
[396246] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Primal Avatar",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198038,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 145185,
["encounterID"] = 2257,
},
[343005] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[412888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2085,
},
[191595] = {
["npcID"] = 96587,
},
[375770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozion",
["npcID"] = 193655,
},
[229567] = {
["npcID"] = 115407,
},
[396249] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Primal Avatar",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198038,
},
[398296] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[293861] = {
["npcID"] = 151613,
},
[355294] = {
["encounterName"] = "The Nine",
["npcID"] = 175726,
["encounterID"] = 2429,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Rider",
["npcID"] = 92792,
},
[396814] = {
["source"] = "Frostcaller Julh'ek",
["event"] = "SPELL_CAST_START",
["npcID"] = 186923,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["npcID"] = 17980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1927,
},
[196249] = {
["npcID"] = 99649,
},
[338914] = {
["npcID"] = 177628,
},
[357343] = {
["npcID"] = 180427,
},
[277481] = {
["npcID"] = 154011,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[404442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[404695] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[323538] = {
["encounterName"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["encounterID"] = 2403,
},
[188927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[396252] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Primal Avatar",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198038,
},
[398300] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[228278] = {
["npcID"] = 114633,
},
[336868] = {
["npcID"] = 184606,
},
[189697] = {
["npcID"] = 161785,
},
[406493] = {
["source"] = "Spinmarrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 203480,
},
[373729] = {
["npcID"] = 190128,
},
[451543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Queen",
["npcID"] = 220003,
},
[355299] = {
["npcID"] = 178661,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[392159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[333729] = {
["npcID"] = 168949,
},
[185857] = {
["npcID"] = 101026,
},
[156722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[386015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[356843] = {
["npcID"] = 179388,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[353782] = {
["npcID"] = 179136,
},
[351206] = {
["npcID"] = 176575,
},
["382712"] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[388310] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[338921] = {
["npcID"] = 163186,
},
[390115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[361447] = {
["npcID"] = 182425,
},
[418784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[327887] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[361448] = {
["npcID"] = 182368,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[164358] = {
["npcID"] = 87222,
},
[227578] = {
["encounterName"] = "Moroes",
["npcID"] = 114317,
["encounterID"] = 1961,
},
[283634] = {
["npcID"] = 144529,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[355306] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 179778,
["encounterID"] = 2425,
},
[357354] = {
["npcID"] = 180427,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Air Elemental",
["npcID"] = 200548,
},
[357123] = {
["npcID"] = 180779,
},
[262804] = {
["npcID"] = 133430,
},
[180327] = {
["npcID"] = 115009,
},
[269302] = {
["npcID"] = 134232,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[357591] = {
["npcID"] = 177984,
},
[357356] = {
["npcID"] = 178369,
},
[173514] = {
["npcID"] = 83389,
},
[386259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[340975] = {
["npcID"] = 163363,
},
[199172] = {
["npcID"] = 99728,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Squall",
["npcID"] = 194895,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[77069] = {
["encounterName"] = "Setesh",
["npcID"] = 39732,
["encounterID"] = 1079,
},
[341208] = {
["npcID"] = 166317,
},
[418791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[330969] = {
["npcID"] = 177437,
},
[332181] = {
["npcID"] = 170418,
},
[343025] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165805,
["encounterID"] = 2402,
},
[386028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[334051] = {
["npcID"] = 168942,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[383981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rising Tempest",
["npcID"] = 194575,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icegnaw Mantacorn",
["npcID"] = 187826,
},
[388305] = {
["source"] = "Glacial Giantess",
["event"] = "SPELL_CAST_START",
["npcID"] = 193075,
},
[225207] = {
["npcID"] = 101100,
},
[322550] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[295929] = {
["npcID"] = 154030,
},
[396269] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[328687] = {
["npcID"] = 166079,
},
[323748] = {
["npcID"] = 158642,
},
[345076] = {
["npcID"] = 170037,
},
[258672] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[345077] = {
["npcID"] = 170044,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 134419,
},
[418796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[88845] = {
["npcID"] = 47724,
},
[357364] = {
["npcID"] = 178294,
},
[397093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Kelp Elemental",
["npcID"] = 196809,
},
[295932] = {
["npcID"] = 151329,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[345079] = {
["npcID"] = 170031,
},
[322554] = {
["encounterName"] = "Executor Tarvold",
["encounterID"] = 2361,
["npcID"] = 162103,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[416751] = {
["source"] = "Vargul Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207805,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[404465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[183111] = {
["npcID"] = 165793,
},
[330965] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[393615] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[329808] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[211464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbound Enforcer",
["npcID"] = 104278,
},
[322557] = {
["npcID"] = 172991,
},
[396492] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[338939] = {
["npcID"] = 167055,
},
[357369] = {
["npcID"] = 178294,
},
[351226] = {
["npcID"] = 178071,
},
[201226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
},
[76560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[357370] = {
["npcID"] = 178294,
},
[337107] = {
["npcID"] = 168693,
},
[336893] = {
["npcID"] = 162873,
},
[330403] = {
["npcID"] = 168153,
},
[262540] = {
["npcID"] = 133593,
},
[20296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Technician",
["npcID"] = 211884,
},
[320512] = {
["npcID"] = 163892,
},
[412661] = {
["source"] = "Invoq",
["event"] = "SPELL_CAST_START",
["npcID"] = 203627,
},
[324608] = {
["encounterName"] = "Oryphrion",
["encounterID"] = 2358,
["npcID"] = 162060,
},
[327296] = {
["npcID"] = 156561,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[358225] = {
["npcID"] = 178732,
},
[324609] = {
["npcID"] = 166396,
},
[366701] = {
["npcID"] = 185268,
},
[361469] = {
["npcID"] = 185800,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[116] = {
["npcID"] = 188027,
},
[343040] = {
["npcID"] = 165869,
},
[295942] = {
["npcID"] = 151329,
},
[404473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[347130] = {
["npcID"] = 176173,
},
[200205] = {
["npcID"] = 101462,
},
[328707] = {
["npcID"] = 168992,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[373279] = {
["npcID"] = 189988,
},
[320517] = {
["npcID"] = 163894,
},
[377854] = {
["npcID"] = 191729,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[359629] = {
["npcID"] = 181359,
},
[334852] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169458,
["encounterID"] = 2418,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[3110] = {
["npcID"] = 416,
},
[227851] = {
["encounterName"] = "Moroes",
["npcID"] = 114312,
["encounterID"] = 1961,
},
[361676] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[279564] = {
["npcID"] = 167826,
},
[177599] = {
["npcID"] = 88224,
},
[319644] = {
["npcID"] = 161529,
},
[277517] = {
["npcID"] = 176170,
},
[347143] = {
["npcID"] = 176173,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[211470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[392192] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Blazing Fiend",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190688,
},
[363525] = {
["npcID"] = 183652,
},
[363524] = {
["npcID"] = 181572,
},
[365572] = {
["npcID"] = 184733,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[279567] = {
["npcID"] = 167826,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201383,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[323943] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[412868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karokta",
["npcID"] = 203625,
},
[175636] = {
["npcID"] = 81272,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201754,
},
[299432] = {
["npcID"] = 151301,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[330755] = {
["npcID"] = 169859,
},
[339789] = {
["npcID"] = 166046,
},
[338955] = {
["npcID"] = 163660,
},
[332509] = {
["npcID"] = 164555,
},
[325205] = {
["npcID"] = 166936,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[169494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[211473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Mistress",
["npcID"] = 104300,
},
[365215] = {
["npcID"] = 178563,
},
[364114] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[336910] = {
["npcID"] = 162872,
},
[390151] = {
["npcID"] = 189955,
},
[302098] = {
["encounterName"] = "King Gobbamak",
["npcID"] = 150190,
["encounterID"] = 2290,
},
[410629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[347149] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[336911] = {
["npcID"] = 178820,
},
[80195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Bruiser",
["npcID"] = 42692,
},
[369675] = {
["npcID"] = 184022,
},
[412678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[390979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[343055] = {
["npcID"] = 161355,
},
[347151] = {
["encounterName"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["npcID"] = 175546,
},
[363533] = {
["encounterName"] = "Rygelon",
["npcID"] = 182777,
["encounterID"] = 2549,
},
[357390] = {
["npcID"] = 178055,
},
[343056] = {
["npcID"] = 172025,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184580,
},
[351912] = {
["npcID"] = 178366,
},
[358747] = {
["npcID"] = 178824,
},
[343057] = {
["npcID"] = 161355,
},
[338959] = {
["npcID"] = 168697,
},
[338962] = {
["npcID"] = 166499,
},
[172567] = {
["npcID"] = 81368,
},
[343058] = {
["npcID"] = 161355,
},
[330953] = {
["npcID"] = 161531,
},
[200214] = {
["npcID"] = 101462,
},
[291865] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[386059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[211477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Legion Hound",
["npcID"] = 104277,
},
[343060] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[327995] = {
["npcID"] = 168574,
},
[164187] = {
["npcID"] = 81407,
},
[392207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gareed",
["npcID"] = 200722,
},
[325119] = {
["npcID"] = 157212,
},
[329904] = {
["npcID"] = 157118,
},
[357396] = {
["npcID"] = 180070,
},
[185493] = {
["npcID"] = 157016,
},
[320529] = {
["npcID"] = 168886,
},
[355349] = {
["npcID"] = 177646,
},
[200216] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[350894] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 175729,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201383,
},
[325360] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[365847] = {
["npcID"] = 183229,
},
[263202] = {
["npcID"] = 130661,
},
[295282] = {
["npcID"] = 154033,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[342496] = {
["npcID"] = 168961,
},
[340807] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[355352] = {
["encounterName"] = "Guardian of the First Ones",
["encounterID"] = 2436,
["npcID"] = 175731,
},
[13878] = {
["npcID"] = 45569,
},
[281621] = {
["npcID"] = 130488,
},
[332605] = {
["npcID"] = 170572,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2084,
},
[200218] = {
["npcID"] = 101462,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[347163] = {
["npcID"] = 170157,
},
[357402] = {
["npcID"] = 180070,
},
[79860] = {
["npcID"] = 155283,
},
[394262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[330782] = {
["npcID"] = 174386,
},
[302279] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150295,
["encounterID"] = 2291,
},
[343069] = {
["npcID"] = 178478,
},
[386072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[412693] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[365596] = {
["npcID"] = 180917,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[394264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[330784] = {
["npcID"] = 160495,
},
[390169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Raider",
["npcID"] = 187218,
},
[322756] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 165137,
},
[263209] = {
["npcID"] = 130437,
},
[396313] = {
["npcID"] = 189542,
},
[291878] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[343072] = {
["npcID"] = 172025,
},
[80279] = {
["npcID"] = 42691,
},
[330786] = {
["npcID"] = 169861,
},
[394261] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[392955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[353312] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[396315] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[351621] = {
["npcID"] = 176573,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Flamecaller",
["npcID"] = 198503,
},
[328740] = {
["npcID"] = 168992,
},
[396316] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[332836] = {
["npcID"] = 169927,
},
[334884] = {
["encounterName"] = "Huntsman Altimor",
["encounterID"] = 2418,
["npcID"] = 171577,
},
[386078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[298025] = {
["npcID"] = 173966,
},
[389515] = {
["source"] = "Shiverweb Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 185811,
},
[400413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[412700] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[359458] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176973,
["encounterID"] = 2422,
},
[359459] = {
["npcID"] = 184060,
},
[271406] = {
["source"] = "Maw of Shul-Nagruth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128610,
},
[227463] = {
["encounterName"] = "Moroes",
["npcID"] = 114320,
["encounterID"] = 1961,
},
["428293"] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[396774] = {
["npcID"] = 191105,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Tutor",
["npcID"] = 8548,
},
[396317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
["376171"] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[410655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[330793] = {
["npcID"] = 179911,
},
[361052] = {
["npcID"] = 180722,
},
[358342] = {
["npcID"] = 179851,
},
[336451] = {
["npcID"] = 163862,
},
[420895] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[398370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calcifying Crawler",
["npcID"] = 203342,
},
[329172] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[394275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[256099] = {
["npcID"] = 166032,
},
["272609"] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[369703] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[302274] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150295,
["encounterID"] = 2291,
},
[357418] = {
["npcID"] = 178443,
},
[343083] = {
["npcID"] = 166156,
},
[295985] = {
["npcID"] = 159755,
},
[76572] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["npcID"] = 39980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[406564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[342544] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168113,
},
[228526] = {
["npcID"] = 114783,
},
[404517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[394843] = {
["source"] = "Oshigol",
["event"] = "SPELL_CAST_START",
["npcID"] = 193235,
},
[343086] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[210537] = {
["npcID"] = 159106,
},
[396327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[241828] = {
["npcID"] = 114804,
},
[324657] = {
["npcID"] = 166551,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[349797] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[367656] = {
["npcID"] = 185037,
},
[353328] = {
["npcID"] = 178964,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scavenger",
["npcID"] = 191833,
},
[396330] = {
["source"] = "Nokhud Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185357,
},
[357423] = {
["npcID"] = 177972,
},
[326707] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[295991] = {
["npcID"] = 151331,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[300087] = {
["npcID"] = 150251,
},
[334899] = {
["npcID"] = 174802,
},
[336947] = {
["npcID"] = 162853,
},
[391666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honmor",
["npcID"] = 193704,
},
[398380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[162105] = {
["npcID"] = 88509,
},
[358047] = {
["npcID"] = 179931,
},
[322614] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[328016] = {
["npcID"] = 168578,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[32330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lykul Wasp",
["npcID"] = 17732,
},
[392239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 187960,
},
[386096] = {
["source"] = "Screechflight Cursewife",
["event"] = "SPELL_CAST_START",
["npcID"] = 184816,
},
[343224] = {
["npcID"] = 175792,
},
[357429] = {
["npcID"] = 178824,
},
[351285] = {
["npcID"] = 178006,
},
[394288] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[355381] = {
["npcID"] = 177646,
},
[382002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[327891] = {
["encounterName"] = "Mueh'zala",
["encounterID"] = 2396,
["npcID"] = 169506,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blaze Hound Matron",
["npcID"] = 204378,
},
[390194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[292029] = {
["npcID"] = 144568,
},
[320571] = {
["npcID"] = 163128,
},
[344404] = {
["npcID"] = 175012,
},
[324667] = {
["encounterName"] = "Globgrog",
["npcID"] = 164255,
["encounterID"] = 2382,
},
[330958] = {
["npcID"] = 177418,
},
[386101] = {
["source"] = "Screechflight Bellower",
["event"] = "SPELL_CAST_START",
["npcID"] = 187124,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[265407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banquet Steward",
["npcID"] = 131586,
},
[320576] = {
["npcID"] = 168886,
},
[90398] = {
["npcID"] = 48521,
},
[335030] = {
["npcID"] = 156779,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[163376] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[365632] = {
["npcID"] = 184742,
},
[355389] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176703,
["encounterID"] = 2422,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[394294] = {
["source"] = "Doventhal the Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186163,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1839,
},
[406581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[336958] = {
["npcID"] = 162853,
},
[339006] = {
["npcID"] = 173238,
},
[365627] = {
["npcID"] = 184954,
},
[400439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmslayer Angvardi",
["npcID"] = 201013,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 129359,
},
[330816] = {
["npcID"] = 169861,
},
[398392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfira Wanderling",
["npcID"] = 205808,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[193069] = {
["npcID"] = 96587,
},
[339008] = {
["npcID"] = 161704,
},
[422966] = {
["source"] = "Nolaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 208706,
},
[343104] = {
["npcID"] = 170208,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[396346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Kharad",
["npcID"] = 190932,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Krolusk",
["npcID"] = 202738,
},
[343105] = {
["npcID"] = 170208,
},
[339012] = {
["npcID"] = 183512,
},
[339010] = {
["npcID"] = 173238,
},
[339013] = {
["npcID"] = 183512,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[328772] = {
["npcID"] = 159460,
},
[396348] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
["257397"] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[400444] = {
["isChanneled"] = true,
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200681,
},
[328773] = {
["npcID"] = 159460,
},
[396349] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 197133,
},
[398397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaclaw Supplicant",
["npcID"] = 203933,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80875,
["encounterID"] = 1748,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[396350] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 197133,
},
["375351"] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[334918] = {
["npcID"] = 162047,
},
[422972] = {
["source"] = "Valunei",
["event"] = "SPELL_CAST_START",
["npcID"] = 208709,
},
[396351] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[398399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Acidclaw",
["npcID"] = 201093,
},
[358525] = {
["npcID"] = 178949,
},
[87762] = {
["npcID"] = 45930,
},
[429116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[398400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[392257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broadhoof Bull",
["npcID"] = 193385,
},
[377923] = {
["source"] = "Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186570,
},
[76579] = {
["npcID"] = 40270,
},
[365637] = {
["encounterName"] = "Vigilant Guardian",
["encounterID"] = 2512,
["npcID"] = 184759,
},
[343112] = {
["npcID"] = 166156,
},
[189200] = {
["npcID"] = 156244,
},
[338358] = {
["npcID"] = 165290,
},
[320861] = {
["npcID"] = 169753,
},
[391051] = {
["source"] = "Uurtus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193724,
},
[369050] = {
["npcID"] = 191224,
},
[396355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Guardian",
["npcID"] = 186787,
},
[398403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Earth",
["npcID"] = 200431,
},
[348313] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[336971] = {
["npcID"] = 168118,
},
[357550] = {
["npcID"] = 176940,
},
[382179] = {
["source"] = "Arcane Manipulator Tharohn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188171,
},
[328781] = {
["npcID"] = 159460,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[340627] = {
["npcID"] = 173798,
},
[260651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
[351307] = {
["npcID"] = 176572,
},
[332431] = {
["npcID"] = 170513,
},
[305378] = {
["npcID"] = 176170,
},
[328880] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[334926] = {
["npcID"] = 168878,
},
[296019] = {
["npcID"] = 151128,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["npcID"] = 209800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[377930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192692,
},
[396360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Scout",
["npcID"] = 189851,
},
[300102] = {
["npcID"] = 152009,
},
[400445] = {
["isChanneled"] = true,
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200681,
},
[357115] = {
["npcID"] = 177915,
},
[420925] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[390210] = {
["source"] = "Mudgatu",
["event"] = "SPELL_CAST_START",
["npcID"] = 197346,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[302166] = {
["npcID"] = 150190,
},
[291928] = {
["encounterName"] = "King Mechagon",
["npcID"] = 150396,
["encounterID"] = 2260,
},
[365646] = {
["npcID"] = 184651,
},
[257582] = {
["encounterName"] = "Azerokk",
["npcID"] = 129802,
["encounterID"] = 2106,
},
[320596] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[260654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkinus the Capsizer",
["npcID"] = 200907,
},
["412505"] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[420937] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2728,
},
[320600] = {
["npcID"] = 162965,
},
[425033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[328789] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169062,
},
[298073] = {
["npcID"] = 156241,
},
[365649] = {
["npcID"] = 184734,
},
[75068] = {
["npcID"] = 42043,
},
[263262] = {
["npcID"] = 134005,
},
[396366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tikarr Frostclaw",
["npcID"] = 201542,
},
[390223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Tarasek",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[328791] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[396367] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[90938] = {
["npcID"] = 48417,
},
[392272] = {
["source"] = "Thickmane Matriach",
["event"] = "SPELL_CAST_START",
["npcID"] = 194439,
},
[361556] = {
["npcID"] = 181687,
},
[394102] = {
["source"] = "Terillod the Devout",
["event"] = "SPELL_CAST_START",
["npcID"] = 193171,
},
[196194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[326745] = {
["npcID"] = 170016,
},
[300207] = {
["npcID"] = 150253,
},
[347223] = {
["npcID"] = 161846,
},
[240009] = {
["npcID"] = 158314,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 186634,
},
[202295] = {
["npcID"] = 116784,
},
[396370] = {
["source"] = "Frostcaller Julh'ek",
["event"] = "SPELL_CAST_START",
["npcID"] = 186923,
},
[326827] = {
["npcID"] = 162040,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[369750] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181244,
["encounterID"] = 2540,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["npcID"] = 80808,
["encounterID"] = 1748,
},
[369751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Djaradin",
["npcID"] = 188296,
},
[68799] = {
["npcID"] = 36272,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[355418] = {
["npcID"] = 178527,
},
[300129] = {
["npcID"] = 152009,
},
[293986] = {
["npcID"] = 151476,
},
[334942] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165067,
["encounterID"] = 2418,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[328799] = {
["npcID"] = 177420,
},
[392279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Dragon",
["npcID"] = 194089,
},
[369754] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[393550] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["encounterID"] = 1816,
["npcID"] = 95886,
},
[392280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[176696] = {
["npcID"] = 85752,
},
[390233] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[392281] = {
["source"] = "Crystalus",
["event"] = "SPELL_CAST_START",
["npcID"] = 193645,
},
[320610] = {
["npcID"] = 165909,
},
[326824] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167999,
},
[365661] = {
["npcID"] = 184651,
},
["397889"] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[396447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Proto-Dragon",
["npcID"] = 192717,
},
[343138] = {
["npcID"] = 173575,
},
[392283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 191413,
},
[263275] = {
["npcID"] = 134012,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
["396812"] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Dragon",
["npcID"] = 194091,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181546,
["encounterID"] = 2544,
},
[400542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 193460,
},
[336996] = {
["npcID"] = 162744,
},
[392285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto Dragon",
["npcID"] = 195177,
},
[320614] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[184381] = {
["npcID"] = 159190,
},
[291946] = {
["encounterName"] = "K.U.-J.0.",
["npcID"] = 144246,
["encounterID"] = 2258,
},
[384095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohuna Companion",
["npcID"] = 194254,
},
[394334] = {
["source"] = "Matriarch Avethyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 184847,
},
[357146] = {
["npcID"] = 177938,
},
[199805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[276754] = {
["npcID"] = 177982,
},
[48280] = {
["npcID"] = 153897,
},
[339046] = {
["npcID"] = 179755,
},
[326039] = {
["encounterName"] = "Grand Proctor Beryllia",
["encounterID"] = 2362,
["npcID"] = 162102,
},
[394337] = {
["source"] = "Morchok",
["event"] = "SPELL_CAST_START",
["npcID"] = 187306,
},
[394336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[355429] = {
["npcID"] = 178165,
},
[371812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hoary Icicle",
["npcID"] = 194797,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[386146] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[275568] = {
["npcID"] = 168442,
},
[425054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Magister",
["npcID"] = 208948,
},
[357479] = {
["npcID"] = 178653,
},
[396386] = {
["source"] = "Melter Igneous",
["event"] = "SPELL_CAST_START",
["npcID"] = 188226,
},
[275569] = {
["npcID"] = 157728,
},
[390932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trilvarus Loreweaver",
["npcID"] = 193196,
},
[349891] = {
["encounterName"] = "Remnant of Ner'zhul",
["encounterID"] = 2432,
["npcID"] = 177268,
},
[330919] = {
["npcID"] = 169912,
},
[275570] = {
["npcID"] = 166027,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[396388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[390245] = {
["source"] = "Embertooth Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 188725,
},
[260666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilded Priestess",
["npcID"] = 132126,
},
[316527] = {
["npcID"] = 183512,
},
[76588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
},
[423010] = {
["source"] = "Dionaessa",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[357535] = {
["npcID"] = 177979,
},
[425045] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[378012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lavacaller Primalist",
["npcID"] = 186823,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Scaleguard",
["npcID"] = 198871,
},
[400486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[340519] = {
["npcID"] = 161857,
},
[412775] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dinn",
["npcID"] = 203646,
},
[355438] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176563,
["encounterID"] = 2440,
},
[394344] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[396392] = {
["source"] = "Dueling Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 199377,
},
[365676] = {
["npcID"] = 184734,
},
[400488] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[361581] = {
["encounterName"] = "Prototype Pantheon",
["encounterID"] = 2544,
["npcID"] = 182822,
},
[265337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorestained Piglet",
["npcID"] = 135048,
},
[373869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scorchling",
["npcID"] = 190205,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[359538] = {
["npcID"] = 184060,
},
[365678] = {
["npcID"] = 184734,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[258622] = {
["encounterName"] = "Azerokk",
["npcID"] = 129227,
["encounterID"] = 2106,
},
[347249] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[406639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[164448] = {
["npcID"] = 80490,
},
[394348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mordigan Ironjaw",
["npcID"] = 187353,
},
[330868] = {
["npcID"] = 160495,
},
[182856] = {
["npcID"] = 161785,
},
[343155] = {
["npcID"] = 173446,
},
[209477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Wyrm",
["npcID"] = 105703,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[310392] = {
["npcID"] = 159190,
},
[320631] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 164702,
},
[353398] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 179010,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["npcID"] = 184140,
["encounterID"] = 2553,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[8873] = {
["npcID"] = 2726,
},
[369818] = {
["npcID"] = 184020,
},
[398447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[392304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zagdech",
["npcID"] = 194601,
},
[271487] = {
["source"] = "Tentacle of Shul-Nagruth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128609,
},
[396400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
["388392"] = {
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_START",
["npcID"] = 196044,
},
[343159] = {
["npcID"] = 173444,
},
[377971] = {
["source"] = "Spawning Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194342,
},
[334971] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165067,
["encounterID"] = 2418,
},
[283775] = {
["npcID"] = 150744,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184582,
},
[388211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shale Giant",
["npcID"] = 188122,
},
[365686] = {
["npcID"] = 184533,
},
[294015] = {
["npcID"] = 151476,
},
[394355] = {
["source"] = "Frigidpelt Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 193063,
},
[265347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadwing Raven",
["npcID"] = 135049,
},
[300159] = {
["npcID"] = 150276,
},
[351353] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177891,
},
[320637] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Apprentice",
["npcID"] = 192340,
},
[365745] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 184792,
},
[86830] = {
["npcID"] = 43391,
},
[377608] = {
["npcID"] = 190938,
},
[355450] = {
["npcID"] = 178528,
},
[406644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[400492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[328117] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[359547] = {
["npcID"] = 183931,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[294064] = {
["npcID"] = 151658,
},
[377962] = {
["source"] = "Frostfoot Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 192914,
},
[375919] = {
["npcID"] = 182394,
},
[265352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Toad",
["npcID"] = 135052,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[291973] = {
["encounterName"] = "K.U.-J.0.",
["npcID"] = 144246,
["encounterID"] = 2258,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[369788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Djaradin",
["npcID"] = 195032,
},
[359587] = {
["npcID"] = 181352,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184582,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
["370764"] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[328857] = {
["encounterName"] = "Shriekwing",
["npcID"] = 164406,
["encounterID"] = 2398,
},
[355479] = {
["npcID"] = 179821,
},
[320644] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[355456] = {
["npcID"] = 178958,
},
[300171] = {
["npcID"] = 150276,
},
[74551] = {
["npcID"] = 39870,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[392317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zagdech",
["npcID"] = 194601,
},
[209485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manifestation",
["npcID"] = 105704,
},
[341127] = {
["npcID"] = 158259,
},
[406652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[392318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate Zorig",
["npcID"] = 193985,
},
[209495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[392337] = {
["npcID"] = 186853,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[394367] = {
["source"] = "Morchok",
["event"] = "SPELL_CAST_START",
["npcID"] = 187306,
},
[396415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[357508] = {
["npcID"] = 180495,
},
[300188] = {
["npcID"] = 150253,
},
[396432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carcaxas",
["npcID"] = 202836,
},
[328856] = {
["npcID"] = 165561,
},
[398463] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[332937] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 170710,
},
[227917] = {
["npcID"] = 114526,
},
[326794] = {
["npcID"] = 167876,
},
[365717] = {
["npcID"] = 183432,
},
[334967] = {
["npcID"] = 171343,
},
[369811] = {
["npcID"] = 184020,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[258634] = {
["npcID"] = 154129,
},
[355464] = {
["npcID"] = 178165,
},
[357512] = {
["npcID"] = 180495,
},
[334988] = {
["npcID"] = 171596,
},
[353417] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[322711] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["npcID"] = 165408,
["encounterID"] = 2401,
},
[341131] = {
["npcID"] = 174194,
},
[384134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[300177] = {
["npcID"] = 150276,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[320655] = {
["encounterName"] = "Blightbone",
["encounterID"] = 2387,
["npcID"] = 162691,
},
[398471] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[341133] = {
["npcID"] = 174090,
},
[375945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleecepelt Argali",
["npcID"] = 187975,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[396423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[357516] = {
["npcID"] = 177137,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[320657] = {
["npcID"] = 171562,
},
[412806] = {
["source"] = "Risen Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205804,
},
[365708] = {
["npcID"] = 183432,
},
[201298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[176727] = {
["npcID"] = 83812,
},
[388225] = {
["source"] = "Frostfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 192030,
},
[265372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[355473] = {
["npcID"] = 179821,
},
[345232] = {
["npcID"] = 168693,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[345233] = {
["npcID"] = 168693,
},
[369806] = {
["npcID"] = 184020,
},
[265371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[353418] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[392332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zumakh",
["npcID"] = 194624,
},
[345207] = {
["npcID"] = 170031,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[398483] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[394381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Root of Decay",
["npcID"] = 185326,
},
[347283] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[265368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[365707] = {
["npcID"] = 183429,
},
[345236] = {
["npcID"] = 170157,
},
[396430] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[384092] = {
["source"] = "Timetender Athekk",
["event"] = "SPELL_CAST_START",
["npcID"] = 193042,
},
[298160] = {
["npcID"] = 153451,
},
[345237] = {
["npcID"] = 165124,
},
[345239] = {
["npcID"] = 165124,
},
[365715] = {
["npcID"] = 184530,
},
[392336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[345238] = {
["npcID"] = 165124,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[341143] = {
["npcID"] = 164476,
},
[167516] = {
["npcID"] = 86809,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[227925] = {
["npcID"] = 114526,
},
[355477] = {
["npcID"] = 179842,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[17618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Dark Summoner",
["npcID"] = 11582,
},
[341145] = {
["npcID"] = 174090,
},
[38557] = {
["npcID"] = 23589,
},
[330884] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 168244,
},
[273570] = {
["source"] = "Ringtail Bandicoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 139166,
},
[341146] = {
["npcID"] = 174194,
},
[410743] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignited Plume",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 205167,
},
[300155] = {
["npcID"] = 164929,
},
[38556] = {
["npcID"] = 45015,
},
[382102] = {
["source"] = "Rebel Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195063,
},
[392341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[376356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scout Watu",
["npcID"] = 190025,
},
[347291] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[330875] = {
["npcID"] = 169893,
},
[408767] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[398500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conflagrated Rock Cobra",
["npcID"] = 203328,
},
[265346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadwing Raven",
["npcID"] = 135049,
},
[425107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 211241,
},
[394391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhuzast the Tempest",
["npcID"] = 197409,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[365723] = {
["npcID"] = 183438,
},
[367771] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 185607,
["encounterID"] = 2546,
},
[394392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[371824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 191658,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["npcID"] = 81305,
["encounterID"] = 1749,
},
[412823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 198968,
},
[329917] = {
["npcID"] = 168578,
},
[253526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[410776] = {
["source"] = "Infinite Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204658,
},
[343149] = {
["npcID"] = 173575,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[328180] = {
["npcID"] = 168627,
},
[294491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeling",
["npcID"] = 186479,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[406686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
},
[369823] = {
["npcID"] = 184023,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[392480] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[392349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[328869] = {
["npcID"] = 157122,
},
[404636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[334929] = {
["encounterName"] = "Stone Legion Generals",
["encounterID"] = 2417,
["npcID"] = 168112,
},
[335013] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[353443] = {
["npcID"] = 179080,
},
[347224] = {
["npcID"] = 161846,
},
[398494] = {
["source"] = "Ember Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 204381,
},
[425115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fruitface",
["npcID"] = 209913,
},
[385824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[324776] = {
["npcID"] = 166275,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[263344] = {
["npcID"] = 157094,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[390305] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[76584] = {
["npcID"] = 39990,
},
[369828] = {
["npcID"] = 184023,
},
[363712] = {
["npcID"] = 185434,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartzite Sporebat",
["npcID"] = 201306,
},
[341084] = {
["npcID"] = 169889,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["encounterID"] = 1818,
["npcID"] = 104293,
},
[363686] = {
["npcID"] = 179043,
},
[392273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ergburk",
["npcID"] = 194409,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[229151] = {
["encounterName"] = "Viz'aduum the Watcher",
["npcID"] = 114790,
["encounterID"] = 2017,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[335019] = {
["npcID"] = 156434,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[341163] = {
["npcID"] = 171396,
},
[326829] = {
["npcID"] = 167876,
},
[427169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[412835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nozdormu",
["npcID"] = 198971,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[326830] = {
["npcID"] = 163316,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["encounterID"] = 1043,
},
[396454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Insatiable Hornswog",
["npcID"] = 185715,
},
[330500] = {
["npcID"] = 155250,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["encounterID"] = 2555,
["npcID"] = 184581,
},
[322736] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[342675] = {
["npcID"] = 170882,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 181224,
["encounterID"] = 2540,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[398504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Viper",
["npcID"] = 205814,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[421059] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[339120] = {
["npcID"] = 173240,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[331574] = {
["npcID"] = 170217,
},
[412737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Golem",
["npcID"] = 202075,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[357551] = {
["npcID"] = 180499,
},
[330822] = {
["npcID"] = 169859,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[339122] = {
["npcID"] = 167525,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181549,
["encounterID"] = 2544,
},
[326836] = {
["npcID"] = 162039,
},
[172649] = {
["npcID"] = 81432,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felguard Annihilator",
["npcID"] = 188067,
},
[365744] = {
["npcID"] = 184651,
},
[326837] = {
["npcID"] = 162040,
},
[328885] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 168973,
["encounterID"] = 2402,
},
[357439] = {
["npcID"] = 178653,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormshield",
["npcID"] = 194896,
},
[322743] = {
["npcID"] = 155824,
},
[308409] = {
["npcID"] = 154330,
},
[408749] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[320696] = {
["npcID"] = 163121,
},
[404654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[199210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[351413] = {
["encounterName"] = "The Eye of the Jailer",
["npcID"] = 175725,
["encounterID"] = 2433,
},
[394416] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198311,
},
[322745] = {
["npcID"] = 170853,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[392369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[324666] = {
["npcID"] = 166551,
},
[357871] = {
["npcID"] = 177903,
},
[341176] = {
["npcID"] = 166317,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Slyvern",
["npcID"] = 191051,
},
[326712] = {
["npcID"] = 167956,
},
[80158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Warbringer",
["npcID"] = 42696,
},
[390323] = {
["npcID"] = 189933,
},
[367798] = {
["npcID"] = 181249,
},
[228269] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114350,
["encounterID"] = 1965,
},
["265372"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[298212] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[330940] = {
["encounterName"] = "Nalthor the Rimebinder",
["npcID"] = 168244,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[197250] = {
["encounterName"] = "Cordana Felsong",
["encounterID"] = 1818,
["npcID"] = 95888,
},
[84799] = {
["npcID"] = 45379,
},
[406708] = {
["source"] = "Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201094,
},
[315802] = {
["npcID"] = 150959,
},
[292910] = {
["npcID"] = 175834,
},
[362184] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
["371875"] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[326847] = {
["npcID"] = 167876,
},
[394423] = {
["source"] = "Rohzor Forgesmash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187598,
},
[330037] = {
["npcID"] = 168361,
},
[203371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[326848] = {
["npcID"] = 163992,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[357938] = {
["npcID"] = 177336,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skaara",
["npcID"] = 192949,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164567,
},
[427189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[229558] = {
["npcID"] = 115402,
},
[387508] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[400569] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[369853] = {
["npcID"] = 184019,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[326851] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 167406,
},
[394427] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eranog",
["npcID"] = 198503,
},
[396475] = {
["source"] = "Mellg the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196381,
},
[203373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Observant Inquisitor",
["npcID"] = 107449,
},
[367807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Escapee",
["npcID"] = 185626,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[396476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[317792] = {
["npcID"] = 163366,
},
[392381] = {
["npcID"] = 181363,
},
[394429] = {
["source"] = "Tarolekk, the Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 197650,
},
[366287] = {
["npcID"] = 185032,
},
[382143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Makko",
["npcID"] = 191536,
},
[253544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[366406] = {
["npcID"] = 184908,
},
[322759] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[340760] = {
["npcID"] = 166140,
},
[257640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[285388] = {
["encounterName"] = "Tussle Tonks",
["npcID"] = 145185,
["encounterID"] = 2257,
},
[199361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[369674] = {
["npcID"] = 184022,
},
[29928] = {
["npcID"] = 114625,
},
[115006] = {
["npcID"] = 58943,
},
[355525] = {
["encounterName"] = "Painsmith Raznal",
["encounterID"] = 2430,
["npcID"] = 176523,
},
[384993] = {
["source"] = "Owl",
["event"] = "SPELL_CAST_START",
["npcID"] = 193387,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2635,
},
[6358] = {
["npcID"] = 1863,
},
[347153] = {
["npcID"] = 171849,
},
[381438] = {
["source"] = "Tormented Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 188696,
},
[324368] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 163077,
},
[333002] = {
["encounterName"] = "Sun King's Salvation",
["npcID"] = 165763,
["encounterID"] = 2402,
},
[259597] = {
["npcID"] = 158110,
},
[320716] = {
["npcID"] = 177210,
},
[42382] = {
["npcID"] = 17299,
},
[334534] = {
["npcID"] = 171805,
},
[346506] = {
["npcID"] = 178193,
},
[394436] = {
["source"] = "Shas'ith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189822,
},
[336666] = {
["npcID"] = 166012,
},
[365768] = {
["encounterName"] = "Halondrus the Reclaimer",
["encounterID"] = 2529,
["npcID"] = 181012,
},
[373513] = {
["npcID"] = 190128,
},
[214692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gerenth the Vile",
["npcID"] = 107435,
},
[171784] = {
["npcID"] = 85768,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[253548] = {
["isChanneled"] = true,
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122972,
},
[369865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonhunter Igordan",
["npcID"] = 191611,
},
[322767] = {
["npcID"] = 164921,
},
[423107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hymdall",
["npcID"] = 206644,
},
[375812] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Convoked Tremor",
["npcID"] = 187083,
},
[394439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[388296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Burster",
["npcID"] = 191663,
},
[412669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[349805] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 176973,
["encounterID"] = 2422,
},
[394440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eaglemaster Niraak",
["npcID"] = 192020,
},
[404679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[341199] = {
["npcID"] = 174092,
},
[83780] = {
["npcID"] = 44897,
},
[358353] = {
["npcID"] = 179760,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[341200] = {
["npcID"] = 174100,
},
[392394] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[207642] = {
["npcID"] = 175922,
},
[269837] = {
["npcID"] = 120843,
},
[431302] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Darkflame Shade",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 212422,
},
[392395] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[394443] = {
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 190579,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["npcID"] = 150190,
["encounterID"] = 2291,
},
[301667] = {
["npcID"] = 150292,
},
[335059] = {
["npcID"] = 171696,
},
[271579] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 130661,
["encounterID"] = 2105,
},
[388301] = {
["source"] = "Shadeslash Trakken",
["event"] = "SPELL_CAST_START",
["npcID"] = 193271,
},
[354801] = {
["npcID"] = 179580,
},
[147650] = {
["npcID"] = 172071,
},
[336888] = {
["npcID"] = 168233,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[357586] = {
["npcID"] = 178653,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[406733] = {
["source"] = "Memory of a Traitorous Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 200826,
},
[294107] = {
["npcID"] = 150254,
},
[337110] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166969,
},
[355540] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[322000] = {
["npcID"] = 166357,
},
[209413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Construct",
["npcID"] = 104270,
},
[320729] = {
["encounterName"] = "Xav the Unfallen",
["encounterID"] = 2366,
["npcID"] = 162329,
},
[330968] = {
["npcID"] = 174842,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[285148] = {
["npcID"] = 150734,
},
[346766] = {
["encounterName"] = "Hylbrande",
["encounterID"] = 2426,
["npcID"] = 175663,
},
[355542] = {
["npcID"] = 177243,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[325359] = {
["npcID"] = 170317,
},
[34984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fen Ray",
["npcID"] = 17731,
},
[330970] = {
["npcID"] = 177437,
},
[406737] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[209410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[258674] = {
["npcID"] = 130436,
},
[322780] = {
["npcID"] = 156560,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 181551,
["encounterID"] = 2544,
},
[367428] = {
["npcID"] = 184962,
},
[324589] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 166524,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[256627] = {
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[287970] = {
["npcID"] = 144564,
},
[265445] = {
["npcID"] = 161527,
},
[297966] = {
["npcID"] = 153382,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[167683] = {
["npcID"] = 83687,
},
[412884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ysera",
["npcID"] = 198970,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[294115] = {
["npcID"] = 151684,
},
[410837] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[396503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[344411] = {
["npcID"] = 154330,
},
[356133] = {
["npcID"] = 180015,
},
[387629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[82760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[390361] = {
["npcID"] = 190070,
},
[209404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Arcanist",
["npcID"] = 104247,
},
[319711] = {
["npcID"] = 166872,
},
[356853] = {
["npcID"] = 178577,
},
[336048] = {
["npcID"] = 167704,
},
[228528] = {
["npcID"] = 114783,
},
[79858] = {
["npcID"] = 155283,
},
[330978] = {
["encounterName"] = "The Council of Blood",
["encounterID"] = 2412,
["npcID"] = 166971,
},
[362841] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["npcID"] = 183663,
},
[392411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tsokorg",
["npcID"] = 195417,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[412889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[285228] = {
["npcID"] = 150734,
},
[365299] = {
["npcID"] = 184539,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calia Menethil",
["npcID"] = 214074,
},
[330716] = {
["npcID"] = 167998,
},
[323552] = {
["encounterName"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["encounterID"] = 2403,
},
[166397] = {
["npcID"] = 82590,
},
[381701] = {
["npcID"] = 190933,
},
[332313] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 164266,
["encounterID"] = 2385,
},
[390861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angen",
["npcID"] = 193341,
},
[392414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tsokorg",
["npcID"] = 195417,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["npcID"] = 86684,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[228852] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[423131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 210077,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[394463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightfur",
["npcID"] = 193178,
},
[15587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Acolyte",
["npcID"] = 16594,
},
[218755] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["npcID"] = 104918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 180773,
["encounterID"] = 2512,
},
[340759] = {
["npcID"] = 169889,
},
[334797] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169457,
["encounterID"] = 2418,
},
[225917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rook Spiderling",
["npcID"] = 98677,
},
[412895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[227965] = {
["npcID"] = 114544,
},
[253562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[323825] = {
["encounterName"] = "Mordretha",
["encounterID"] = 2404,
["npcID"] = 165994,
},
[365798] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["npcID"] = 183439,
["encounterID"] = 2540,
},
[304831] = {
["npcID"] = 185100,
},
[362333] = {
["npcID"] = 182374,
},
[354900] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176532,
},
[227966] = {
["npcID"] = 114544,
},
[397112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[337131] = {
["npcID"] = 162872,
},
[308026] = {
["npcID"] = 157634,
},
[206685] = {
["npcID"] = 104493,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 184522,
["encounterID"] = 2512,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[393859] = {
["npcID"] = 187689,
},
[349419] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[228991] = {
["encounterName"] = "Shade of Medivh",
["npcID"] = 114675,
["encounterID"] = 1965,
},
[394470] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[412900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zakajz",
["npcID"] = 198953,
},
[331274] = {
["npcID"] = 167923,
},
[408805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incorporeal Being",
["npcID"] = 204560,
},
[83877] = {
["npcID"] = 48139,
},
[271310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[367851] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[317894] = {
["npcID"] = 170042,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rumbling Proto-Dragon",
["npcID"] = 187212,
},
[346604] = {
["npcID"] = 175792,
},
[392425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[270481] = {
["npcID"] = 135002,
},
[322802] = {
["npcID"] = 161971,
},
[406760] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[416999] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[369901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 186965,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[227817] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[355929] = {
["npcID"] = 177803,
},
[419048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[412905] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[374020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[85072] = {
["npcID"] = 533,
},
[395240] = {
["source"] = "Enkine the Voracious",
["event"] = "SPELL_CAST_START",
["npcID"] = 193134,
},
[82765] = {
["npcID"] = 44982,
},
[356897] = {
["npcID"] = 177294,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[347000] = {
["npcID"] = 172639,
},
[347992] = {
["encounterName"] = "Zo'phex the Sentinel",
["npcID"] = 175616,
["encounterID"] = 2425,
},
[304063] = {
["npcID"] = 155909,
},
[174422] = {
["npcID"] = 86330,
},
[355571] = {
["encounterName"] = "Painsmith Raznal",
["encounterID"] = 2430,
["npcID"] = 176523,
},
[357619] = {
["npcID"] = 177422,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[394479] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[227638] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114262,
["encounterID"] = 1960,
},
[357620] = {
["npcID"] = 177422,
},
[359668] = {
["npcID"] = 180051,
},
[156301] = {
["npcID"] = 80935,
},
[299475] = {
["npcID"] = 150254,
},
[385862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Hopper",
["npcID"] = 195218,
},
[343287] = {
["npcID"] = 173633,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[414959] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[396206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Apprentice",
["npcID"] = 200948,
},
[296190] = {
["npcID"] = 152517,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["npcID"] = 184125,
},
[404394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[392435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molkeej",
["npcID"] = 195430,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[325361] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 166644,
},
[61353] = {
["npcID"] = 96779,
},
[345004] = {
["npcID"] = 175347,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[406771] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[326909] = {
["npcID"] = 163992,
},
[394485] = {
["source"] = "Hypoxicron",
["event"] = "SPELL_CAST_START",
["npcID"] = 186334,
},
[359337] = {
["npcID"] = 181967,
},
[357626] = {
["npcID"] = 177443,
},
[417011] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[377765] = {
["npcID"] = 189205,
},
[385955] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 82721,
["encounterID"] = 1732,
},
[338855] = {
["npcID"] = 167527,
},
[394487] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[388000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[334757] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 169457,
["encounterID"] = 2418,
},
[400631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[363772] = {
["encounterName"] = "The Jailer",
["npcID"] = 180990,
["encounterID"] = 2537,
},
[20824] = {
["encounterName"] = "The Black Stalker",
["source"] = "Spore Strider",
["npcID"] = 22299,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[406426] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[396189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[322818] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[392442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kholdeg",
["npcID"] = 194608,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[336804] = {
["npcID"] = 177295,
},
[357631] = {
["npcID"] = 177982,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Ritualist",
["npcID"] = 199971,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[355584] = {
["npcID"] = 178171,
},
[406778] = {
["source"] = "Wild Blaze Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 202279,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[406415] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[157331] = {
["npcID"] = 77942,
},
[300296] = {
["npcID"] = 150143,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[394493] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[365825] = {
["npcID"] = 182649,
},
[357217] = {
["npcID"] = 180415,
},
[369921] = {
["source"] = "Blazing Firesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 195448,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 202789,
},
[227339] = {
["encounterName"] = "Attumen the Huntsman",
["npcID"] = 114264,
["encounterID"] = 1960,
},
[29120] = {
["npcID"] = 18147,
},
[250505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Gryphon",
["npcID"] = 193154,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[167385] = {
["npcID"] = 174566,
},
[343302] = {
["npcID"] = 173446,
},
[406407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[341854] = {
["npcID"] = 173832,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[50092] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Elite",
["npcID"] = 27588,
},
[316779] = {
["npcID"] = 178043,
},
[318243] = {
["npcID"] = 166357,
},
[227981] = {
["npcID"] = 114541,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[369925] = {
["source"] = "Transformed Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 197225,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[357639] = {
["npcID"] = 177422,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[330347] = {
["npcID"] = 157583,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[359688] = {
["npcID"] = 181967,
},
[365426] = {
["npcID"] = 184413,
},
[404739] = {
["event"] = "SPELL_CAST_START",
["source"] = "First Mate Ovdah",
["npcID"] = 201182,
},
[357641] = {
["npcID"] = 177982,
},
[227789] = {
["encounterName"] = "Maiden of Virtue",
["npcID"] = 113971,
["encounterID"] = 1954,
},
[373201] = {
["source"] = "Windyfin Skybasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187431,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[396159] = {
["source"] = "Lava Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 186620,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[378120] = {
["source"] = "Unstable Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 192799,
},
[347404] = {
["npcID"] = 155830,
},
[341796] = {
["npcID"] = 174162,
},
[392455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uurhilt",
["npcID"] = 194760,
},
[328365] = {
["npcID"] = 167493,
},
[418680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexemia",
["npcID"] = 206967,
},
[81236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Hatchling",
["npcID"] = 10678,
},
[335119] = {
["encounterName"] = "Huntsman Altimor",
["npcID"] = 165066,
["encounterID"] = 2418,
},
[322171] = {
["npcID"] = 172596,
},
[396552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["npcID"] = 84215,
["encounterID"] = 1754,
},
[294165] = {
["npcID"] = 150958,
},
[347623] = {
["encounterName"] = "So'azmi",
["npcID"] = 175806,
["encounterID"] = 2437,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[406792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Magmaclaw",
["npcID"] = 202288,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[320787] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164556,
},
[331026] = {
["npcID"] = 160185,
},
[267546] = {
["npcID"] = 144231,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["npcID"] = 162693,
},
[391081] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[377421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Striker",
["npcID"] = 192938,
},
[253583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410890] = {
["source"] = "Infinite Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205259,
},
[371983] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[37551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[338688] = {
["encounterName"] = "Sire Denathrius",
["npcID"] = 173164,
},
[338803] = {
["npcID"] = 173202,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[227987] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114328,
["encounterID"] = 1957,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1948,
},
[205462] = {
["npcID"] = 166137,
},
[362494] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[338604] = {
["npcID"] = 173066,
},
[294171] = {
["npcID"] = 150959,
},
[322232] = {
["encounterName"] = "Stradama Margrave",
["npcID"] = 164267,
["encounterID"] = 2386,
},
[396559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[406798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sawscale Viper",
["npcID"] = 208691,
},
[330597] = {
["npcID"] = 177418,
},
[394512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[339223] = {
["npcID"] = 158259,
},
[232084] = {
["npcID"] = 116549,
},
[332650] = {
["npcID"] = 161857,
},
[403309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expulsion Drone",
["npcID"] = 202592,
},
[158997] = {
["npcID"] = 81362,
},
[290435] = {
["npcID"] = 144536,
},
[343320] = {
["npcID"] = 173444,
},
[328986] = {
["npcID"] = 169159,
},
[173384] = {
["npcID"] = 83392,
},
[256658] = {
["npcID"] = 166029,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[337178] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 170838,
},
[339226] = {
["npcID"] = 158259,
},
[406802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Flayer",
["npcID"] = 202307,
},
[343322] = {
["npcID"] = 168337,
},
[297834] = {
["encounterName"] = "Gunker",
["npcID"] = 150222,
["encounterID"] = 2292,
},
[395943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Snail",
["npcID"] = 193943,
},
[75096] = {
["npcID"] = 40270,
},
[395214] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[271652] = {
["npcID"] = 176434,
},
[404756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Flamespinner",
["npcID"] = 202245,
},
[390422] = {
["npcID"] = 189933,
},
[406357] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[178060] = {
["npcID"] = 80491,
},
[404757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Manaweaver",
["npcID"] = 202246,
},
[365850] = {
["npcID"] = 181652,
},
[343325] = {
["npcID"] = 173445,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonhunter Igordan",
["npcID"] = 191611,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[392472] = {
["source"] = "Galnmor",
["event"] = "SPELL_CAST_START",
["npcID"] = 193853,
},
[172703] = {
["npcID"] = 81432,
},
[355613] = {
["npcID"] = 178958,
},
[176502] = {
["npcID"] = 83689,
},
[277041] = {
["npcID"] = 154020,
},
[326230] = {
["npcID"] = 165829,
},
[335528] = {
["npcID"] = 159755,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[392474] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[11986] = {
["npcID"] = 112002,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[192158] = {
["encounterName"] = "Hyrja",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[320804] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164561,
},
[327262] = {
["npcID"] = 167524,
},
[365036] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 184126,
["encounterID"] = 2539,
},
[432967] = {
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[320805] = {
["npcID"] = 156561,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[316244] = {
["npcID"] = 162056,
},
[75610] = {
["npcID"] = 39679,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthshatter Primalist",
["npcID"] = 187173,
},
[76634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Sentry",
["npcID"] = 40925,
},
[87779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
["87618"] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[427290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 209047,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186431,
},
[292139] = {
["npcID"] = 150754,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[394527] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Primal Avatar",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198038,
},
[330573] = {
["npcID"] = 155251,
},
[323166] = {
["encounterName"] = "Hakkar, the Soulflayer",
["encounterID"] = 2395,
["npcID"] = 164558,
},
[335143] = {
["npcID"] = 165222,
},
[115030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Brawler",
["npcID"] = 192630,
},
[331048] = {
["npcID"] = 170932,
},
[324425] = {
["npcID"] = 177211,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[400078] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[357670] = {
["npcID"] = 178859,
},
[384291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[394530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[404769] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Empty Recollection",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202969,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79548,
["encounterID"] = 1732,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["npcID"] = 194647,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
["372735"] = {
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187969,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[378150] = {
["npcID"] = 191376,
},
[290097] = {
["npcID"] = 144570,
},
[324909] = {
["npcID"] = 164926,
},
[383496] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
["226406"] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102287,
},
[404772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[227999] = {
["npcID"] = 114542,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[325552] = {
["encounterName"] = "Domina Venomblade",
["npcID"] = 164266,
["encounterID"] = 2385,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[228280] = {
["npcID"] = 114629,
},
[294195] = {
["npcID"] = 144298,
},
[348953] = {
["encounterName"] = "Kel'Thuzad",
["npcID"] = 175559,
["encounterID"] = 2422,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
["369061"] = {
["encounterName"] = "Emberon",
["encounterID"] = 2558,
["npcID"] = 184422,
},
[394536] = {
["source"] = "Chief Dead Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 195337,
},
[349954] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176555,
["encounterID"] = 2441,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[382303] = {
["encounterName"] = "Bromach",
["encounterID"] = 2556,
["npcID"] = 184018,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[400165] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[324914] = {
["npcID"] = 166299,
},
[355118] = {
["npcID"] = 178133,
},
[422693] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[343722] = {
["npcID"] = 162965,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[227736] = {
["encounterName"] = "Moroes",
["npcID"] = 114312,
["encounterID"] = 1961,
},
[327240] = {
["npcID"] = 165911,
},
[365871] = {
["npcID"] = 184604,
},
[318773] = {
["npcID"] = 166347,
},
[230050] = {
["npcID"] = 115765,
},
[404779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[373395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Defender",
["npcID"] = 199717,
},
[320822] = {
["npcID"] = 165222,
},
[290106] = {
["npcID"] = 144570,
},
[15790] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmaster Gandling",
["npcID"] = 1853,
},
[404178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[320823] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164555,
},
[372529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadepaw Bruiser",
["npcID"] = 183343,
},
[257397] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[388743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Bakar",
["npcID"] = 188510,
},
[353588] = {
["npcID"] = 179133,
},
[320293] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[357684] = {
["npcID"] = 178855,
},
[401382] = {
["source"] = "Past Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[320825] = {
["encounterName"] = "The Manastorms",
["encounterID"] = 2394,
["npcID"] = 164568,
},
[355637] = {
["npcID"] = 179840,
},
[9532] = {
["npcID"] = 112002,
},
[359733] = {
["npcID"] = 181349,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[388402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Predatory Thresher",
["npcID"] = 198779,
},
[397048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbreath Arachnid",
["npcID"] = 199333,
},
[359734] = {
["npcID"] = 185755,
},
[198892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 97068,
},
[411002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloud Prince",
["npcID"] = 45917,
},
[324923] = {
["npcID"] = 164926,
},
[366379] = {
["encounterName"] = "Rygelon",
["encounterID"] = 2549,
["npcID"] = 182777,
},
[397907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baalgar the Watchful",
["npcID"] = 104274,
},
["372311"] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
["412129"] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[373526] = {
["source"] = "Brightail Monarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 191458,
},
[355641] = {
["npcID"] = 179841,
},
[349498] = {
["encounterName"] = "The Grand Menagerie",
["npcID"] = 176556,
["encounterID"] = 2441,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon Adept",
["npcID"] = 57316,
},
[355642] = {
["npcID"] = 179841,
},
[401216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[164907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Ritual Bones",
["npcID"] = 75715,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[391948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Coalescence",
["npcID"] = 190110,
},
["384978"] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[396599] = {
["source"] = "Rapid Wooly Ewe",
["event"] = "SPELL_CAST_START",
["npcID"] = 197200,
},
[328462] = {
["npcID"] = 168845,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[314942] = {
["npcID"] = 166869,
},
[396600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[394719] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[396007] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[361789] = {
["encounterName"] = "Prototype Pantheon",
["npcID"] = 183149,
["encounterID"] = 2544,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[260773] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[388696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[389433] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[424701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Keevah",
["npcID"] = 210051,
},
[199341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[359743] = {
["npcID"] = 182357,
},
[397043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[397899] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[365887] = {
["npcID"] = 184878,
},
[165193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stele",
["npcID"] = 72627,
},
[355057] = {
["npcID"] = 178139,
},
[393302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[365888] = {
["npcID"] = 184879,
},
[325312] = {
["npcID"] = 177214,
},
[320838] = {
["npcID"] = 160356,
},
[153268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[228011] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114522,
["encounterID"] = 1957,
},
[31707] = {
["npcID"] = 78116,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Flame",
["npcID"] = 198577,
},
[277035] = {
["npcID"] = 154018,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[359747] = {
["npcID"] = 181453,
},
[427323] = {
["source"] = "Cursed Stormrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
["413529"] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[361209] = {
["npcID"] = 182466,
},
[396020] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[404209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56762,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[381681] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[377505] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["npcID"] = 76407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1682,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[393443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veshrak of the North",
["npcID"] = 188713,
},
[394563] = {
["source"] = "Death's Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 190985,
},
[322892] = {
["npcID"] = 156560,
},
[365895] = {
["npcID"] = 183412,
},
[391913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[337227] = {
["npcID"] = 169102,
},
[329396] = {
["npcID"] = 178287,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[351562] = {
["encounterName"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177893,
},
[176821] = {
["npcID"] = 83754,
},
[396613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[390470] = {
["npcID"] = 189933,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["npcID"] = 153755,
["encounterID"] = 2312,
},
[389716] = {
["encounterName"] = "Terros",
["source"] = "Energized Earth",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 196993,
},
[396614] = {
["source"] = "Alpha Thornsided Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 197352,
},
[365898] = {
["npcID"] = 185346,
},
[392519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[396001] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[396615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[459479] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[402759] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[404807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[152964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[427333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[412999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 201677,
},
[365901] = {
["npcID"] = 185346,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[357085] = {
["npcID"] = 176959,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["npcID"] = 189233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[35511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[357083] = {
["npcID"] = 180417,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[335187] = {
["npcID"] = 177645,
},
[337235] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[279264] = {
["npcID"] = 176434,
},
[326997] = {
["npcID"] = 167607,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossian",
["npcID"] = 204093,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[228019] = {
["encounterName"] = "Opera Hall",
["npcID"] = 114522,
["encounterID"] = 1957,
},
[201983] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102287,
},
[393459] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[322903] = {
["encounterName"] = "General Kaal",
["encounterID"] = 2363,
["npcID"] = 162099,
},
[232115] = {
["npcID"] = 116549,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[201399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[413005] = {
["source"] = "Flame Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205672,
},
[365907] = {
["npcID"] = 184880,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[353621] = {
["npcID"] = 179133,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[365908] = {
["npcID"] = 184880,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[427341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[396625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toxic Swogmother",
["npcID"] = 197774,
},
[415055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pureblooded Proto-Drake",
["npcID"] = 205682,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[402769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201268,
},
[390483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 190888,
},
[382597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Shackler",
["npcID"] = 190993,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["npcID"] = 181954,
["encounterID"] = 2546,
},
[338637] = {
["npcID"] = 185105,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["npcID"] = 184522,
["encounterID"] = 2512,
},
[359768] = {
["npcID"] = 181360,
},
[304479] = {
["npcID"] = 156015,
},
[322909] = {
["npcID"] = 164033,
},
[308575] = {
["npcID"] = 158610,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102295,
},
[402772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Alpha",
["npcID"] = 202312,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[398677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cutthroat",
["npcID"] = 200849,
},
[359770] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["npcID"] = 181395,
["encounterID"] = 2542,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[413012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Additive",
["npcID"] = 205671,
},
[391268] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Earthwrought Smasher",
["npcID"] = 197595,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[400941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dampened Bones",
["npcID"] = 203470,
},
[273766] = {
["npcID"] = 177539,
},
[350280] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[273767] = {
["npcID"] = 168110,
},
[405332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[224953] = {
["npcID"] = 163662,
},
[335694] = {
["npcID"] = 177360,
},
[400057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanic Deepstrider",
["npcID"] = 200808,
},
[398681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigid Binder",
["npcID"] = 200623,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[172736] = {
["npcID"] = 79230,
},
[412226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sluggish Slug",
["npcID"] = 205754,
},
[278755] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Terrasentry",
["npcID"] = 197801,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[354933] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 176533,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contaminated Krolusk",
["npcID"] = 204310,
},
[398806] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[393523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[331108] = {
["npcID"] = 160048,
},
[357729] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 178072,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[294884] = {
["npcID"] = 152009,
},
[396637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Mountain Stonefang",
["npcID"] = 197376,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["npcID"] = 189234,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[353635] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[173762] = {
["npcID"] = 155216,
},
[341349] = {
["npcID"] = 173973,
},
[418478] = {
["source"] = "Rune Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207050,
},
[394591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[401236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nidharr",
["npcID"] = 201310,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["npcID"] = 77803,
["encounterID"] = 1715,
},
[351589] = {
["encounterName"] = "Sylvanas Windrunner",
["encounterID"] = 2435,
["npcID"] = 177893,
},
[337255] = {
["encounterName"] = "Tred'ova",
["encounterID"] = 2393,
["npcID"] = 164517,
},
[82794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[407296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[408927] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[394593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[396641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Mountain Stonefang",
["npcID"] = 197376,
},
[341352] = {
["npcID"] = 174092,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[392773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rymek",
["npcID"] = 188846,
},
[413024] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[398690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[393894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nezascar the Sightless",
["npcID"] = 196535,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[363879] = {
["npcID"] = 183747,
},
[405137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[193502] = {
["npcID"] = 98177,
},
[410978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[257784] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[398692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
["384597"] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
["375251"] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[356666] = {
["npcID"] = 179892,
},
[394598] = {
["source"] = "Shade of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 187559,
},
[396646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Thaumaturge Fural",
["npcID"] = 189905,
},
[201411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[387740] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[345454] = {
["npcID"] = 157833,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
["88194"] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["encounterID"] = 2557,
["npcID"] = 184124,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[402793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[322931] = {
["npcID"] = 158752,
},
[365934] = {
["npcID"] = 184860,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["encounterID"] = 2397,
["npcID"] = 164804,
},
[345457] = {
["npcID"] = 157833,
},
[420495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[374126] = {
["source"] = "Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187478,
},
[384365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Plainstomper",
["npcID"] = 191847,
},
[378222] = {
["source"] = "Time-Charged Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187324,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[422541] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shifting Falcon",
["npcID"] = 195324,
},
[358836] = {
["npcID"] = 180664,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[88186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empyrean Assassin",
["npcID"] = 45922,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[420485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deceiver Hr'qoth",
["npcID"] = 206784,
},
[390511] = {
["npcID"] = 189954,
},
[401368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanic Deepstrider",
["npcID"] = 200808,
},
[394607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[401175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebyssian",
["npcID"] = 201707,
},
[403855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[412046] = {
["source"] = "Monstrous Magmaclaw Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 204214,
},
[392561] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[328331] = {
["npcID"] = 168717,
},
[268129] = {
["npcID"] = 136470,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[411300] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[407285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[405908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[300414] = {
["npcID"] = 150143,
},
["183465"] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[322940] = {
["npcID"] = 172067,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 205735,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grazing Broadhoof",
["npcID"] = 193386,
},
[392565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[328322] = {
["encounterName"] = "Echelon",
["npcID"] = 164363,
["encounterID"] = 2380,
},
[331133] = {
["npcID"] = 160048,
},
[80344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp",
["npcID"] = 43014,
},
[355732] = {
["npcID"] = 179446,
},
[76813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[339325] = {
["npcID"] = 173298,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[257732] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[429427] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[402807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Shard Construct",
["npcID"] = 202326,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[398712] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[392569] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[410999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstripe Great Ray",
["npcID"] = 210050,
},
[449130] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[204492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jandvik Bonepiercer",
["npcID"] = 100948,
},
[411000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 191110,
},
[412215] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[367215] = {
["npcID"] = 184395,
},
[411001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[418338] = {
["source"] = "Morchie",
["event"] = "SPELL_CAST_START",
["npcID"] = 205708,
},
[12747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[196591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldscale Gazecrawler",
["npcID"] = 108185,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[393832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pureblooded Devilsaur",
["npcID"] = 205683,
},
[300424] = {
["npcID"] = 150160,
},
[413483] = {
["source"] = "Apiazhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200981,
},
[367079] = {
["encounterName"] = "Halondrus the Reclaimer",
["npcID"] = 180906,
["encounterID"] = 2529,
},
[393411] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[413622] = {
["source"] = "Infinite Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[394622] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[268274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Booty Fanatic",
["npcID"] = 136539,
},
[257736] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[419196] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Echo of Fyrakk",
["npcID"] = 208524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[400905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 198942,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Officer Pomeroy",
["npcID"] = 14438,
},
[384385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostsnout Bear",
["npcID"] = 199354,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[340300] = {
["npcID"] = 173720,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
["183088"] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90997,
},
[418225] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[188114] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[413431] = {
["source"] = "Void Lord Aurvizk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200865,
},
[396674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[390531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[392579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[370054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Bull",
["npcID"] = 186728,
},
[396675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beakers",
["npcID"] = 193177,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[183539] = {
["source"] = "Rotdrool Grabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 91002,
},
[230094] = {
["npcID"] = 115765,
},
[411700] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[277907] = {
["npcID"] = 175672,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[374152] = {
["source"] = "Hungry Muckjaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 197815,
},
[294290] = {
["npcID"] = 144293,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[300434] = {
["npcID"] = 150160,
},
[382435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[356942] = {
["npcID"] = 179837,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthbound Primalist",
["npcID"] = 193795,
},
[406918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[329104] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 164218,
["encounterID"] = 2381,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[300436] = {
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[333227] = {
["npcID"] = 169905,
},
[358983] = {
["npcID"] = 180865,
},
[111775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lilian Voss",
["npcID"] = 58722,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[418188] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[329107] = {
["encounterName"] = "Artificer Xy'mox",
["encounterID"] = 2405,
["npcID"] = 169219,
},
[381408] = {
["source"] = "Shiverweb Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192591,
},
[374158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hecutta",
["npcID"] = 207300,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 205735,
},
[401362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Half-bound Rageflame",
["npcID"] = 203699,
},
[396684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kangalo",
["npcID"] = 200738,
},
["209628"] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[420407] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Shadowflame Elemental",
["npcID"] = 209478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[394746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskron the Dazzling",
["npcID"] = 193273,
},
[407125] = {
["source"] = "Alliance Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 208165,
},
[368017] = {
["npcID"] = 185663,
},
[329110] = {
["encounterName"] = "Doctor Ickus",
["npcID"] = 164967,
["encounterID"] = 2384,
},
[393780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanius",
["npcID"] = 194147,
},
[267824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Essence",
["npcID"] = 135240,
},
[356099] = {
["npcID"] = 177395,
},
[258768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Gryphon",
["npcID"] = 193154,
},
[322968] = {
["npcID"] = 165111,
},
[338490] = {
["npcID"] = 162875,
},
[268865] = {
["npcID"] = 136934,
},
[265876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
["197974"] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Edgelord",
["npcID"] = 198873,
},
[345495] = {
["npcID"] = 175519,
},
[322970] = {
["npcID"] = 178462,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[392594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meatgrinder Sotok",
["npcID"] = 186777,
},
[417675] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[418200] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[76717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Earth Rager",
["npcID"] = 40023,
},
[423820] = {
["source"] = "Overseer Chardryn",
["event"] = "SPELL_CAST_START",
["npcID"] = 210912,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["encounterID"] = 1732,
},
[270613] = {
["npcID"] = 179079,
},
[355737] = {
["npcID"] = 179446,
},
[316830] = {
["npcID"] = 158631,
},
[266036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[370072] = {
["npcID"] = 186854,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[341404] = {
["npcID"] = 174017,
},
[418016] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[413427] = {
["source"] = "Pendule",
["event"] = "SPELL_CAST_START",
["npcID"] = 206074,
},
[347548] = {
["encounterName"] = "Sylvannas Windrunner",
["encounterID"] = 2435,
["npcID"] = 175732,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[338005] = {
["npcID"] = 165415,
},
[296355] = {
["npcID"] = 152612,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207638,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[368027] = {
["encounterName"] = "Lihuvim, Principal Architect",
["npcID"] = 182169,
["encounterID"] = 2539,
},
["412200"] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[322977] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["encounterID"] = 2401,
["npcID"] = 165408,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepbed Longwalker",
["npcID"] = 203917,
},
[351646] = {
["encounterName"] = "So'leah",
["encounterID"] = 2442,
["npcID"] = 177269,
},
[242391] = {
["npcID"] = 156212,
},
[322978] = {
["npcID"] = 159174,
},
[390554] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[420347] = {
["source"] = "Aryn Lightfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 209932,
},
[336418] = {
["npcID"] = 175857,
},
[265760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[322980] = {
["npcID"] = 163350,
},
[292264] = {
["encounterName"] = "King Mechagon",
["npcID"] = 144249,
["encounterID"] = 2260,
},
[351649] = {
["npcID"] = 176576,
},
[428564] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[241798] = {
["npcID"] = 114783,
},
[427964] = {
["source"] = "Blazing Incarnation",
["event"] = "SPELL_CAST_START",
["npcID"] = 213559,
},
[335268] = {
["npcID"] = 170064,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[398749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[229083] = {
["encounterName"] = "Viz'aduum the Watcher",
["npcID"] = 114790,
["encounterID"] = 2017,
},
[361890] = {
["npcID"] = 181453,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[175842] = {
["npcID"] = 85225,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[422414] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[390560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Patches",
["npcID"] = 215147,
},
[295438] = {
["npcID"] = 154039,
},
[325033] = {
["npcID"] = 167951,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[296365] = {
["npcID"] = 152612,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[325034] = {
["npcID"] = 167951,
},
[368037] = {
["npcID"] = 185677,
},
[417808] = {
["source"] = "Haywire Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 205889,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[274400] = {
["source"] = "Cutwater Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 129559,
},
[400802] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 187676,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
["376170"] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[325036] = {
["npcID"] = 167951,
},
[228625] = {
["npcID"] = 183425,
},
[394660] = {
["source"] = "Bluescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 188723,
},
[355753] = {
["npcID"] = 179894,
},
[235638] = {
["source"] = "Treant Grovetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[353706] = {
["encounterName"] = "Myza's Oasis",
["npcID"] = 176562,
["encounterID"] = 2440,
},
[396709] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[329310] = {
["npcID"] = 158813,
},
[366288] = {
["npcID"] = 184911,
},
[394662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sky Vixen Shokhari",
["npcID"] = 190761,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
["372201"] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[368042] = {
["npcID"] = 178508,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["encounterID"] = 2391,
["npcID"] = 164461,
},
[343470] = {
["npcID"] = 165919,
},
[427428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greedy Gessie",
["npcID"] = 209936,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[384481] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tapionnuq",
["npcID"] = 194731,
},
[75645] = {
["npcID"] = 39679,
},
[76682] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Twilight Element Warden",
["npcID"] = 40017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1036,
},
[358699] = {
["npcID"] = 180417,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[424401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterskorn Vrykul",
["npcID"] = 206037,
},
[345520] = {
["npcID"] = 157833,
},
[254959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Colossus",
["npcID"] = 122984,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[175848] = {
["npcID"] = 85225,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[385310] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[11975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[359856] = {
["encounterName"] = "The Jailer",
["encounterID"] = 2537,
["npcID"] = 180990,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[91004] = {
["npcID"] = 48418,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
["416139"] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[345523] = {
["npcID"] = 156203,
},
[396717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[316855] = {
["npcID"] = 177206,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[322999] = {
["encounterName"] = "Devos, Paragon of Loyalty",
["encounterID"] = 2359,
["npcID"] = 162061,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
["377204"] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[264520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[264525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[334329] = {
["npcID"] = 171376,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[274792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Released Crawg",
["npcID"] = 140149,
},
[16868] = {
["encounterName"] = "Baroness Anastari",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
["event"] = "SPELL_CAST_START",
["encounterID"] = 479,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[316859] = {
["npcID"] = 170042,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2820,
},
[398770] = {
["source"] = "Cormormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 200726,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[31602] = {
["encounterName"] = "Nerub'enkan",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 480,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Icecaller",
["npcID"] = 198501,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[412129] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 181398,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[242939] = {
["source"] = "Black Harvest Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 121416,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["npcID"] = 96512,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1836,
},
[390583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[325498] = {
["npcID"] = 157212,
},
[88959] = {
["npcID"] = 45935,
},
[415624] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[172818] = {
["npcID"] = 184074,
},
[427444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[339391] = {
["npcID"] = 158259,
},
[343664] = {
["npcID"] = 162452,
},
[351678] = {
["npcID"] = 178271,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["npcID"] = 195580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[339392] = {
["npcID"] = 158259,
},
[31601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Crawler",
["npcID"] = 10412,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[256864] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[341441] = {
["npcID"] = 174069,
},
[351680] = {
["encounterName"] = "Fatescribe Roh-Kalo",
["encounterID"] = 2431,
["npcID"] = 175730,
},
[428471] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Dream",
["npcID"] = 213143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[363967] = {
["npcID"] = 185436,
},
[54338] = {
["source"] = "Mad Scientist",
["event"] = "SPELL_CAST_START",
["npcID"] = 16020,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[263628] = {
["npcID"] = 136139,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[11443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[402983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[320966] = {
["encounterName"] = "Kin-Tara",
["encounterID"] = 2357,
["npcID"] = 162059,
},
[388542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Brute",
["npcID"] = 192928,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[394881] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Flamecaller",
["npcID"] = 198502,
},
[80781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockwing Screecher",
["npcID"] = 10409,
},
[80780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[398782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Hunter",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["encounterID"] = 2543,
["npcID"] = 183138,
},
[265679] = {
["npcID"] = 129525,
},
[258978] = {
["source"] = "Shadowblade Razi",
["event"] = "SPELL_CAST_START",
["npcID"] = 130912,
},
[392640] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[430218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[341623] = {
["encounterName"] = "Lady Inerva Darkvein",
["npcID"] = 165521,
["encounterID"] = 2406,
},
[34356] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[294349] = {
["npcID"] = 144301,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2635,
},
[355782] = {
["npcID"] = 179842,
},
[22907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Sharpshooter",
["npcID"] = 16704,
},
[417215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[419263] = {
["encounterName"] = "The Power of Temptation",
["source"] = "Echo of Fyrakk",
["npcID"] = 208524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2740,
},
[347679] = {
["encounterName"] = "The Tarragrue",
["npcID"] = 175611,
["encounterID"] = 2423,
},
[415556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dr. Boom",
["npcID"] = 215146,
},
[383433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Living Flame",
["npcID"] = 194147,
},
[329163] = {
["npcID"] = 168837,
},
[396739] = {
["source"] = "Ruffian Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193819,
},
[406978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Guard",
["npcID"] = 202319,
},
[302543] = {
["npcID"] = 155483,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[30741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Warlock Nethekurse",
["npcID"] = 16807,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[335308] = {
["npcID"] = 171799,
},
[288210] = {
["npcID"] = 163032,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[33508] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Darkcaster",
["npcID"] = 17694,
},
[244665] = {
["source"] = "Ember of Azzinoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 122712,
},
[355787] = {
["encounterName"] = "Painsmith Raznal",
["encounterID"] = 2430,
["npcID"] = 176523,
},
[35124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[440131] = {
["source"] = "Alleria Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 215014,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[204644] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[417683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[402887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholna",
["npcID"] = 199853,
},
[339407] = {
["npcID"] = 173280,
},
[382410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[150424] = {
["source"] = "Amani Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215675,
},
[402888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[391026] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[327122] = {
["encounterName"] = "Sire Denathrius",
["encounterID"] = 2407,
["npcID"] = 168158,
},
[329170] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["npcID"] = 99651,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[329171] = {
["encounterName"] = "Lord Chamberlain",
["npcID"] = 165737,
["encounterID"] = 2381,
},
[394775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldoren the Reborn",
["npcID"] = 193234,
},
[417227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overfiend",
["npcID"] = 217429,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-08-01 22:42:59 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 22:42:01 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 22:41:16 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 22:40:10 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 22:36:52 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 19:34:59 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 19:31:05 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 19:30:09 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 19:29:20 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 18:54:06 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:49:30 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:39:04 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:23:30 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:15:54 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:14:58 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:14:29 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 18:11:04 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronolie",
"2024-08-01 17:36:08 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
"2024-08-01 14:30:10 | INIT | Plater-v583b-Retail | Framework v556 | 11.0.0 | enUS | Cronîx",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
